
C:/Users/nipuna1/Documents/EE109/Final_Project_Files/C_Program_Files/final_project.elf:     file format elf32-littlenios2
C:/Users/nipuna1/Documents/EE109/Final_Project_Files/C_Program_Files/final_project.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000168

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x00005c14 memsz 0x00005c14 flags r-x
    LOAD off    0x00006c34 vaddr 0x00005c34 paddr 0x00007b14 align 2**12
         filesz 0x00001ee0 memsz 0x00001ee0 flags rw-
    LOAD off    0x000099f4 vaddr 0x000099f4 paddr 0x000099f4 align 2**12
         filesz 0x00000000 memsz 0x0000016c flags rw-
    LOAD off    0x00009000 vaddr 0x08200000 paddr 0x00009b60 align 2**12
         filesz 0x00000080 memsz 0x00000080 flags rw-
    LOAD off    0x0000a000 vaddr 0x08201000 paddr 0x00009be0 align 2**12
         filesz 0x00001000 memsz 0x00001000 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000148  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00005814  00000168  00000168  00001168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000002b8  0000597c  0000597c  0000697c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001ee0  00005c34  00007b14  00006c34  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000016c  000099f4  000099f4  000099f4  2**2
                  ALLOC, SMALL_DATA
  6 .descriptor_memory 00000080  08200000  00009b60  00009000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .packet_memory 00001000  08201000  00009be0  0000a000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .comment      00000026  00000000  00000000  0000b000  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000a98  00000000  00000000  0000b028  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubnames 00001d0c  00000000  00000000  0000bac0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_info   00019f58  00000000  00000000  0000d7cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 00006287  00000000  00000000  00027724  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000edce  00000000  00000000  0002d9ab  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  0000186c  00000000  00000000  0003c77c  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000037fa  00000000  00000000  0003dfe8  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_loc    0000539c  00000000  00000000  000417e2  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_alt_sim_info 00000020  00000000  00000000  00046b80  2**2
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_ranges 000002c8  00000000  00000000  00046ba0  2**3
                  CONTENTS, READONLY, DEBUGGING
 19 .thread_model 00000003  00000000  00000000  0004aea0  2**0
                  CONTENTS, READONLY
 20 .cpu          00000003  00000000  00000000  0004aea3  2**0
                  CONTENTS, READONLY
 21 .qsys         00000001  00000000  00000000  0004aea6  2**0
                  CONTENTS, READONLY
 22 .simulation_enabled 00000001  00000000  00000000  0004aea7  2**0
                  CONTENTS, READONLY
 23 .sysid_hash   00000004  00000000  00000000  0004aea8  2**0
                  CONTENTS, READONLY
 24 .sysid_base   00000004  00000000  00000000  0004aeac  2**0
                  CONTENTS, READONLY
 25 .sysid_time   00000004  00000000  00000000  0004aeb0  2**0
                  CONTENTS, READONLY
 26 .stderr_dev   00000009  00000000  00000000  0004aeb4  2**0
                  CONTENTS, READONLY
 27 .stdin_dev    00000009  00000000  00000000  0004aebd  2**0
                  CONTENTS, READONLY
 28 .stdout_dev   00000009  00000000  00000000  0004aec6  2**0
                  CONTENTS, READONLY
 29 .sopc_system_name 0000000b  00000000  00000000  0004aecf  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000168 l    d  .text	00000000 .text
0000597c l    d  .rodata	00000000 .rodata
00005c34 l    d  .rwdata	00000000 .rwdata
000099f4 l    d  .bss	00000000 .bss
08200000 l    d  .descriptor_memory	00000000 .descriptor_memory
08201000 l    d  .packet_memory	00000000 .packet_memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
000001a0 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 camera.c
00007a80 l     O .rwdata	00000004 back_buff_reg
00007a78 l     O .rwdata	00000004 front_buff_reg
00007a7c l     O .rwdata	00000004 status_reg
00000000 l    df *ABS*	00000000 char_lcd.c
00000000 l    df *ABS*	00000000 ethernet.c
000099f8 l     O .bss	00000004 tx_frame
000099f4 l     O .bss	00000004 rx_frame
08200040 l     O .descriptor_memory	00000020 tx_descriptor
08200060 l     O .descriptor_memory	00000020 tx_descriptor_end
08201800 l     O .packet_memory	00000800 tx_buff
00009a00 l     O .bss	00000004 sgdma_tx_dev
000099fc l     O .bss	00000004 sgdma_rx_dev
00000554 l     F .text	0000006c ethernet_rx
08200000 l     O .descriptor_memory	00000020 rx_descriptor
08200020 l     O .descriptor_memory	00000020 rx_descriptor_end
08201000 l     O .packet_memory	00000800 rx_buff
00009a04 l     O .bss	00000004 rx_isr
00000000 l    df *ABS*	00000000 green_leds.c
00007a8c l     O .rwdata	00000004 data_reg
00000000 l    df *ABS*	00000000 hex.c
00007a94 l     O .rwdata	00000004 hex_3to0
00007a90 l     O .rwdata	00000004 hex_7to4
00000630 l     F .text	00000074 lookup_16
00005a6a l     O .rodata	00000010 table
000006a4 l     F .text	00000098 lookup_10
00000000 l    df *ABS*	00000000 lcd.c
00007aa0 l     O .rwdata	00000004 status_reg
00007aa4 l     O .rwdata	00000004 back_buff_reg
00007a9c l     O .rwdata	00000004 front_buff_reg
00007a98 l     O .rwdata	00000004 char_buff_base
00000000 l    df *ABS*	00000000 pushbuttons.c
00007ab0 l     O .rwdata	00000004 data_reg
00007aac l     O .rwdata	00000004 interrupt_mask_reg
00007aa8 l     O .rwdata	00000004 edge_capture_reg
00000000 l    df *ABS*	00000000 red_leds.c
00007ab4 l     O .rwdata	00000004 data_reg
00000000 l    df *ABS*	00000000 switches.c
00007ac0 l     O .rwdata	00000004 data_reg
00007abc l     O .rwdata	00000004 interrupt_mask_reg
00007ab8 l     O .rwdata	00000004 edge_capture_reg
00000000 l    df *ABS*	00000000 vga.c
00007acc l     O .rwdata	00000004 status_reg
00007ad0 l     O .rwdata	00000004 back_buff_reg
00007ac4 l     O .rwdata	00000004 front_buff_reg
00007ac8 l     O .rwdata	00000004 char_buff_base
00000000 l    df *ABS*	00000000 final_project.c
00000000 l    df *ABS*	00000000 system_globals.c
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_printf.c
00000000 l    df *ABS*	00000000 alt_putchar.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
00005c34 l     O .rwdata	00001060 JTAG_UART
00006c94 l     O .rwdata	00000030 sgdma_rx
00006cc4 l     O .rwdata	00000030 sgdma_tx
00006cf4 l     O .rwdata	0000002c Accelerometer
00006d20 l     O .rwdata	00000030 Camera_Config
00006d50 l     O .rwdata	00000030 OnBoard_AV
00006d80 l     O .rwdata	00000030 Audio
00006db0 l     O .rwdata	0000002c Char_LCD_16x2
00006ddc l     O .rwdata	0000002c IrDA
00006e08 l     O .rwdata	0000002c Expansion_JP5
00006e34 l     O .rwdata	0000002c Green_LEDs
00006e60 l     O .rwdata	0000002c HEX3_HEX0
00006e8c l     O .rwdata	0000002c HEX7_HEX4
00006eb8 l     O .rwdata	0000002c Pushbuttons
00006ee4 l     O .rwdata	0000002c Red_LEDs
00006f10 l     O .rwdata	0000002c Slider_Switches
00006f3c l     O .rwdata	00000038 PS2_Port
00006f74 l     O .rwdata	00000038 PS2_Port_Dual
00006fac l     O .rwdata	0000002c Serial_Port
00006fd8 l     O .rwdata	00000034 USB
0000700c l     O .rwdata	00000048 LCD_Char_Buffer
00007054 l     O .rwdata	00000048 VGA_Char_Buffer
0000709c l     O .rwdata	0000002c SD_Card
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
000013d0 l     F .text	00000054 altera_avalon_jtag_uart_timeout
0000149c l     F .text	00000134 altera_avalon_jtag_uart_irq
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_sgdma.c
00001b6c l     F .text	00000068 alt_avalon_sgdma_irq
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00001f9c l     F .text	0000003c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_character_lcd.c
00000000 l    df *ABS*	00000000 altera_up_avalon_irda.c
00000000 l    df *ABS*	00000000 altera_up_avalon_ps2.c
00000000 l    df *ABS*	00000000 altera_up_avalon_rs232.c
00000000 l    df *ABS*	00000000 altera_up_avalon_video_character_buffer_with_dma.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_close.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
00002d0c l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00002e14 l     F .text	00000064 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_remap_uncached.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_dcache_flush.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 impure.c
00007270 l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00003a18 l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00003dfc l     F .text	00000058 std
00003f08 l     F .text	00000008 __fp_lock
00003f10 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00000000 l    df *ABS*	00000000 alt_isatty.c
00000000 l    df *ABS*	00000000 alt_lseek.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00007b10 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0000027c g     F .text	00000010 char_lcd_cursor_off
00000228 g     F .text	0000002c char_lcd_move_cursor
00000b0c g     F .text	00000018 vga_set_front_buffer
00005424 g     F .text	00000070 _isatty_r
00000dbc g     F .text	00000050 alt_main
00002818 g     F .text	0000001c alt_up_ps2_disable_read_interrupt
00009a60 g     O .bss	00000100 alt_irq
00005494 g     F .text	00000078 _lseek_r
00007b14 g       *ABS*	00000000 __flash_rwdata_start
0000209c g     F .text	00000010 alt_up_character_lcd_send_cmd
0000029c g     F .text	00000010 char_lcd_shift_right
00009b60 g       *ABS*	00000000 __alt_heap_start
00001a3c g     F .text	00000094 alt_avalon_sgdma_do_sync_transfer
00005060 g     F .text	00000068 __sseek
00003e64 g     F .text	000000a4 __sinit
00003790 g     F .text	00000130 __swbuf_r
00002a20 g     F .text	00000088 alt_up_char_buffer_string
000024d8 g     F .text	0000000c read_CE_bit
00003f64 g     F .text	00000068 __sfmoreglue
00005738 g     F .text	00000004 __malloc_unlock
000025a8 g     F .text	00000080 alt_up_ps2_read_data_byte_timeout
000008c8 g     F .text	00000038 lcd_write
000028c4 g     F .text	00000080 alt_up_rs232_read_fd
00000780 g     F .text	00000044 hex_write_3to0
00000a18 g     F .text	0000000c red_leds_set
00002aa8 g     F .text	00000058 alt_up_char_buffer_draw
00000b88 g     F .text	00000040 vga_clear_text
00001bd4 g     F .text	0000012c alt_avalon_sgdma_construct_descriptor_burst
0000089c g     F .text	0000000c lcd_set_back_buffer
00003f54 g     F .text	00000010 _cleanup
00000900 g     F .text	00000060 lcd_draw_rectangle
00000000  w      *UND*	00000000 __errno
00001fd8 g     F .text	0000001c get_DDRAM_addr
00000000 g     F .entry	0000001c __reset
000005cc g     F .text	00000014 green_leds_update
00001dd8 g     F .text	0000004c alt_avalon_sgdma_construct_stream_to_mem_desc_burst
00000020 g       *ABS*	00000000 __flash_exceptions_start
00000960 g     F .text	00000040 lcd_clear_text
000053b0 g     F .text	00000074 _fstat_r
00009a28 g     O .bss	00000004 errno
00009a18 g     O .bss	00000004 alt_argv
0000fa78 g       *ABS*	00000000 _gp
00000884 g     F .text	00000018 lcd_set_front_buffer
000008a8 g     F .text	00000020 lcd_swap_buffers
000070f0 g     O .rwdata	00000180 alt_fd_list
00002d84 g     F .text	00000070 alt_find_dev
000033d4 g     F .text	000000a0 memcpy
0000206c g     F .text	00000020 alt_up_character_lcd_write_fd
000009a0 g     F .text	0000000c pushbuttons_get_data
00002b00 g     F .text	00000028 alt_up_char_buffer_clear
00003f48 g     F .text	0000000c _cleanup_r
00002e78 g     F .text	00000098 alt_io_redirect
00002404 g     F .text	0000007c alt_up_irda_write_fd
00002878 g     F .text	0000004c alt_up_rs232_read_data
00001d48 g     F .text	00000050 alt_avalon_sgdma_construct_mem_to_stream_desc_burst
000024b4 g     F .text	00000010 alt_up_irda_get_used_space_in_read_FIFO
00001644 g     F .text	00000168 altera_avalon_jtag_uart_read
00005618 g     F .text	00000084 isatty
00000a8c g     F .text	00000010 switches_clear_edge_capture
00002480 g     F .text	0000001c alt_up_irda_disable_read_interrupt
000032ec g     F .text	0000003c alt_icache_flush
00009a2c g     O .bss	00000004 __malloc_top_pad
000009c4 g     F .text	0000000c pushbuttons_get_edge_capture
00000bc8 g     F .text	00000060 vga_draw_rectangle
000001c8 g     F .text	00000034 camera_enable_dma
00001a08 g     F .text	0000001c alt_avalon_sgdma_stop
00004fe8 g     F .text	00000070 _sbrk_r
000007c4 g     F .text	0000008c hex_write
0000550c g     F .text	00000078 _read_r
000031c0 g     F .text	00000004 alt_dcache_flush
00007af0 g     O .rwdata	00000004 alt_max_fd
0000284c g     F .text	0000000c alt_up_rs232_check_parity
0000528c g     F .text	00000110 _fclose_r
00000334 g     F .text	00000080 ethernet_tx
000024e4 g     F .text	00000008 read_num_bytes_available
00003dc8 g     F .text	00000034 fflush
00009a30 g     O .bss	00000004 __malloc_max_sbrked_mem
00000c3c g     F .text	000000bc alt_irq_register
000024c4 g     F .text	0000000c read_RI_bit
0000569c g     F .text	00000098 lseek
00007b04 g     O .rwdata	00000004 _global_impure_ptr
00009b60 g       *ABS*	00000000 __bss_end
00000a68 g     F .text	0000000c switches_set_interrupt_mask
00001ad0 g     F .text	0000009c alt_avalon_sgdma_do_async_transfer
0000310c g     F .text	000000ac alt_tick
0c000000 g       *ABS*	00000000 __alt_mem_Flash_flash_data
000024f8 g     F .text	00000008 read_data_byte
000002ac g     F .text	00000008 ethernet_get_tx_frame
00003f30 g     F .text	00000018 __fp_lock_all
000030d8 g     F .text	00000034 alt_alarm_stop
000024d0 g     F .text	00000008 read_RE_bit
08200000 g       *ABS*	00000000 __alt_mem_descriptor_memory
00009a10 g     O .bss	00000004 alt_irq_active
000002b4 g     F .text	00000008 ethernet_get_rx_frame
00009a08 g     O .bss	00000004 tx_frame
000023dc g     F .text	00000010 alt_up_irda_get_available_space_in_write_FIFO
000000ec g     F .exceptions	0000007c alt_irq_handler
000070c8 g     O .rwdata	00000028 alt_dev_null
000020ac g     F .text	0000001c alt_up_character_lcd_cursor_blink_on
00001f28 g     F .text	00000030 alt_avalon_sgdma_check_descriptor_status
000026ac g     F .text	00000040 alt_up_ps2_write_data_byte
00002d08 g     F .text	00000004 alt_dcache_flush_all
00000a5c g     F .text	0000000c switches_get_positions
000005c0 g     F .text	0000000c green_leds_set
00000b30 g     F .text	00000020 vga_swap_buffers
00007b14 g       *ABS*	00000000 __ram_rwdata_end
00007ae8 g     O .rwdata	00000008 alt_dev_list
00005884 g     F .text	000000f4 write
000019d8 g     F .text	00000030 alt_avalon_sgdma_enable_desc_poll
00003578 g     F .text	000000e8 _putc_r
00005c34 g       *ABS*	00000000 __ram_rodata_end
00005598 g     F .text	00000080 fstat
0000296c g     F .text	00000070 alt_up_rs232_write_fd
00000000 g       *ABS*	00000000 __alt_mem_SDRAM
00000b50 g     F .text	00000038 vga_write
0000031c g     F .text	00000018 ntohl
00001d98 g     F .text	00000040 alt_avalon_sgdma_construct_mem_to_stream_desc
00001928 g     F .text	00000010 alt_avalon_sgdma_register_callback
000001fc g     F .text	00000020 camera_swap_buffers
00009b60 g       *ABS*	00000000 end
000026ec g     F .text	00000070 alt_up_ps2_write_fd
000009d0 g     F .text	00000010 pushbuttons_clear_edge_capture
000022e4 g     F .text	0000000c alt_up_irda_check_parity
00002b48 g     F .text	00000050 alt_up_char_buffer_init
00000a74 g     F .text	0000000c switches_get_interrupt_mask
00001424 g     F .text	00000078 altera_avalon_jtag_uart_init
08000000 g       *ABS*	00000000 __alt_stack_pointer
000019b8 g     F .text	00000020 alt_avalon_sgdma_disable_desc_poll
00001f58 g     F .text	00000044 alt_avalon_timer_sc_init
000017ac g     F .text	0000017c altera_avalon_jtag_uart_write
00001e94 g     F .text	00000038 alt_avalon_sgdma_construct_mem_to_mem_desc
00003e54 g     F .text	00000004 __sfp_lock_acquire
00002040 g     F .text	0000002c alt_up_character_lcd_write
00001e24 g     F .text	00000028 alt_avalon_sgdma_construct_stream_to_mem_desc
000041e8 g     F .text	00000314 _free_r
00000e0c g     F .text	000001dc alt_printf
00003a1c g     F .text	000001b0 __call_exitprocs
000005e0 g     F .text	00000018 green_leds_clear
00000a50 g     F .text	0000000c red_leds_clear_all
00007b0c g     O .rwdata	00000004 __malloc_sbrk_base
00000168 g     F .text	0000003c _start
00007a88 g     O .rwdata	00000004 data_ptr
00009a20 g     O .bss	00000004 _alt_tick_rate
00001ecc g     F .text	0000005c alt_avalon_sgdma_open
00009a24 g     O .bss	00000004 _alt_nticks
0000573c g     F .text	000000f8 read
00001030 g     F .text	000002d0 alt_sys_init
00002150 g     F .text	00000090 alt_up_character_lcd_shift_display
000003b4 g     F .text	000001a0 ethernet_init
00002520 g     F .text	00000030 alt_up_ps2_clear_fifo
00002944 g     F .text	00000010 alt_up_rs232_get_available_space_in_write_FIFO
000030b0 g     F .text	00000028 alt_remap_uncached
000020e4 g     F .text	0000006c alt_up_character_lcd_erase_pos
00001398 g     F .text	00000038 altera_avalon_jtag_uart_close
00005c34 g       *ABS*	00000000 __ram_rwdata_start
0000597c g       *ABS*	00000000 __ram_rodata_start
00009a38 g     O .bss	00000028 __malloc_current_mallinfo
000002f4 g     F .text	00000028 htonl
08201000 g       *ABS*	00000000 __alt_mem_packet_memory
00001370 g     F .text	00000028 altera_avalon_jtag_uart_read_fd
00003280 g     F .text	0000006c alt_get_fd
0000521c g     F .text	00000070 _close_r
00003360 g     F .text	00000074 memcmp
00001320 g     F .text	00000028 altera_avalon_jtag_uart_close_fd
00009b60 g       *ABS*	00000000 __alt_stack_base
00001300 g     F .text	00000020 altera_avalon_jtag_uart_ioctl_fd
0000249c g     F .text	00000018 alt_up_irda_enable_read_interrupt
000038dc g     F .text	0000013c __swsetup_r
00003fcc g     F .text	000000f0 __sfp
00007670 g     O .rwdata	00000408 __malloc_av_
00003e60 g     F .text	00000004 __sinit_lock_release
00005144 g     F .text	00000060 __sread
000029dc g     F .text	0000001c alt_up_rs232_disable_read_interrupt
000031c4 g     F .text	000000bc alt_find_file
00002d14 g     F .text	00000070 alt_dev_llist_insert
00005734 g     F .text	00000004 __malloc_lock
00005834 g     F .text	00000050 sbrk
00001a24 g     F .text	00000018 alt_avalon_sgdma_start
00003bcc g     F .text	000001fc _fflush_r
00000b24 g     F .text	0000000c vga_set_back_buffer
000099f4 g       *ABS*	00000000 __bss_start
00004f50 g     F .text	00000098 memset
00000c34 g     F .text	00000008 main
00000a9c g     F .text	0000003c switches_enable_interrupts
00009a1c g     O .bss	00000004 alt_envp
00009a34 g     O .bss	00000004 __malloc_max_total_mem
00002b28 g     F .text	00000020 alt_up_char_buffer_open_dev
00001348 g     F .text	00000028 altera_avalon_jtag_uart_write_fd
000038c0 g     F .text	0000001c __swbuf
00007ad8 g     O .rwdata	00000008 alt_sgdma_list
000021e0 g     F .text	00000090 alt_up_character_lcd_shift_cursor
00005058 g     F .text	00000008 __sclose
08000000 g       *ABS*	00000000 __alt_heap_limit
00000618 g     F .text	0000000c hex_clear_3to0
0000539c g     F .text	00000014 fclose
00002550 g     F .text	00000058 alt_up_ps2_read_data_byte
000002d4 g     F .text	00000020 ntohs
00004810 g     F .text	00000740 _malloc_r
00007af4 g     O .rwdata	00000004 alt_errno
00009a0c g     O .bss	00000004 rx_frame
000045c4 g     F .text	000000b8 _fwalk
000023ec g     F .text	00000018 alt_up_irda_write_data
00002500 g     F .text	00000020 alt_up_ps2_open_dev
00003474 g     F .text	00000104 putc
000022c4 g     F .text	00000020 alt_up_character_lcd_open_dev
000040bc g     F .text	0000012c _malloc_trim_r
00002834 g     F .text	00000018 alt_up_ps2_enable_read_interrupt
00000604 g     F .text	00000014 hex_clear
0000208c g     F .text	00000010 alt_up_character_lcd_init
00003660 g     F .text	000000bc strcmp
0000021c g     F .text	0000000c camera_get_front_buffer
0000597c g       *ABS*	00000000 __flash_rodata_start
00000a80 g     F .text	0000000c switches_get_edge_capture
00002858 g     F .text	00000020 alt_up_rs232_open_dev
00001010 g     F .text	00000020 alt_irq_init
0000308c g     F .text	00000024 alt_release_fd
000024ec g     F .text	0000000c read_data_valid
000020c8 g     F .text	0000001c alt_up_character_lcd_cursor_off
000001a4 g     F .text	00000018 camera_set_front_buffer
0000275c g     F .text	00000034 alt_up_ps2_write_data_byte_with_ack
000009b8 g     F .text	0000000c pushbuttons_get_interrupt_mask
000051a4 g     F .text	00000078 _write_r
00000a24 g     F .text	00000014 red_leds_update
00007b00 g     O .rwdata	00000004 _impure_ptr
00009a14 g     O .bss	00000004 alt_argc
00000ad8 g     F .text	00000034 vga_enable_dma
00000020 g       .exceptions	00000000 alt_irq_entry
00003f18 g     F .text	00000018 __fp_unlock_all
00007ae0 g     O .rwdata	00000008 alt_fs_list
000029f8 g     F .text	00000018 alt_up_rs232_enable_read_interrupt
00002954 g     F .text	00000018 alt_up_rs232_write_data
000005f8 g     F .text	0000000c green_leds_clear_all
00000020 g       *ABS*	00000000 __ram_exceptions_start
00000624 g     F .text	0000000c hex_clear_7to4
00007b14 g       *ABS*	00000000 _edata
00000a38 g     F .text	00000018 red_leds_clear
00009b60 g       *ABS*	00000000 _end
000002bc g     F .text	00000018 htons
00000168 g       *ABS*	00000000 __ram_exceptions_end
000015d0 g     F .text	00000074 altera_avalon_jtag_uart_ioctl
000001bc g     F .text	0000000c camera_set_back_buffer
00001d00 g     F .text	00000048 alt_avalon_sgdma_construct_descriptor
000050c8 g     F .text	0000007c __swrite
00007b08 g     O .rwdata	00000004 __malloc_trim_threshold
000031b8 g     F .text	00000008 altera_nios2_qsys_irq_init
00003328 g     F .text	00000038 exit
00002310 g     F .text	0000004c alt_up_irda_read_data
000044fc g     F .text	000000c8 _fwalk_reent
00002790 g     F .text	00000088 alt_up_ps2_init
08000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00003e58 g     F .text	00000004 __sfp_lock_release
000009ac g     F .text	0000000c pushbuttons_set_interrupt_mask
000009e0 g     F .text	00000038 pushbuttons_enable_interrupts
00001ff4 g     F .text	0000004c alt_up_character_lcd_string
000022f0 g     F .text	00000020 alt_up_irda_open_dev
0000028c g     F .text	00000010 char_lcd_shift_left
00005584 g     F .text	00000014 _exit
00002b98 g     F .text	00000094 alt_alarm_start
0000467c g     F .text	00000194 __smakebuf_r
00002650 g     F .text	0000005c alt_up_ps2_wait_for_ack
0000371c g     F .text	00000074 strlen
00002f10 g     F .text	0000017c open
00000fe8 g     F .text	00000028 alt_putchar
00002df4 g     F .text	00000020 alt_icache_flush_all
0000073c g     F .text	00000044 hex_write_7to4
00002270 g     F .text	00000054 alt_up_character_lcd_set_cursor_pos
00007ad4 g     O .rwdata	00000004 alt_priority_mask
00000c28 g     F .text	0000000c vga_get_front_buffer
00002628 g     F .text	00000028 alt_up_ps2_read_fd
00001e4c g     F .text	00000048 alt_avalon_sgdma_construct_mem_to_mem_desc_burst
0000235c g     F .text	00000080 alt_up_irda_read_fd
00007a84 g     O .rwdata	00000004 instruction_ptr
00007af8 g     O .rwdata	00000008 alt_alarm_list
00000850 g     F .text	00000034 lcd_enable_dma
00002a10 g     F .text	00000010 alt_up_rs232_get_used_space_in_read_FIFO
00002c2c g     F .text	000000dc close
00000cf8 g     F .text	000000c4 alt_load
00001938 g     F .text	00000080 alt_avalon_sgdma_init
00000000  w      *UND*	00000000 free
00003e5c g     F .text	00000004 __sinit_lock_acquire
00000254 g     F .text	00000028 char_lcd_write



Disassembly of section .entry:

00000000 <__reset>:
   0:	00840014 	movui	r2,4096
   4:	1001483a 	initi	r2
   8:	10bff804 	addi	r2,r2,-32
   c:	00bffd16 	blt	zero,r2,4 <__reset+0x4>
  10:	00400034 	movhi	at,0
  14:	08405a14 	ori	at,at,360
  18:	0800683a 	jmp	at
  1c:	00000000 	call	0 <__reset>

Disassembly of section .exceptions:

00000020 <alt_exception>:
  20:	deffed04 	addi	sp,sp,-76
  24:	dfc00015 	stw	ra,0(sp)
  28:	d8400215 	stw	at,8(sp)
  2c:	d8800315 	stw	r2,12(sp)
  30:	d8c00415 	stw	r3,16(sp)
  34:	d9000515 	stw	r4,20(sp)
  38:	d9400615 	stw	r5,24(sp)
  3c:	d9800715 	stw	r6,28(sp)
  40:	d9c00815 	stw	r7,32(sp)
  44:	000b307a 	rdctl	r5,estatus
  48:	da000915 	stw	r8,36(sp)
  4c:	da400a15 	stw	r9,40(sp)
  50:	da800b15 	stw	r10,44(sp)
  54:	dac00c15 	stw	r11,48(sp)
  58:	db000d15 	stw	r12,52(sp)
  5c:	db400e15 	stw	r13,56(sp)
  60:	db800f15 	stw	r14,60(sp)
  64:	dbc01015 	stw	r15,64(sp)
  68:	d9401115 	stw	r5,68(sp)
  6c:	ebffff04 	addi	r15,ea,-4
  70:	dbc01215 	stw	r15,72(sp)
  74:	0009313a 	rdctl	r4,ipending
  78:	2880004c 	andi	r2,r5,1
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
  84:	00000ec0 	call	ec <alt_irq_handler>
  88:	00000306 	br	98 <alt_exception+0x78>
  8c:	df401215 	stw	ea,72(sp)
  90:	e8bfff17 	ldw	r2,-4(ea)
  94:	003da03a 	break	0
  98:	d9401117 	ldw	r5,68(sp)
  9c:	df401217 	ldw	ea,72(sp)
  a0:	dfc00017 	ldw	ra,0(sp)
  a4:	2801707a 	wrctl	estatus,r5
  a8:	d8400217 	ldw	at,8(sp)
  ac:	d8800317 	ldw	r2,12(sp)
  b0:	d8c00417 	ldw	r3,16(sp)
  b4:	d9000517 	ldw	r4,20(sp)
  b8:	d9400617 	ldw	r5,24(sp)
  bc:	d9800717 	ldw	r6,28(sp)
  c0:	d9c00817 	ldw	r7,32(sp)
  c4:	da000917 	ldw	r8,36(sp)
  c8:	da400a17 	ldw	r9,40(sp)
  cc:	da800b17 	ldw	r10,44(sp)
  d0:	dac00c17 	ldw	r11,48(sp)
  d4:	db000d17 	ldw	r12,52(sp)
  d8:	db400e17 	ldw	r13,56(sp)
  dc:	db800f17 	ldw	r14,60(sp)
  e0:	dbc01017 	ldw	r15,64(sp)
  e4:	dec01304 	addi	sp,sp,76
  e8:	ef80083a 	eret

000000ec <alt_irq_handler>:
  ec:	defffe04 	addi	sp,sp,-8
  f0:	dfc00115 	stw	ra,4(sp)
  f4:	dc000015 	stw	r16,0(sp)
  f8:	000d313a 	rdctl	r6,ipending
  fc:	04000074 	movhi	r16,1
 100:	84269804 	addi	r16,r16,-26016
 104:	3080004c 	andi	r2,r6,1
 108:	1005003a 	cmpeq	r2,r2,zero
 10c:	10000a1e 	bne	r2,zero,138 <alt_irq_handler+0x4c>
 110:	000b883a 	mov	r5,zero
 114:	280490fa 	slli	r2,r5,3
 118:	1405883a 	add	r2,r2,r16
 11c:	10c00017 	ldw	r3,0(r2)
 120:	11000117 	ldw	r4,4(r2)
 124:	183ee83a 	callr	r3
 128:	0005313a 	rdctl	r2,ipending
 12c:	10000a26 	beq	r2,zero,158 <alt_irq_handler+0x6c>
 130:	100d883a 	mov	r6,r2
 134:	003ff306 	br	104 <alt_irq_handler+0x18>
 138:	00c00044 	movi	r3,1
 13c:	000b883a 	mov	r5,zero
 140:	1809883a 	mov	r4,r3
 144:	18c7883a 	add	r3,r3,r3
 148:	290b883a 	add	r5,r5,r4
 14c:	30c4703a 	and	r2,r6,r3
 150:	103ff01e 	bne	r2,zero,114 <alt_irq_handler+0x28>
 154:	003ffb06 	br	144 <alt_irq_handler+0x58>
 158:	dfc00117 	ldw	ra,4(sp)
 15c:	dc000017 	ldw	r16,0(sp)
 160:	dec00204 	addi	sp,sp,8
 164:	f800283a 	ret

Disassembly of section .text:

00000168 <_start>:
     168:	06c20034 	movhi	sp,2048
     16c:	dec00014 	ori	sp,sp,0
     170:	06800034 	movhi	gp,0
     174:	d6be9e14 	ori	gp,gp,64120
     178:	00800034 	movhi	r2,0
     17c:	10a67d14 	ori	r2,r2,39412
     180:	00c00034 	movhi	r3,0
     184:	18e6d814 	ori	r3,r3,39776
     188:	10c00326 	beq	r2,r3,198 <_start+0x30>
     18c:	10000015 	stw	zero,0(r2)
     190:	10800104 	addi	r2,r2,4
     194:	10fffd36 	bltu	r2,r3,18c <_start+0x24>
     198:	0000cf80 	call	cf8 <alt_load>
     19c:	0000dbc0 	call	dbc <alt_main>

000001a0 <alt_after_alt_main>:
     1a0:	003fff06 	br	1a0 <alt_after_alt_main>

000001a4 <camera_set_front_buffer>:
static volatile int *config = (int*) CAMERA_CONFIG_BASE;


void camera_set_front_buffer (int *buff)
{
  *back_buff_reg = buff;
     1a4:	d0a00217 	ldw	r2,-32760(gp)
     1a8:	11000015 	stw	r4,0(r2)
  *front_buff_reg = 1;
     1ac:	00c00044 	movi	r3,1
     1b0:	d0a00017 	ldw	r2,-32768(gp)
     1b4:	10c00015 	stw	r3,0(r2)
}
     1b8:	f800283a 	ret

000001bc <camera_set_back_buffer>:

void camera_set_back_buffer (int *buff)
{
  *back_buff_reg = buff;
     1bc:	d0a00217 	ldw	r2,-32760(gp)
     1c0:	11000015 	stw	r4,0(r2)
}
     1c4:	f800283a 	ret

000001c8 <camera_enable_dma>:

void camera_enable_dma (bool enable)
{
  if (enable)
     1c8:	21003fcc 	andi	r4,r4,255
     1cc:	20000526 	beq	r4,zero,1e4 <camera_enable_dma+0x1c>
    *status_reg |= DMA_STATUS_ENABLE_MASK; 
     1d0:	d0e00117 	ldw	r3,-32764(gp)
     1d4:	18800017 	ldw	r2,0(r3)
     1d8:	10800114 	ori	r2,r2,4
     1dc:	18800015 	stw	r2,0(r3)
     1e0:	f800283a 	ret
  else
    *status_reg &= ~DMA_STATUS_ENABLE_MASK; 
     1e4:	d0a00117 	ldw	r2,-32764(gp)
     1e8:	10c00017 	ldw	r3,0(r2)
     1ec:	013ffec4 	movi	r4,-5
     1f0:	1906703a 	and	r3,r3,r4
     1f4:	10c00015 	stw	r3,0(r2)
     1f8:	f800283a 	ret

000001fc <camera_swap_buffers>:
}

void camera_swap_buffers(void)
{
	// Request a buffer swap
	*front_buff_reg = 1;
     1fc:	00c00044 	movi	r3,1
     200:	d0a00017 	ldw	r2,-32768(gp)
     204:	10c00015 	stw	r3,0(r2)
	
	// Wait for vertical synchronization.
	while ((*status_reg & 0x01) != 0);
     208:	d1200117 	ldw	r4,-32764(gp)
     20c:	20800017 	ldw	r2,0(r4)
     210:	10c4703a 	and	r2,r2,r3
     214:	103ffd1e 	bne	r2,zero,20c <camera_swap_buffers+0x10>
}
     218:	f800283a 	ret

0000021c <camera_get_front_buffer>:

int *camera_get_front_buffer(void) {
  return *front_buff_reg;
     21c:	d0a00017 	ldw	r2,-32768(gp)
     220:	10800017 	ldw	r2,0(r2)
     224:	f800283a 	ret

00000228 <char_lcd_move_cursor>:
void char_lcd_move_cursor (int x, int y)
{
  char address = 0;
  
  address |= (x < LCD_X_MAX) ? x : LCD_X_MAX;
  address |= (y == 0) ? LCD_TOP_ROW : LCD_BOTTOM_ROW;  
     228:	280ac03a 	cmpne	r5,r5,zero
     22c:	280a91ba 	slli	r5,r5,6
  
  // write to the LCD instruction register
  *(instruction_ptr) = LCD_SET_CURSOR | address;		
     230:	d0e00317 	ldw	r3,-32756(gp)
     234:	008009c4 	movi	r2,39
     238:	1100010e 	bge	r2,r4,240 <char_lcd_move_cursor+0x18>
     23c:	1009883a 	mov	r4,r2
     240:	00bfe004 	movi	r2,-128
     244:	2084b03a 	or	r2,r4,r2
     248:	1144b03a 	or	r2,r2,r5
     24c:	18800005 	stb	r2,0(r3)
}
     250:	f800283a 	ret

00000254 <char_lcd_write>:
/******************************************************************************
 * Subroutine to send a string of text to the LCD 
******************************************************************************/
void char_lcd_write (char *text)
{
	while (*(text))
     254:	20800007 	ldb	r2,0(r4)
     258:	10000726 	beq	r2,zero,278 <char_lcd_write+0x24>
     25c:	01400044 	movi	r5,1
	{
		*(data_ptr) = *(text);	// write to the LCD data register
     260:	20800003 	ldbu	r2,0(r4)
     264:	d0e00417 	ldw	r3,-32752(gp)
     268:	18800005 	stb	r2,0(r3)
	  text++;
     26c:	2149883a 	add	r4,r4,r5
/******************************************************************************
 * Subroutine to send a string of text to the LCD 
******************************************************************************/
void char_lcd_write (char *text)
{
	while (*(text))
     270:	20800007 	ldb	r2,0(r4)
     274:	103ffa1e 	bne	r2,zero,260 <char_lcd_write+0xc>
     278:	f800283a 	ret

0000027c <char_lcd_cursor_off>:
/******************************************************************************
 * Subroutine to turn off the LCD cursor
******************************************************************************/
void char_lcd_cursor_off (void)
{
	*(instruction_ptr) = LCD_CURSOR_OFF;	 // turn off the LCD cursor
     27c:	00c00304 	movi	r3,12
     280:	d0a00317 	ldw	r2,-32756(gp)
     284:	10c00005 	stb	r3,0(r2)
}
     288:	f800283a 	ret

0000028c <char_lcd_shift_left>:
/******************************************************************************
 * Subroutine to shift the LCD cursor one pixel to the left.
******************************************************************************/
void char_lcd_shift_left (void)
{
	*(instruction_ptr) = LCD_SHIFT_LEFT;	 // shift display to the left
     28c:	00c00604 	movi	r3,24
     290:	d0a00317 	ldw	r2,-32756(gp)
     294:	10c00005 	stb	r3,0(r2)
}
     298:	f800283a 	ret

0000029c <char_lcd_shift_right>:
/******************************************************************************
 * Subroutine to shift the LCD cursor one pixel to the right.
******************************************************************************/
void char_lcd_shift_right (void)
{
	*(instruction_ptr) = LCD_SHIFT_RIGHT;	 // shift display to the right
     29c:	00c00704 	movi	r3,28
     2a0:	d0a00317 	ldw	r2,-32756(gp)
     2a4:	10c00005 	stb	r3,0(r2)
}
     2a8:	f800283a 	ret

000002ac <ethernet_get_tx_frame>:
 * the frame's fields are all properly set before calling ethernet_tx(). 
 */
struct ethernet_frame *ethernet_get_tx_frame (void)
{
  return tx_frame;
}
     2ac:	d0a7e017 	ldw	r2,-24704(gp)
     2b0:	f800283a 	ret

000002b4 <ethernet_get_rx_frame>:
 * be updated each time a new frame is received.
 */
struct ethernet_frame *ethernet_get_rx_frame (void)
{
  return rx_frame;
}
     2b4:	d0a7df17 	ldw	r2,-24708(gp)
     2b8:	f800283a 	ret

000002bc <htons>:
 * Takes a uint16_t in host byte order and converts it to network 
 * byte order.
 */
uint16_t htons(uint16_t n)
{
  return ((n & 0xff) << 8) | ((n & 0xff00) >> 8);
     2bc:	213fffcc 	andi	r4,r4,65535
     2c0:	20803fcc 	andi	r2,r4,255
     2c4:	1004923a 	slli	r2,r2,8
     2c8:	2008d23a 	srli	r4,r4,8
}
     2cc:	1104b03a 	or	r2,r2,r4
     2d0:	f800283a 	ret

000002d4 <ntohs>:
/**
 * Takes a uint16_t in network byte order and converts it to host 
 * byte order.
 */
uint16_t ntohs(uint16_t n)
{
     2d4:	deffff04 	addi	sp,sp,-4
     2d8:	dfc00015 	stw	ra,0(sp)
  return htons(n);
     2dc:	213fffcc 	andi	r4,r4,65535
     2e0:	00002bc0 	call	2bc <htons>
}
     2e4:	10bfffcc 	andi	r2,r2,65535
     2e8:	dfc00017 	ldw	ra,0(sp)
     2ec:	dec00104 	addi	sp,sp,4
     2f0:	f800283a 	ret

000002f4 <htonl>:
/**
 * Takes a uint32_t in host byte order and converts it to network 
 * byte order.
 */
uint32_t htonl (uint32_t n)
{
     2f4:	2006963a 	slli	r3,r4,24
     2f8:	20bfc00c 	andi	r2,r4,65280
     2fc:	1004923a 	slli	r2,r2,8
     300:	1886b03a 	or	r3,r3,r2
     304:	20803fec 	andhi	r2,r4,255
     308:	1004d23a 	srli	r2,r2,8
     30c:	2008d63a 	srli	r4,r4,24
     310:	1104b03a 	or	r2,r2,r4
  return ((n & 0xff        ) << 24) |
         ((n & 0xff00      ) <<  8) |
         ((n & 0xff0000UL  ) >>  8) |
         ((n & 0xff000000UL) >> 24);
}
     314:	1884b03a 	or	r2,r3,r2
     318:	f800283a 	ret

0000031c <ntohl>:
/**
 * Takes a uint32_t in network byte order and converts it to host 
 * byte order.
 */
uint32_t ntohl (uint32_t n)
{
     31c:	deffff04 	addi	sp,sp,-4
     320:	dfc00015 	stw	ra,0(sp)
  return htonl(n);
     324:	00002f40 	call	2f4 <htonl>
}
     328:	dfc00017 	ldw	ra,0(sp)
     32c:	dec00104 	addi	sp,sp,4
     330:	f800283a 	ret

00000334 <ethernet_tx>:
 * Transmits the contents of the tx buffer as an ethernet frame. It is
 * assumed that the user has properly set all of the tx frame's fields 
 * prior to calling this function.
 */
void ethernet_tx (void)
{
     334:	defffa04 	addi	sp,sp,-24
     338:	dfc00515 	stw	ra,20(sp)
     33c:	dc000415 	stw	r16,16(sp)
  /* Get the frame data length in host byte order. */
  uint16_t length = ntohs (tx_frame->length);
  
  /* Create transmit SGDMA descriptor. */
  uint32_t total_size = ENET_FRAME_HEADER_SIZE + length;
  alt_avalon_sgdma_construct_mem_to_stream_desc(&tx_descriptor, &tx_descriptor_end, tx_buff, total_size, 0, 1, 1, 0);
     340:	04020834 	movhi	r16,2080
     344:	84001004 	addi	r16,r16,64
 * prior to calling this function.
 */
void ethernet_tx (void)
{
  /* Get the frame data length in host byte order. */
  uint16_t length = ntohs (tx_frame->length);
     348:	d0a7e017 	ldw	r2,-24704(gp)
     34c:	1100030b 	ldhu	r4,12(r2)
     350:	00002d40 	call	2d4 <ntohs>
     354:	10800404 	addi	r2,r2,16
     358:	d8000015 	stw	zero,0(sp)
     35c:	00c00044 	movi	r3,1
     360:	d8c00115 	stw	r3,4(sp)
     364:	d8c00215 	stw	r3,8(sp)
     368:	d8000315 	stw	zero,12(sp)
     36c:	8009883a 	mov	r4,r16
     370:	01420834 	movhi	r5,2080
     374:	29401804 	addi	r5,r5,96
     378:	01820834 	movhi	r6,2080
     37c:	31860004 	addi	r6,r6,6144
     380:	11ffffcc 	andi	r7,r2,65535
     384:	0001d980 	call	1d98 <alt_avalon_sgdma_construct_mem_to_stream_desc>
  /* Create transmit SGDMA descriptor. */
  uint32_t total_size = ENET_FRAME_HEADER_SIZE + length;
  alt_avalon_sgdma_construct_mem_to_stream_desc(&tx_descriptor, &tx_descriptor_end, tx_buff, total_size, 0, 1, 1, 0);
  
  /* Set up non-blocking transfer of SGDMA transmit descriptor. */
  alt_avalon_sgdma_do_async_transfer (sgdma_tx_dev, &tx_descriptor);
     388:	d127e217 	ldw	r4,-24696(gp)
     38c:	800b883a 	mov	r5,r16
     390:	0001ad00 	call	1ad0 <alt_avalon_sgdma_do_async_transfer>
  
  /* Wait until transmit descriptor transfer is complete. */
  while (alt_avalon_sgdma_check_descriptor_status(&tx_descriptor) != 0);
     394:	01020834 	movhi	r4,2080
     398:	21001004 	addi	r4,r4,64
     39c:	0001f280 	call	1f28 <alt_avalon_sgdma_check_descriptor_status>
     3a0:	103ffc1e 	bne	r2,zero,394 <ethernet_tx+0x60>
}
     3a4:	dfc00517 	ldw	ra,20(sp)
     3a8:	dc000417 	ldw	r16,16(sp)
     3ac:	dec00604 	addi	sp,sp,24
     3b0:	f800283a 	ret

000003b4 <ethernet_init>:
 *     called each time a new frame arrives in the rx buffer. 
 *
 *  3. Mapping ethernet_frame structures onto the the rx/tx buffers.
 */
void ethernet_init (void *src_mac, void *receive_isr)
{
     3b4:	defffb04 	addi	sp,sp,-20
     3b8:	dfc00415 	stw	ra,16(sp)
     3bc:	dc800315 	stw	r18,12(sp)
     3c0:	dc400215 	stw	r17,8(sp)
     3c4:	dc000115 	stw	r16,4(sp)
     3c8:	2023883a 	mov	r17,r4
     3cc:	2825883a 	mov	r18,r5
 *
 */
static void init_sgdma (void)
{
  /* Open the SGDMA transmit device. */
  sgdma_tx_dev = alt_avalon_sgdma_open(SGDMA_TX_NAME);
     3d0:	01000034 	movhi	r4,0
     3d4:	21165f04 	addi	r4,r4,22908
     3d8:	0001ecc0 	call	1ecc <alt_avalon_sgdma_open>
     3dc:	d0a7e215 	stw	r2,-24696(gp)
  if (sgdma_tx_dev == NULL) {
     3e0:	1000041e 	bne	r2,zero,3f4 <ethernet_init+0x40>
    alt_printf ("Error: could not open scatter-gather DMA transmit device\n");
     3e4:	01000034 	movhi	r4,0
     3e8:	21166304 	addi	r4,r4,22924
     3ec:	0000e0c0 	call	e0c <alt_printf>
     3f0:	00002206 	br	47c <ethernet_init+0xc8>
    return;
  } 
  else alt_printf("Opened scatter-gather DMA transmit device\n");
     3f4:	01000034 	movhi	r4,0
     3f8:	21167204 	addi	r4,r4,22984
     3fc:	0000e0c0 	call	e0c <alt_printf>
  
  /* Open the SGDMA receive device. */
  sgdma_rx_dev = alt_avalon_sgdma_open (SGDMA_RX_NAME);
     400:	01000034 	movhi	r4,0
     404:	21167d04 	addi	r4,r4,23028
     408:	0001ecc0 	call	1ecc <alt_avalon_sgdma_open>
     40c:	d0a7e115 	stw	r2,-24700(gp)
  if (sgdma_rx_dev == NULL) {
     410:	1000041e 	bne	r2,zero,424 <ethernet_init+0x70>
    alt_printf ("Error: could not open scatter-gather DMA receive device\n");
     414:	01000034 	movhi	r4,0
     418:	21168104 	addi	r4,r4,23044
     41c:	0000e0c0 	call	e0c <alt_printf>
     420:	00001606 	br	47c <ethernet_init+0xc8>
    return;
  } 
  else alt_printf("Opened scatter-gather DMA receive device\n");
     424:	01000034 	movhi	r4,0
     428:	21169004 	addi	r4,r4,23104
     42c:	0000e0c0 	call	e0c <alt_printf>
  
  /* Configure interrupts for the SGDMA receive device. */
  uint16_t chain_control = IE_DESCRIPTOR_COMPLETED | IE_GLOBAL;
  alt_avalon_sgdma_register_callback (sgdma_rx_dev, (alt_avalon_sgdma_callback) ethernet_rx, chain_control, NULL);
     430:	d127e117 	ldw	r4,-24700(gp)
     434:	01400034 	movhi	r5,0
     438:	29415504 	addi	r5,r5,1364
     43c:	01800504 	movi	r6,20
     440:	000f883a 	mov	r7,zero
     444:	00019280 	call	1928 <alt_avalon_sgdma_register_callback>
 
  /* Create SGDMA receive descriptor. */
  alt_avalon_sgdma_construct_stream_to_mem_desc(&rx_descriptor, &rx_descriptor_end, rx_buff, 0, 0);
     448:	04020834 	movhi	r16,2080
     44c:	84000004 	addi	r16,r16,0
     450:	d8000015 	stw	zero,0(sp)
     454:	8009883a 	mov	r4,r16
     458:	01420834 	movhi	r5,2080
     45c:	29400804 	addi	r5,r5,32
     460:	01820834 	movhi	r6,2080
     464:	31840004 	addi	r6,r6,4096
     468:	000f883a 	mov	r7,zero
     46c:	0001e240 	call	1e24 <alt_avalon_sgdma_construct_stream_to_mem_desc>
  
  /* Set up non-blocking transfer of first SGDMA receive descriptor. */
  alt_avalon_sgdma_do_async_transfer(sgdma_rx_dev, &rx_descriptor);
     470:	d127e117 	ldw	r4,-24700(gp)
     474:	800b883a 	mov	r5,r16
     478:	0001ad00 	call	1ad0 <alt_avalon_sgdma_do_async_transfer>
{
  /* Triple-speed ethernet device base address. */
  volatile int *enet = (int *) ENET_BASE;  
  
  /* Write the source MAC address. */ 
  *(enet + 3) = *(int *)  src_mac; 
     47c:	88c00017 	ldw	r3,0(r17)
     480:	00820834 	movhi	r2,2080
     484:	10880304 	addi	r2,r2,8204
     488:	10c00015 	stw	r3,0(r2)
  *(enet + 4) = *(int *) (src_mac + 4); 
     48c:	88c00117 	ldw	r3,4(r17)
     490:	10800104 	addi	r2,r2,4
     494:	10c00015 	stw	r3,0(r2)

  /* Specify the addresses of the PHY devices to be accessed through MDIO interface. */
  *(enet + 0x10) = 0x11;  // MDIO Address 1
     498:	00c00444 	movi	r3,17
     49c:	10800c04 	addi	r2,r2,48
     4a0:	10c00015 	stw	r3,0(r2)
  
  /* Write to register 16 of the PHY chip for ethernet port 1 to enable automatic crossover for all modes. */
  *(enet + 0xB0) = *(enet + 0xB0) | 0x0060;
     4a4:	00c20834 	movhi	r3,2080
     4a8:	18c8b004 	addi	r3,r3,8896
     4ac:	18800017 	ldw	r2,0(r3)
     4b0:	10801814 	ori	r2,r2,96
     4b4:	18800015 	stw	r2,0(r3)
  
  /* Write to register 20 of the PHY chip for ethernet port 1 to set up delay for input/output clk. */
  *(enet + 0xB4) = *(enet + 0xB4) | 0x0082;
     4b8:	18c00404 	addi	r3,r3,16
     4bc:	18800017 	ldw	r2,0(r3)
     4c0:	10802094 	ori	r2,r2,130
     4c4:	18800015 	stw	r2,0(r3)
  
  /* Enable line loopback with ethernet port 0. */
  *(enet + 0x0F) = 0x10; // MDIO Address 0
     4c8:	00c00404 	movi	r3,16
     4cc:	00820834 	movhi	r2,2080
     4d0:	10880f04 	addi	r2,r2,8252
     4d4:	10c00015 	stw	r3,0(r2)
  *(enet + 0x94) = 0x4000; 
     4d8:	00d00004 	movi	r3,16384
     4dc:	10808504 	addi	r2,r2,532
     4e0:	10c00015 	stw	r3,0(r2)
  
  /* Software reset the ethernet 1 PHY chip and wait. */
  *(enet + 0xA0) = *(enet + 0xA0) | 0x8000;
     4e4:	00c20834 	movhi	r3,2080
     4e8:	18c8a004 	addi	r3,r3,8832
     4ec:	18800017 	ldw	r2,0(r3)
     4f0:	10a00014 	ori	r2,r2,32768
     4f4:	18800015 	stw	r2,0(r3)
     4f8:	1809883a 	mov	r4,r3
     4fc:	00e00014 	movui	r3,32768
  while (*(enet + 0xA0) & 0x8000);   
     500:	20800017 	ldw	r2,0(r4)
     504:	10c4703a 	and	r2,r2,r3
     508:	103ffd1e 	bne	r2,zero,500 <ethernet_init+0x14c>
  // bit  1: rx enable
  // bit  3: gigabit ethernet enable
  // bit  4: promiscuous mode enable
  // bit  6: CRC forwarding on receive
  // bit 15: local loopback enable
  *(enet + 2) = *(enet + 2) | 0x0000004B;
     50c:	00c20834 	movhi	r3,2080
     510:	18c80204 	addi	r3,r3,8200
     514:	18800017 	ldw	r2,0(r3)
     518:	108012d4 	ori	r2,r2,75
     51c:	18800015 	stw	r2,0(r3)
 */
void ethernet_init (void *src_mac, void *receive_isr)
{
  init_sgdma ();
  init_device (src_mac); 
  rx_isr = receive_isr;
     520:	d4a7e315 	stw	r18,-24692(gp)
  rx_frame = rx_buff + ENET_HEADER_WORD_ALIGNMENT_SIZE;
     524:	00820834 	movhi	r2,2080
     528:	10840084 	addi	r2,r2,4098
     52c:	d0a7df15 	stw	r2,-24708(gp)
  tx_frame = tx_buff + ENET_HEADER_WORD_ALIGNMENT_SIZE;
     530:	00820834 	movhi	r2,2080
     534:	10860084 	addi	r2,r2,6146
     538:	d0a7e015 	stw	r2,-24704(gp)
}
     53c:	dfc00417 	ldw	ra,16(sp)
     540:	dc800317 	ldw	r18,12(sp)
     544:	dc400217 	ldw	r17,8(sp)
     548:	dc000117 	ldw	r16,4(sp)
     54c:	dec00504 	addi	sp,sp,20
     550:	f800283a 	ret

00000554 <ethernet_rx>:
/**
 *
 *
 */
static void ethernet_rx (void *context)
{
     554:	defffd04 	addi	sp,sp,-12
     558:	dfc00215 	stw	ra,8(sp)
     55c:	dc000115 	stw	r16,4(sp)
     560:	04020834 	movhi	r16,2080
     564:	84000004 	addi	r16,r16,0
  // printf("REACHED RECEIVE FUNCTION\n");
  /* Wait until receive descriptor transfer is complete. */
  while (alt_avalon_sgdma_check_descriptor_status(&rx_descriptor) != 0);
     568:	8009883a 	mov	r4,r16
     56c:	0001f280 	call	1f28 <alt_avalon_sgdma_check_descriptor_status>
     570:	103ffd1e 	bne	r2,zero,568 <ethernet_rx+0x14>
  
  /* Process frame with user-specified interrupt service routine. */
  rx_isr (NULL, SGDMA_RX_IRQ);
     574:	0009883a 	mov	r4,zero
     578:	014000c4 	movi	r5,3
     57c:	d0a7e317 	ldw	r2,-24692(gp)
     580:	103ee83a 	callr	r2
  
  /* Create SGDMA receive descriptor */
  alt_avalon_sgdma_construct_stream_to_mem_desc(&rx_descriptor, &rx_descriptor_end, rx_buff, 0, 0);\
     584:	d8000015 	stw	zero,0(sp)
     588:	8009883a 	mov	r4,r16
     58c:	01420834 	movhi	r5,2080
     590:	29400804 	addi	r5,r5,32
     594:	01820834 	movhi	r6,2080
     598:	31840004 	addi	r6,r6,4096
     59c:	000f883a 	mov	r7,zero
     5a0:	0001e240 	call	1e24 <alt_avalon_sgdma_construct_stream_to_mem_desc>

  
  /* Set up non-blocking transfer of SGDMA receive descriptor */
  alt_avalon_sgdma_do_async_transfer(sgdma_rx_dev, &rx_descriptor);
     5a4:	d127e117 	ldw	r4,-24700(gp)
     5a8:	800b883a 	mov	r5,r16
     5ac:	0001ad00 	call	1ad0 <alt_avalon_sgdma_do_async_transfer>
}
     5b0:	dfc00217 	ldw	ra,8(sp)
     5b4:	dc000117 	ldw	r16,4(sp)
     5b8:	dec00304 	addi	sp,sp,12
     5bc:	f800283a 	ret

000005c0 <green_leds_set>:
static volatile int *data_reg = (int*) GREEN_LEDS_BASE;


void green_leds_set (uint32_t mask)
{
  *data_reg = mask;
     5c0:	d0a00517 	ldw	r2,-32748(gp)
     5c4:	11000015 	stw	r4,0(r2)
}
     5c8:	f800283a 	ret

000005cc <green_leds_update>:

void green_leds_update (uint32_t mask)
{
  *data_reg |= mask;
     5cc:	d0e00517 	ldw	r3,-32748(gp)
     5d0:	18800017 	ldw	r2,0(r3)
     5d4:	1104b03a 	or	r2,r2,r4
     5d8:	18800015 	stw	r2,0(r3)
}
     5dc:	f800283a 	ret

000005e0 <green_leds_clear>:

void green_leds_clear (uint32_t mask)
{
  *data_reg &= ~mask;
     5e0:	d0a00517 	ldw	r2,-32748(gp)
     5e4:	10c00017 	ldw	r3,0(r2)
     5e8:	0108303a 	nor	r4,zero,r4
     5ec:	1906703a 	and	r3,r3,r4
     5f0:	10c00015 	stw	r3,0(r2)
}
     5f4:	f800283a 	ret

000005f8 <green_leds_clear_all>:

void green_leds_clear_all (void)
{
  *data_reg = 0;
     5f8:	d0a00517 	ldw	r2,-32748(gp)
     5fc:	10000015 	stw	zero,0(r2)
     600:	f800283a 	ret

00000604 <hex_clear>:
}


void hex_clear (void)
{
  *hex_3to0 = 0;
     604:	d0a00717 	ldw	r2,-32740(gp)
     608:	10000015 	stw	zero,0(r2)
  *hex_7to4 = 0;
     60c:	d0a00617 	ldw	r2,-32744(gp)
     610:	10000015 	stw	zero,0(r2)
}
     614:	f800283a 	ret

00000618 <hex_clear_3to0>:

void hex_clear_3to0 (void)
{
  *hex_3to0 = 0;
     618:	d0a00717 	ldw	r2,-32740(gp)
     61c:	10000015 	stw	zero,0(r2)
}
     620:	f800283a 	ret

00000624 <hex_clear_7to4>:

void hex_clear_7to4 (void)
{
  *hex_7to4 = 0;
     624:	d0a00617 	ldw	r2,-32744(gp)
     628:	10000015 	stw	zero,0(r2)
}
     62c:	f800283a 	ret

00000630 <lookup_16>:



static uint32_t lookup_16 (uint32_t value)
{
     630:	200f883a 	mov	r7,r4
  if (value > 0xFFFF) 
     634:	00bfffd4 	movui	r2,65535
     638:	1100012e 	bgeu	r2,r4,640 <lookup_16+0x10>
    value %= 0x10000;
     63c:	208e703a 	and	r7,r4,r2
     640:	01400034 	movhi	r5,0
     644:	29569a84 	addi	r5,r5,23146
     648:	3804d13a 	srli	r2,r7,4
     64c:	010003c4 	movi	r4,15
     650:	1104703a 	and	r2,r2,r4
     654:	1145883a 	add	r2,r2,r5
     658:	11800003 	ldbu	r6,0(r2)
     65c:	300c923a 	slli	r6,r6,8
     660:	3804d33a 	srli	r2,r7,12
     664:	1104703a 	and	r2,r2,r4
     668:	1145883a 	add	r2,r2,r5
     66c:	10800003 	ldbu	r2,0(r2)
     670:	1004963a 	slli	r2,r2,24
     674:	3806d23a 	srli	r3,r7,8
     678:	1906703a 	and	r3,r3,r4
     67c:	1947883a 	add	r3,r3,r5
     680:	18c00003 	ldbu	r3,0(r3)
     684:	1806943a 	slli	r3,r3,16
     688:	10c4b03a 	or	r2,r2,r3
     68c:	3908703a 	and	r4,r7,r4
     690:	2149883a 	add	r4,r4,r5
     694:	20c00003 	ldbu	r3,0(r4)
     698:	10c4b03a 	or	r2,r2,r3
    
  return (table[(value >>12) & 0xF] << 24 |  // lookup segments for nibble 3
          table[(value >> 8) & 0xF] << 16 |  // lookup segments for nibble 2 
          table[(value >> 4) & 0xF] <<  8 |  // lookup segments for nibble 1
          table[ value & 0xF      ]);        // lookup segments for nibble 0
}
     69c:	3084b03a 	or	r2,r6,r2
     6a0:	f800283a 	ret

000006a4 <lookup_10>:

static uint32_t lookup_10 (uint32_t value)
{
     6a4:	2013883a 	mov	r9,r4
  if (value > 9999) 
     6a8:	0089c3c4 	movi	r2,9999
     6ac:	1100042e 	bgeu	r2,r4,6c0 <lookup_10+0x1c>
    value %= 10000;
     6b0:	00c9c404 	movi	r3,10000
     6b4:	20c5203a 	divu	r2,r4,r3
     6b8:	10c5383a 	mul	r2,r2,r3
     6bc:	2093c83a 	sub	r9,r4,r2
     6c0:	01c00034 	movhi	r7,0
     6c4:	39d69a84 	addi	r7,r7,23146
     6c8:	01401904 	movi	r5,100
     6cc:	4945203a 	divu	r2,r9,r5
     6d0:	1145383a 	mul	r2,r2,r5
     6d4:	4885c83a 	sub	r2,r9,r2
     6d8:	01800284 	movi	r6,10
     6dc:	1185203a 	divu	r2,r2,r6
     6e0:	11c5883a 	add	r2,r2,r7
     6e4:	12000003 	ldbu	r8,0(r2)
     6e8:	4010923a 	slli	r8,r8,8
     6ec:	0100fa04 	movi	r4,1000
     6f0:	4907203a 	divu	r3,r9,r4
     6f4:	19c5883a 	add	r2,r3,r7
     6f8:	10800003 	ldbu	r2,0(r2)
     6fc:	1004963a 	slli	r2,r2,24
     700:	1907383a 	mul	r3,r3,r4
     704:	48c7c83a 	sub	r3,r9,r3
     708:	1947203a 	divu	r3,r3,r5
     70c:	19c7883a 	add	r3,r3,r7
     710:	18c00003 	ldbu	r3,0(r3)
     714:	1806943a 	slli	r3,r3,16
     718:	10c4b03a 	or	r2,r2,r3
     71c:	4987203a 	divu	r3,r9,r6
     720:	1987383a 	mul	r3,r3,r6
     724:	48c7c83a 	sub	r3,r9,r3
     728:	19c7883a 	add	r3,r3,r7
     72c:	18c00003 	ldbu	r3,0(r3)
     730:	10c4b03a 	or	r2,r2,r3
    
  return (table[ value / 1000       ] << 24 |  // lookup segments for thousands digit
          table[(value % 1000) / 100] << 16 |  // lookup segments for hundreds digit
          table[(value % 100)  /  10] <<  8 |  // lookup segments for tens digit
          table[ value % 10         ]);        // lookup segments for ones digit 
}
     734:	4084b03a 	or	r2,r8,r2
     738:	f800283a 	ret

0000073c <hex_write_7to4>:
      break;
  }
}

void hex_write_7to4 (uint32_t value, enum number_base base)
{
     73c:	deffff04 	addi	sp,sp,-4
     740:	dfc00015 	stw	ra,0(sp)
  /* Lookup hex segments for bits 15-0 of value. */
  switch (base)
     744:	00800084 	movi	r2,2
     748:	28800326 	beq	r5,r2,758 <hex_write_7to4+0x1c>
     74c:	008000c4 	movi	r2,3
     750:	2880081e 	bne	r5,r2,774 <hex_write_7to4+0x38>
     754:	00000406 	br	768 <hex_write_7to4+0x2c>
  {
    case NUM_BASE_10: 
      *hex_7to4 = lookup_10 (value);
     758:	00006a40 	call	6a4 <lookup_10>
     75c:	d0e00617 	ldw	r3,-32744(gp)
     760:	18800015 	stw	r2,0(r3)
     764:	00000306 	br	774 <hex_write_7to4+0x38>
      break;
    case NUM_BASE_16:
      *hex_7to4 = lookup_16 (value);
     768:	00006300 	call	630 <lookup_16>
     76c:	d0e00617 	ldw	r3,-32744(gp)
     770:	18800015 	stw	r2,0(r3)
      break;
  }
}
     774:	dfc00017 	ldw	ra,0(sp)
     778:	dec00104 	addi	sp,sp,4
     77c:	f800283a 	ret

00000780 <hex_write_3to0>:
      break;
  }
}

void hex_write_3to0 (uint32_t value, enum number_base base)
{
     780:	deffff04 	addi	sp,sp,-4
     784:	dfc00015 	stw	ra,0(sp)
  /* Lookup hex segments for bits 15-0 of value. */
  switch (base)
     788:	00800084 	movi	r2,2
     78c:	28800326 	beq	r5,r2,79c <hex_write_3to0+0x1c>
     790:	008000c4 	movi	r2,3
     794:	2880081e 	bne	r5,r2,7b8 <hex_write_3to0+0x38>
     798:	00000406 	br	7ac <hex_write_3to0+0x2c>
  {
    case NUM_BASE_10: 
      *hex_3to0 = lookup_10 (value);
     79c:	00006a40 	call	6a4 <lookup_10>
     7a0:	d0e00717 	ldw	r3,-32740(gp)
     7a4:	18800015 	stw	r2,0(r3)
     7a8:	00000306 	br	7b8 <hex_write_3to0+0x38>
      break;
    case NUM_BASE_16:
      *hex_3to0 = lookup_16 (value);
     7ac:	00006300 	call	630 <lookup_16>
     7b0:	d0e00717 	ldw	r3,-32740(gp)
     7b4:	18800015 	stw	r2,0(r3)
      break;
  }
}
     7b8:	dfc00017 	ldw	ra,0(sp)
     7bc:	dec00104 	addi	sp,sp,4
     7c0:	f800283a 	ret

000007c4 <hex_write>:
static uint32_t lookup_10 (uint32_t value);
static uint32_t lookup_16 (uint32_t value);


void hex_write (uint32_t value, enum number_base base)
{
     7c4:	defffd04 	addi	sp,sp,-12
     7c8:	dfc00215 	stw	ra,8(sp)
     7cc:	dc400115 	stw	r17,4(sp)
     7d0:	dc000015 	stw	r16,0(sp)
     7d4:	2023883a 	mov	r17,r4
  /* Lookup hex segments for bits 15-0 of value. */
  switch (base)
     7d8:	00800084 	movi	r2,2
     7dc:	28800326 	beq	r5,r2,7ec <hex_write+0x28>
     7e0:	008000c4 	movi	r2,3
     7e4:	2880151e 	bne	r5,r2,83c <hex_write+0x78>
     7e8:	00000c06 	br	81c <hex_write+0x58>
  {
    case NUM_BASE_10: 
      *hex_3to0 = lookup_10 (value % 10000);
     7ec:	0109c404 	movi	r4,10000
     7f0:	8921203a 	divu	r16,r17,r4
     7f4:	8109383a 	mul	r4,r16,r4
     7f8:	8909c83a 	sub	r4,r17,r4
     7fc:	00006a40 	call	6a4 <lookup_10>
     800:	d0e00717 	ldw	r3,-32740(gp)
     804:	18800015 	stw	r2,0(r3)
      *hex_7to4 = lookup_10 (value / 10000);
     808:	8009883a 	mov	r4,r16
     80c:	00006a40 	call	6a4 <lookup_10>
     810:	d0e00617 	ldw	r3,-32744(gp)
     814:	18800015 	stw	r2,0(r3)
     818:	00000806 	br	83c <hex_write+0x78>
      break;
    case NUM_BASE_16:
      *hex_3to0 = lookup_16 (value & 0x0000FFFF);
     81c:	213fffcc 	andi	r4,r4,65535
     820:	00006300 	call	630 <lookup_16>
     824:	d0e00717 	ldw	r3,-32740(gp)
     828:	18800015 	stw	r2,0(r3)
      *hex_7to4 = lookup_16 (value >> 16);
     82c:	8808d43a 	srli	r4,r17,16
     830:	00006300 	call	630 <lookup_16>
     834:	d0e00617 	ldw	r3,-32744(gp)
     838:	18800015 	stw	r2,0(r3)
      break;
  }
}
     83c:	dfc00217 	ldw	ra,8(sp)
     840:	dc400117 	ldw	r17,4(sp)
     844:	dc000017 	ldw	r16,0(sp)
     848:	dec00304 	addi	sp,sp,12
     84c:	f800283a 	ret

00000850 <lcd_enable_dma>:
/*****************************************************************************
 * Enables DMA transfer of video data from memory to LCD.                    *
******************************************************************************/
void lcd_enable_dma (bool enable)
{
  if (enable)
     850:	21003fcc 	andi	r4,r4,255
     854:	20000526 	beq	r4,zero,86c <lcd_enable_dma+0x1c>
    *status_reg |= DMA_STATUS_ENABLE_MASK; 
     858:	d0e00a17 	ldw	r3,-32728(gp)
     85c:	18800017 	ldw	r2,0(r3)
     860:	10800114 	ori	r2,r2,4
     864:	18800015 	stw	r2,0(r3)
     868:	f800283a 	ret
  else
    *status_reg &= ~DMA_STATUS_ENABLE_MASK; 
     86c:	d0a00a17 	ldw	r2,-32728(gp)
     870:	10c00017 	ldw	r3,0(r2)
     874:	013ffec4 	movi	r4,-5
     878:	1906703a 	and	r3,r3,r4
     87c:	10c00015 	stw	r3,0(r2)
     880:	f800283a 	ret

00000884 <lcd_set_front_buffer>:
/*****************************************************************************
 * Sets the front buffer base address.                                       *
******************************************************************************/
void lcd_set_front_buffer (int *buff)
{
  *back_buff_reg = buff;
     884:	d0a00b17 	ldw	r2,-32724(gp)
     888:	11000015 	stw	r4,0(r2)
  *front_buff_reg = 1;
     88c:	00c00044 	movi	r3,1
     890:	d0a00917 	ldw	r2,-32732(gp)
     894:	10c00015 	stw	r3,0(r2)
}
     898:	f800283a 	ret

0000089c <lcd_set_back_buffer>:
/*****************************************************************************
 * Sets the back buffer base address.                                        *
******************************************************************************/
void lcd_set_back_buffer (int *buff)
{
  *back_buff_reg = buff;
     89c:	d0a00b17 	ldw	r2,-32724(gp)
     8a0:	11000015 	stw	r4,0(r2)
}
     8a4:	f800283a 	ret

000008a8 <lcd_swap_buffers>:
 * Swaps the front and back buffer base addresses.                           *                     
******************************************************************************/
void lcd_swap_buffers(void)
{
	/* Request a buffer swap */
	*front_buff_reg = 1;
     8a8:	00c00044 	movi	r3,1
     8ac:	d0a00917 	ldw	r2,-32732(gp)
     8b0:	10c00015 	stw	r3,0(r2)
	
	/* Wait for vertical synchronization */
	while ((*status_reg & 0x01) != 0);
     8b4:	d1200a17 	ldw	r4,-32728(gp)
     8b8:	20800017 	ldw	r2,0(r4)
     8bc:	10c4703a 	and	r2,r2,r3
     8c0:	103ffd1e 	bne	r2,zero,8b8 <lcd_swap_buffers+0x10>
}
     8c4:	f800283a 	ret

000008c8 <lcd_write>:
  int char_x = x * 8;
  int char_y = y * 8;
  
  /* assume that the text string fits on one line */
  offset = (y << 6) + x;
  while ( *(text) )
     8c8:	30800007 	ldb	r2,0(r6)
     8cc:	10000b26 	beq	r2,zero,8fc <lcd_write+0x34>
     8d0:	280491ba 	slli	r2,r5,6
     8d4:	2085883a 	add	r2,r4,r2
     8d8:	d0e00817 	ldw	r3,-32736(gp)
     8dc:	10c9883a 	add	r4,r2,r3
     8e0:	00c00044 	movi	r3,1
  {
    *(char_buff_base + offset) = *(text);  // write to the character buffer
     8e4:	30800003 	ldbu	r2,0(r6)
     8e8:	20800005 	stb	r2,0(r4)
    text++;
     8ec:	30cd883a 	add	r6,r6,r3
  int char_x = x * 8;
  int char_y = y * 8;
  
  /* assume that the text string fits on one line */
  offset = (y << 6) + x;
  while ( *(text) )
     8f0:	20c9883a 	add	r4,r4,r3
     8f4:	30800007 	ldb	r2,0(r6)
     8f8:	103ffa1e 	bne	r2,zero,8e4 <lcd_write+0x1c>
     8fc:	f800283a 	ret

00000900 <lcd_draw_rectangle>:

/*****************************************************************************
 * Draws a filled rectangle on the LCD.                                      *
******************************************************************************/
void lcd_draw_rectangle(int x, int y, int width, int height, short color)
{
     900:	da80000b 	ldhu	r10,0(sp)
  int i, j, offset;
  volatile short *pixel_buffer = (short *) (*front_buff_reg);
     904:	d0a00917 	ldw	r2,-32732(gp)
     908:	12400017 	ldw	r9,0(r2)
  
  for(i = x; i <= (x + width - 1); i++)
     90c:	218d883a 	add	r6,r4,r6
     910:	31bfffc4 	addi	r6,r6,-1
     914:	31001116 	blt	r6,r4,95c <lcd_draw_rectangle+0x5c>
     918:	29c5883a 	add	r2,r5,r7
     91c:	11ffffc4 	addi	r7,r2,-1
     920:	02c00044 	movi	r11,1
     924:	00000b06 	br	954 <lcd_draw_rectangle+0x54>
     928:	2807883a 	mov	r3,r5
     92c:	02000044 	movi	r8,1
  {
    for(j = y; j <= (y + height -1); j++)
    {
      offset = (j << 9) + i;    
      *(pixel_buffer + offset) = color;   
     930:	1804927a 	slli	r2,r3,9
     934:	1105883a 	add	r2,r2,r4
     938:	1085883a 	add	r2,r2,r2
     93c:	4885883a 	add	r2,r9,r2
     940:	1280000d 	sth	r10,0(r2)
  int i, j, offset;
  volatile short *pixel_buffer = (short *) (*front_buff_reg);
  
  for(i = x; i <= (x + width - 1); i++)
  {
    for(j = y; j <= (y + height -1); j++)
     944:	1a07883a 	add	r3,r3,r8
     948:	38fff90e 	bge	r7,r3,930 <lcd_draw_rectangle+0x30>
void lcd_draw_rectangle(int x, int y, int width, int height, short color)
{
  int i, j, offset;
  volatile short *pixel_buffer = (short *) (*front_buff_reg);
  
  for(i = x; i <= (x + width - 1); i++)
     94c:	22c9883a 	add	r4,r4,r11
     950:	31000216 	blt	r6,r4,95c <lcd_draw_rectangle+0x5c>
  {
    for(j = y; j <= (y + height -1); j++)
     954:	397ff40e 	bge	r7,r5,928 <lcd_draw_rectangle+0x28>
     958:	003ffc06 	br	94c <lcd_draw_rectangle+0x4c>
     95c:	f800283a 	ret

00000960 <lcd_clear_text>:
  }
}


void lcd_clear_text (void) {
  register int *buffer = char_buff_base;
     960:	d2600817 	ldw	r9,-32736(gp)
     964:	000f883a 	mov	r7,zero
     968:	01800104 	movi	r6,4
     96c:	01400044 	movi	r5,1
     970:	01006404 	movi	r4,400
     974:	02003c04 	movi	r8,240
  register int y,x;
  for (y = 0; y < LCD_RES_Y; y++)
  {
    register int *buf = (buffer + (y << 6));
     978:	3804923a 	slli	r2,r7,8
     97c:	4885883a 	add	r2,r9,r2
     980:	0007883a 	mov	r3,zero
    for (x = 0; x < LCD_RES_X; x++)
    {
      *buf++ = 0;
     984:	10000015 	stw	zero,0(r2)
     988:	1185883a 	add	r2,r2,r6
  register int *buffer = char_buff_base;
  register int y,x;
  for (y = 0; y < LCD_RES_Y; y++)
  {
    register int *buf = (buffer + (y << 6));
    for (x = 0; x < LCD_RES_X; x++)
     98c:	1947883a 	add	r3,r3,r5
     990:	193ffc1e 	bne	r3,r4,984 <lcd_clear_text+0x24>


void lcd_clear_text (void) {
  register int *buffer = char_buff_base;
  register int y,x;
  for (y = 0; y < LCD_RES_Y; y++)
     994:	394f883a 	add	r7,r7,r5
     998:	3a3ff71e 	bne	r7,r8,978 <lcd_clear_text+0x18>
    for (x = 0; x < LCD_RES_X; x++)
    {
      *buf++ = 0;
    }
  }
     99c:	f800283a 	ret

000009a0 <pushbuttons_get_data>:
  alt_irq_register (PUSHBUTTONS_IRQ, NULL, isr);
}

uint32_t pushbuttons_get_data (void)
{
  return *data_reg;
     9a0:	d0a00e17 	ldw	r2,-32712(gp)
     9a4:	10800017 	ldw	r2,0(r2)
}
     9a8:	f800283a 	ret

000009ac <pushbuttons_set_interrupt_mask>:

void pushbuttons_set_interrupt_mask (uint32_t mask)
{
  *interrupt_mask_reg = mask;
     9ac:	d0a00d17 	ldw	r2,-32716(gp)
     9b0:	11000015 	stw	r4,0(r2)
}
     9b4:	f800283a 	ret

000009b8 <pushbuttons_get_interrupt_mask>:

uint32_t pushbuttons_get_interrupt_mask (void)
{
  return *interrupt_mask_reg;
     9b8:	d0a00d17 	ldw	r2,-32716(gp)
     9bc:	10800017 	ldw	r2,0(r2)
}
     9c0:	f800283a 	ret

000009c4 <pushbuttons_get_edge_capture>:

uint32_t pushbuttons_get_edge_capture (void)
{
  return *edge_capture_reg;
     9c4:	d0a00c17 	ldw	r2,-32720(gp)
     9c8:	10800017 	ldw	r2,0(r2)
}
     9cc:	f800283a 	ret

000009d0 <pushbuttons_clear_edge_capture>:

void pushbuttons_clear_edge_capture (void)
{
  *edge_capture_reg = 1;
     9d0:	00c00044 	movi	r3,1
     9d4:	d0a00c17 	ldw	r2,-32720(gp)
     9d8:	10c00015 	stw	r3,0(r2)
}
     9dc:	f800283a 	ret

000009e0 <pushbuttons_enable_interrupts>:
static volatile int *interrupt_mask_reg = (int*) (PUSHBUTTONS_BASE +  8);
static volatile int *edge_capture_reg   = (int*) (PUSHBUTTONS_BASE + 12);


void pushbuttons_enable_interrupts (void *isr)
{
     9e0:	defffe04 	addi	sp,sp,-8
     9e4:	dfc00115 	stw	ra,4(sp)
     9e8:	dc000015 	stw	r16,0(sp)
     9ec:	2021883a 	mov	r16,r4
  pushbuttons_set_interrupt_mask (DEFAULT_INTERRUPT_MASK);
     9f0:	01000384 	movi	r4,14
     9f4:	00009ac0 	call	9ac <pushbuttons_set_interrupt_mask>
  alt_irq_register (PUSHBUTTONS_IRQ, NULL, isr);
     9f8:	01000044 	movi	r4,1
     9fc:	000b883a 	mov	r5,zero
     a00:	800d883a 	mov	r6,r16
     a04:	0000c3c0 	call	c3c <alt_irq_register>
}
     a08:	dfc00117 	ldw	ra,4(sp)
     a0c:	dc000017 	ldw	r16,0(sp)
     a10:	dec00204 	addi	sp,sp,8
     a14:	f800283a 	ret

00000a18 <red_leds_set>:
static volatile int *data_reg = (int*) RED_LEDS_BASE;


void red_leds_set (uint32_t mask)
{
  *data_reg = mask;
     a18:	d0a00f17 	ldw	r2,-32708(gp)
     a1c:	11000015 	stw	r4,0(r2)
}
     a20:	f800283a 	ret

00000a24 <red_leds_update>:

void red_leds_update (uint32_t mask)
{
  *data_reg |= mask;
     a24:	d0e00f17 	ldw	r3,-32708(gp)
     a28:	18800017 	ldw	r2,0(r3)
     a2c:	1104b03a 	or	r2,r2,r4
     a30:	18800015 	stw	r2,0(r3)
}
     a34:	f800283a 	ret

00000a38 <red_leds_clear>:

void red_leds_clear (uint32_t mask)
{
  *data_reg &= ~mask;
     a38:	d0a00f17 	ldw	r2,-32708(gp)
     a3c:	10c00017 	ldw	r3,0(r2)
     a40:	0108303a 	nor	r4,zero,r4
     a44:	1906703a 	and	r3,r3,r4
     a48:	10c00015 	stw	r3,0(r2)
}
     a4c:	f800283a 	ret

00000a50 <red_leds_clear_all>:

void red_leds_clear_all (void)
{
  *data_reg = 0;
     a50:	d0a00f17 	ldw	r2,-32708(gp)
     a54:	10000015 	stw	zero,0(r2)
}
     a58:	f800283a 	ret

00000a5c <switches_get_positions>:
  alt_irq_register (SLIDER_SWITCHES_IRQ, NULL, isr);
}

uint32_t switches_get_positions (void)
{
  return *data_reg;
     a5c:	d0a01217 	ldw	r2,-32696(gp)
     a60:	10800017 	ldw	r2,0(r2)
}
     a64:	f800283a 	ret

00000a68 <switches_set_interrupt_mask>:

void switches_set_interrupt_mask (uint32_t mask)
{
  *interrupt_mask_reg = mask;
     a68:	d0a01117 	ldw	r2,-32700(gp)
     a6c:	11000015 	stw	r4,0(r2)
}
     a70:	f800283a 	ret

00000a74 <switches_get_interrupt_mask>:

uint32_t switches_get_interrupt_mask (void)
{
  return *interrupt_mask_reg;
     a74:	d0a01117 	ldw	r2,-32700(gp)
     a78:	10800017 	ldw	r2,0(r2)
}
     a7c:	f800283a 	ret

00000a80 <switches_get_edge_capture>:

uint32_t switches_get_edge_capture (void)
{
  return *edge_capture_reg;
     a80:	d0a01017 	ldw	r2,-32704(gp)
     a84:	10800017 	ldw	r2,0(r2)
}
     a88:	f800283a 	ret

00000a8c <switches_clear_edge_capture>:

void switches_clear_edge_capture (void)
{
  *edge_capture_reg = 1;
     a8c:	00c00044 	movi	r3,1
     a90:	d0a01017 	ldw	r2,-32704(gp)
     a94:	10c00015 	stw	r3,0(r2)
}
     a98:	f800283a 	ret

00000a9c <switches_enable_interrupts>:
static volatile int *interrupt_mask_reg = (int*) (SLIDER_SWITCHES_BASE +  8);
static volatile int *edge_capture_reg   = (int*) (SLIDER_SWITCHES_BASE + 12);


void switches_enable_interrupts (void *isr)
{
     a9c:	defffe04 	addi	sp,sp,-8
     aa0:	dfc00115 	stw	ra,4(sp)
     aa4:	dc000015 	stw	r16,0(sp)
     aa8:	2021883a 	mov	r16,r4
  switches_set_interrupt_mask (DEFAULT_INTERRUPT_MASK);
     aac:	01000134 	movhi	r4,4
     ab0:	213fffc4 	addi	r4,r4,-1
     ab4:	0000a680 	call	a68 <switches_set_interrupt_mask>
  alt_irq_register (SLIDER_SWITCHES_IRQ, NULL, isr);
     ab8:	01000144 	movi	r4,5
     abc:	000b883a 	mov	r5,zero
     ac0:	800d883a 	mov	r6,r16
     ac4:	0000c3c0 	call	c3c <alt_irq_register>
}
     ac8:	dfc00117 	ldw	ra,4(sp)
     acc:	dc000017 	ldw	r16,0(sp)
     ad0:	dec00204 	addi	sp,sp,8
     ad4:	f800283a 	ret

00000ad8 <vga_enable_dma>:
static volatile char *char_buff_base = (char*) VGA_CHAR_BUFFER_AVALON_CHAR_BUFFER_SLAVE_BASE;


void vga_enable_dma (bool enable)
{
  if (enable)
     ad8:	21003fcc 	andi	r4,r4,255
     adc:	20000526 	beq	r4,zero,af4 <vga_enable_dma+0x1c>
    *status_reg |= DMA_STATUS_ENABLE_MASK; 
     ae0:	d0e01517 	ldw	r3,-32684(gp)
     ae4:	18800017 	ldw	r2,0(r3)
     ae8:	10800114 	ori	r2,r2,4
     aec:	18800015 	stw	r2,0(r3)
     af0:	f800283a 	ret
  else
    *status_reg &= ~DMA_STATUS_ENABLE_MASK; 
     af4:	d0a01517 	ldw	r2,-32684(gp)
     af8:	10c00017 	ldw	r3,0(r2)
     afc:	013ffec4 	movi	r4,-5
     b00:	1906703a 	and	r3,r3,r4
     b04:	10c00015 	stw	r3,0(r2)
     b08:	f800283a 	ret

00000b0c <vga_set_front_buffer>:
/******************************************************************************
 * Subroutine to set the back buffer base address.
******************************************************************************/
void vga_set_front_buffer (int *buff)
{
  *back_buff_reg = buff;
     b0c:	d0a01617 	ldw	r2,-32680(gp)
     b10:	11000015 	stw	r4,0(r2)
  *front_buff_reg = 1;
     b14:	00c00044 	movi	r3,1
     b18:	d0a01317 	ldw	r2,-32692(gp)
     b1c:	10c00015 	stw	r3,0(r2)
}
     b20:	f800283a 	ret

00000b24 <vga_set_back_buffer>:

void vga_set_back_buffer (int *buff)
{
  *back_buff_reg = buff;
     b24:	d0a01617 	ldw	r2,-32680(gp)
     b28:	11000015 	stw	r4,0(r2)
}
     b2c:	f800283a 	ret

00000b30 <vga_swap_buffers>:

void vga_swap_buffers(void)
{
	// Request a buffer swap
	*front_buff_reg = 1;
     b30:	00c00044 	movi	r3,1
     b34:	d0a01317 	ldw	r2,-32692(gp)
     b38:	10c00015 	stw	r3,0(r2)
	
	// Wait for vertical synchronization.
	while ((*status_reg & 0x01) != 0);
     b3c:	d1201517 	ldw	r4,-32684(gp)
     b40:	20800017 	ldw	r2,0(r4)
     b44:	10c4703a 	and	r2,r2,r3
     b48:	103ffd1e 	bne	r2,zero,b40 <vga_swap_buffers+0x10>
}
     b4c:	f800283a 	ret

00000b50 <vga_write>:
  int char_x = x * 4;
  int char_y = y * 4;

  /* assume that the text string fits on one line */
  offset = (y << 7) + x;
  while ( *(text) )
     b50:	30800007 	ldb	r2,0(r6)
     b54:	10000b26 	beq	r2,zero,b84 <vga_write+0x34>
     b58:	280491fa 	slli	r2,r5,7
     b5c:	2085883a 	add	r2,r4,r2
     b60:	d0e01417 	ldw	r3,-32688(gp)
     b64:	10c9883a 	add	r4,r2,r3
     b68:	00c00044 	movi	r3,1
  {
    *(char_buff_base + offset) = *(text);  // write to the character buffer
     b6c:	30800003 	ldbu	r2,0(r6)
     b70:	20800005 	stb	r2,0(r4)
    text++;
     b74:	30cd883a 	add	r6,r6,r3
  int char_x = x * 4;
  int char_y = y * 4;

  /* assume that the text string fits on one line */
  offset = (y << 7) + x;
  while ( *(text) )
     b78:	20c9883a 	add	r4,r4,r3
     b7c:	30800007 	ldb	r2,0(r6)
     b80:	103ffa1e 	bne	r2,zero,b6c <vga_write+0x1c>
     b84:	f800283a 	ret

00000b88 <vga_clear_text>:
    char_x += 4;
  }
}

void vga_clear_text (void) {
  register int *buffer = char_buff_base;
     b88:	d2601417 	ldw	r9,-32688(gp)
     b8c:	000f883a 	mov	r7,zero
     b90:	01800104 	movi	r6,4
     b94:	01400044 	movi	r5,1
     b98:	01005004 	movi	r4,320
     b9c:	02003c04 	movi	r8,240
  register int y,x;
  for (y = 0; y < VGA_RES_Y; y++)
  {
    register int *buf = (buffer + (y << 7));
     ba0:	3804927a 	slli	r2,r7,9
     ba4:	4885883a 	add	r2,r9,r2
     ba8:	0007883a 	mov	r3,zero
    for (x = 0; x < VGA_RES_X; x++)
    {
      *buf++ = 0;
     bac:	10000015 	stw	zero,0(r2)
     bb0:	1185883a 	add	r2,r2,r6
  register int *buffer = char_buff_base;
  register int y,x;
  for (y = 0; y < VGA_RES_Y; y++)
  {
    register int *buf = (buffer + (y << 7));
    for (x = 0; x < VGA_RES_X; x++)
     bb4:	1947883a 	add	r3,r3,r5
     bb8:	193ffc1e 	bne	r3,r4,bac <vga_clear_text+0x24>
}

void vga_clear_text (void) {
  register int *buffer = char_buff_base;
  register int y,x;
  for (y = 0; y < VGA_RES_Y; y++)
     bbc:	394f883a 	add	r7,r7,r5
     bc0:	3a3ff71e 	bne	r7,r8,ba0 <vga_clear_text+0x18>
    for (x = 0; x < VGA_RES_X; x++)
    {
      *buf++ = 0;
    }
  }
}
     bc4:	f800283a 	ret

00000bc8 <vga_draw_rectangle>:

/*****************************************************************************
 * Draw a filled rectangle on the VGA.
******************************************************************************/
void vga_draw_rectangle(int x, int y, int width, int height, short color)
{
     bc8:	da80000b 	ldhu	r10,0(sp)
  int i, j, offset;
  volatile short *pixel_buffer = (short *) (*front_buff_reg);
     bcc:	d0a01317 	ldw	r2,-32692(gp)
     bd0:	12400017 	ldw	r9,0(r2)
  
  for(i = x; i <= (x + width - 1); i++)
     bd4:	218d883a 	add	r6,r4,r6
     bd8:	31bfffc4 	addi	r6,r6,-1
     bdc:	31001116 	blt	r6,r4,c24 <vga_draw_rectangle+0x5c>
     be0:	29c5883a 	add	r2,r5,r7
     be4:	11ffffc4 	addi	r7,r2,-1
     be8:	02c00044 	movi	r11,1
     bec:	00000b06 	br	c1c <vga_draw_rectangle+0x54>
     bf0:	2807883a 	mov	r3,r5
     bf4:	02000044 	movi	r8,1
  {
    for(j = y; j <= (y + height -1); j++)
    {
      offset = (j << 9) + i;    
      *(pixel_buffer + offset) = color;   
     bf8:	1804927a 	slli	r2,r3,9
     bfc:	1105883a 	add	r2,r2,r4
     c00:	1085883a 	add	r2,r2,r2
     c04:	4885883a 	add	r2,r9,r2
     c08:	1280000d 	sth	r10,0(r2)
  int i, j, offset;
  volatile short *pixel_buffer = (short *) (*front_buff_reg);
  
  for(i = x; i <= (x + width - 1); i++)
  {
    for(j = y; j <= (y + height -1); j++)
     c0c:	1a07883a 	add	r3,r3,r8
     c10:	38fff90e 	bge	r7,r3,bf8 <vga_draw_rectangle+0x30>
void vga_draw_rectangle(int x, int y, int width, int height, short color)
{
  int i, j, offset;
  volatile short *pixel_buffer = (short *) (*front_buff_reg);
  
  for(i = x; i <= (x + width - 1); i++)
     c14:	22c9883a 	add	r4,r4,r11
     c18:	31000216 	blt	r6,r4,c24 <vga_draw_rectangle+0x5c>
  {
    for(j = y; j <= (y + height -1); j++)
     c1c:	397ff40e 	bge	r7,r5,bf0 <vga_draw_rectangle+0x28>
     c20:	003ffc06 	br	c14 <vga_draw_rectangle+0x4c>
     c24:	f800283a 	ret

00000c28 <vga_get_front_buffer>:
  }
}


int *vga_get_front_buffer(void) {
  return *front_buff_reg;
     c28:	d0a01317 	ldw	r2,-32692(gp)
     c2c:	10800017 	ldw	r2,0(r2)
     c30:	f800283a 	ret

00000c34 <main>:
  
  /* Repeatedly checks state and makes updates. */
  //run ();
  
  return 0;
}
     c34:	0005883a 	mov	r2,zero
     c38:	f800283a 	ret

00000c3c <alt_irq_register>:
     c3c:	200f883a 	mov	r7,r4
     c40:	008007c4 	movi	r2,31
     c44:	1100022e 	bgeu	r2,r4,c50 <alt_irq_register+0x14>
     c48:	00bffa84 	movi	r2,-22
     c4c:	f800283a 	ret
     c50:	0011303a 	rdctl	r8,status
     c54:	013fff84 	movi	r4,-2
     c58:	4104703a 	and	r2,r8,r4
     c5c:	1001703a 	wrctl	status,r2
     c60:	380490fa 	slli	r2,r7,3
     c64:	00c00074 	movhi	r3,1
     c68:	18e69804 	addi	r3,r3,-26016
     c6c:	10c5883a 	add	r2,r2,r3
     c70:	11800015 	stw	r6,0(r2)
     c74:	11400115 	stw	r5,4(r2)
     c78:	30000e26 	beq	r6,zero,cb4 <alt_irq_register+0x78>
     c7c:	000b303a 	rdctl	r5,status
     c80:	2904703a 	and	r2,r5,r4
     c84:	1001703a 	wrctl	status,r2
     c88:	00c00074 	movhi	r3,1
     c8c:	18e68404 	addi	r3,r3,-26096
     c90:	19000017 	ldw	r4,0(r3)
     c94:	00800044 	movi	r2,1
     c98:	11c4983a 	sll	r2,r2,r7
     c9c:	1104b03a 	or	r2,r2,r4
     ca0:	18800015 	stw	r2,0(r3)
     ca4:	18800017 	ldw	r2,0(r3)
     ca8:	100170fa 	wrctl	ienable,r2
     cac:	2801703a 	wrctl	status,r5
     cb0:	00000e06 	br	cec <alt_irq_register+0xb0>
     cb4:	000b303a 	rdctl	r5,status
     cb8:	00bfff84 	movi	r2,-2
     cbc:	2884703a 	and	r2,r5,r2
     cc0:	1001703a 	wrctl	status,r2
     cc4:	00c00074 	movhi	r3,1
     cc8:	18e68404 	addi	r3,r3,-26096
     ccc:	19000017 	ldw	r4,0(r3)
     cd0:	00bfff84 	movi	r2,-2
     cd4:	11c4183a 	rol	r2,r2,r7
     cd8:	1104703a 	and	r2,r2,r4
     cdc:	18800015 	stw	r2,0(r3)
     ce0:	18800017 	ldw	r2,0(r3)
     ce4:	100170fa 	wrctl	ienable,r2
     ce8:	2801703a 	wrctl	status,r5
     cec:	4001703a 	wrctl	status,r8
     cf0:	0005883a 	mov	r2,zero
     cf4:	f800283a 	ret

00000cf8 <alt_load>:
     cf8:	deffff04 	addi	sp,sp,-4
     cfc:	dfc00015 	stw	ra,0(sp)
     d00:	01000034 	movhi	r4,0
     d04:	211ec504 	addi	r4,r4,31508
     d08:	00c00034 	movhi	r3,0
     d0c:	18d70d04 	addi	r3,r3,23604
     d10:	20c00926 	beq	r4,r3,d38 <alt_load+0x40>
     d14:	01800034 	movhi	r6,0
     d18:	319ec504 	addi	r6,r6,31508
     d1c:	19800626 	beq	r3,r6,d38 <alt_load+0x40>
     d20:	01400104 	movi	r5,4
     d24:	20800017 	ldw	r2,0(r4)
     d28:	18800015 	stw	r2,0(r3)
     d2c:	1947883a 	add	r3,r3,r5
     d30:	2149883a 	add	r4,r4,r5
     d34:	30fffb1e 	bne	r6,r3,d24 <alt_load+0x2c>
     d38:	01000034 	movhi	r4,0
     d3c:	21000804 	addi	r4,r4,32
     d40:	00c00034 	movhi	r3,0
     d44:	18c00804 	addi	r3,r3,32
     d48:	20c00926 	beq	r4,r3,d70 <alt_load+0x78>
     d4c:	01800034 	movhi	r6,0
     d50:	31805a04 	addi	r6,r6,360
     d54:	19800626 	beq	r3,r6,d70 <alt_load+0x78>
     d58:	01400104 	movi	r5,4
     d5c:	20800017 	ldw	r2,0(r4)
     d60:	18800015 	stw	r2,0(r3)
     d64:	1947883a 	add	r3,r3,r5
     d68:	2149883a 	add	r4,r4,r5
     d6c:	30fffb1e 	bne	r6,r3,d5c <alt_load+0x64>
     d70:	01000034 	movhi	r4,0
     d74:	21165f04 	addi	r4,r4,22908
     d78:	00c00034 	movhi	r3,0
     d7c:	18d65f04 	addi	r3,r3,22908
     d80:	20c00926 	beq	r4,r3,da8 <alt_load+0xb0>
     d84:	01800034 	movhi	r6,0
     d88:	31970d04 	addi	r6,r6,23604
     d8c:	19800626 	beq	r3,r6,da8 <alt_load+0xb0>
     d90:	01400104 	movi	r5,4
     d94:	20800017 	ldw	r2,0(r4)
     d98:	18800015 	stw	r2,0(r3)
     d9c:	1947883a 	add	r3,r3,r5
     da0:	2149883a 	add	r4,r4,r5
     da4:	30fffb1e 	bne	r6,r3,d94 <alt_load+0x9c>
     da8:	0002d080 	call	2d08 <alt_dcache_flush_all>
     dac:	0002df40 	call	2df4 <alt_icache_flush_all>
     db0:	dfc00017 	ldw	ra,0(sp)
     db4:	dec00104 	addi	sp,sp,4
     db8:	f800283a 	ret

00000dbc <alt_main>:
     dbc:	defffe04 	addi	sp,sp,-8
     dc0:	dfc00115 	stw	ra,4(sp)
     dc4:	dc000015 	stw	r16,0(sp)
     dc8:	0009883a 	mov	r4,zero
     dcc:	00010100 	call	1010 <alt_irq_init>
     dd0:	00010300 	call	1030 <alt_sys_init>
     dd4:	01800034 	movhi	r6,0
     dd8:	31969f04 	addi	r6,r6,23164
     ddc:	3009883a 	mov	r4,r6
     de0:	300b883a 	mov	r5,r6
     de4:	0002e780 	call	2e78 <alt_io_redirect>
     de8:	d127e717 	ldw	r4,-24676(gp)
     dec:	d167e817 	ldw	r5,-24672(gp)
     df0:	d1a7e917 	ldw	r6,-24668(gp)
     df4:	0000c340 	call	c34 <main>
     df8:	1021883a 	mov	r16,r2
     dfc:	01000044 	movi	r4,1
     e00:	0002c2c0 	call	2c2c <close>
     e04:	8009883a 	mov	r4,r16
     e08:	00033280 	call	3328 <exit>

00000e0c <alt_printf>:
     e0c:	defff804 	addi	sp,sp,-32
     e10:	dfc00415 	stw	ra,16(sp)
     e14:	dc800315 	stw	r18,12(sp)
     e18:	dc400215 	stw	r17,8(sp)
     e1c:	dc000115 	stw	r16,4(sp)
     e20:	d9400515 	stw	r5,20(sp)
     e24:	d9800615 	stw	r6,24(sp)
     e28:	d9c00715 	stw	r7,28(sp)
     e2c:	d8800504 	addi	r2,sp,20
     e30:	d8800015 	stw	r2,0(sp)
     e34:	2023883a 	mov	r17,r4
     e38:	00005d06 	br	fb0 <alt_printf+0x1a4>
     e3c:	8c400044 	addi	r17,r17,1
     e40:	21003fcc 	andi	r4,r4,255
     e44:	2100201c 	xori	r4,r4,128
     e48:	213fe004 	addi	r4,r4,-128
     e4c:	00800944 	movi	r2,37
     e50:	20800226 	beq	r4,r2,e5c <alt_printf+0x50>
     e54:	0000fe80 	call	fe8 <alt_putchar>
     e58:	00005506 	br	fb0 <alt_printf+0x1a4>
     e5c:	89400003 	ldbu	r5,0(r17)
     e60:	8c400044 	addi	r17,r17,1
     e64:	29003fcc 	andi	r4,r5,255
     e68:	2100201c 	xori	r4,r4,128
     e6c:	213fe004 	addi	r4,r4,-128
     e70:	20005726 	beq	r4,zero,fd0 <alt_printf+0x1c4>
     e74:	00800944 	movi	r2,37
     e78:	2080021e 	bne	r4,r2,e84 <alt_printf+0x78>
     e7c:	0000fe80 	call	fe8 <alt_putchar>
     e80:	00004b06 	br	fb0 <alt_printf+0x1a4>
     e84:	28c03fcc 	andi	r3,r5,255
     e88:	18c0201c 	xori	r3,r3,128
     e8c:	18ffe004 	addi	r3,r3,-128
     e90:	008018c4 	movi	r2,99
     e94:	1880061e 	bne	r3,r2,eb0 <alt_printf+0xa4>
     e98:	d8c00017 	ldw	r3,0(sp)
     e9c:	18800104 	addi	r2,r3,4
     ea0:	d8800015 	stw	r2,0(sp)
     ea4:	19000017 	ldw	r4,0(r3)
     ea8:	0000fe80 	call	fe8 <alt_putchar>
     eac:	00004006 	br	fb0 <alt_printf+0x1a4>
     eb0:	28c03fcc 	andi	r3,r5,255
     eb4:	18c0201c 	xori	r3,r3,128
     eb8:	18ffe004 	addi	r3,r3,-128
     ebc:	00801e04 	movi	r2,120
     ec0:	1880231e 	bne	r3,r2,f50 <alt_printf+0x144>
     ec4:	d8c00017 	ldw	r3,0(sp)
     ec8:	18800104 	addi	r2,r3,4
     ecc:	d8800015 	stw	r2,0(sp)
     ed0:	1c800017 	ldw	r18,0(r3)
     ed4:	90000326 	beq	r18,zero,ee4 <alt_printf+0xd8>
     ed8:	90bc002c 	andhi	r2,r18,61440
     edc:	10000426 	beq	r2,zero,ef0 <alt_printf+0xe4>
     ee0:	00003906 	br	fc8 <alt_printf+0x1bc>
     ee4:	01000c04 	movi	r4,48
     ee8:	0000fe80 	call	fe8 <alt_putchar>
     eec:	00003006 	br	fb0 <alt_printf+0x1a4>
     ef0:	04000704 	movi	r16,28
     ef4:	013fff04 	movi	r4,-4
     ef8:	00c003c4 	movi	r3,15
     efc:	8121883a 	add	r16,r16,r4
     f00:	1c04983a 	sll	r2,r3,r16
     f04:	9084703a 	and	r2,r18,r2
     f08:	103ffc26 	beq	r2,zero,efc <alt_printf+0xf0>
     f0c:	80002816 	blt	r16,zero,fb0 <alt_printf+0x1a4>
     f10:	008003c4 	movi	r2,15
     f14:	1404983a 	sll	r2,r2,r16
     f18:	9084703a 	and	r2,r18,r2
     f1c:	1406d83a 	srl	r3,r2,r16
     f20:	00800244 	movi	r2,9
     f24:	10c00236 	bltu	r2,r3,f30 <alt_printf+0x124>
     f28:	19000c04 	addi	r4,r3,48
     f2c:	00000106 	br	f34 <alt_printf+0x128>
     f30:	190015c4 	addi	r4,r3,87
     f34:	21003fcc 	andi	r4,r4,255
     f38:	2100201c 	xori	r4,r4,128
     f3c:	213fe004 	addi	r4,r4,-128
     f40:	0000fe80 	call	fe8 <alt_putchar>
     f44:	843fff04 	addi	r16,r16,-4
     f48:	80001916 	blt	r16,zero,fb0 <alt_printf+0x1a4>
     f4c:	003ff006 	br	f10 <alt_printf+0x104>
     f50:	28c03fcc 	andi	r3,r5,255
     f54:	18c0201c 	xori	r3,r3,128
     f58:	18ffe004 	addi	r3,r3,-128
     f5c:	00801cc4 	movi	r2,115
     f60:	1880131e 	bne	r3,r2,fb0 <alt_printf+0x1a4>
     f64:	d8800017 	ldw	r2,0(sp)
     f68:	10c00104 	addi	r3,r2,4
     f6c:	d8c00015 	stw	r3,0(sp)
     f70:	14000017 	ldw	r16,0(r2)
     f74:	81000003 	ldbu	r4,0(r16)
     f78:	20803fcc 	andi	r2,r4,255
     f7c:	1080201c 	xori	r2,r2,128
     f80:	10bfe004 	addi	r2,r2,-128
     f84:	10000a26 	beq	r2,zero,fb0 <alt_printf+0x1a4>
     f88:	84000044 	addi	r16,r16,1
     f8c:	21003fcc 	andi	r4,r4,255
     f90:	2100201c 	xori	r4,r4,128
     f94:	213fe004 	addi	r4,r4,-128
     f98:	0000fe80 	call	fe8 <alt_putchar>
     f9c:	81000003 	ldbu	r4,0(r16)
     fa0:	20803fcc 	andi	r2,r4,255
     fa4:	1080201c 	xori	r2,r2,128
     fa8:	10bfe004 	addi	r2,r2,-128
     fac:	103ff61e 	bne	r2,zero,f88 <alt_printf+0x17c>
     fb0:	89000003 	ldbu	r4,0(r17)
     fb4:	20803fcc 	andi	r2,r4,255
     fb8:	1080201c 	xori	r2,r2,128
     fbc:	10bfe004 	addi	r2,r2,-128
     fc0:	103f9e1e 	bne	r2,zero,e3c <alt_printf+0x30>
     fc4:	00000206 	br	fd0 <alt_printf+0x1c4>
     fc8:	04000704 	movi	r16,28
     fcc:	003fd006 	br	f10 <alt_printf+0x104>
     fd0:	dfc00417 	ldw	ra,16(sp)
     fd4:	dc800317 	ldw	r18,12(sp)
     fd8:	dc400217 	ldw	r17,8(sp)
     fdc:	dc000117 	ldw	r16,4(sp)
     fe0:	dec00804 	addi	sp,sp,32
     fe4:	f800283a 	ret

00000fe8 <alt_putchar>:
     fe8:	deffff04 	addi	sp,sp,-4
     fec:	dfc00015 	stw	ra,0(sp)
     ff0:	00800034 	movhi	r2,0
     ff4:	109ec004 	addi	r2,r2,31488
     ff8:	10800017 	ldw	r2,0(r2)
     ffc:	11400217 	ldw	r5,8(r2)
    1000:	00034740 	call	3474 <putc>
    1004:	dfc00017 	ldw	ra,0(sp)
    1008:	dec00104 	addi	sp,sp,4
    100c:	f800283a 	ret

00001010 <alt_irq_init>:
    1010:	deffff04 	addi	sp,sp,-4
    1014:	dfc00015 	stw	ra,0(sp)
    1018:	00031b80 	call	31b8 <altera_nios2_qsys_irq_init>
    101c:	00800044 	movi	r2,1
    1020:	1001703a 	wrctl	status,r2
    1024:	dfc00017 	ldw	ra,0(sp)
    1028:	dec00104 	addi	sp,sp,4
    102c:	f800283a 	ret

00001030 <alt_sys_init>:
    1030:	defffc04 	addi	sp,sp,-16
    1034:	dfc00315 	stw	ra,12(sp)
    1038:	dc800215 	stw	r18,8(sp)
    103c:	dc400115 	stw	r17,4(sp)
    1040:	dc000015 	stw	r16,0(sp)
    1044:	04000204 	movi	r16,8
    1048:	01040034 	movhi	r4,4096
    104c:	21080004 	addi	r4,r4,8192
    1050:	000b883a 	mov	r5,zero
    1054:	000d883a 	mov	r6,zero
    1058:	800f883a 	mov	r7,r16
    105c:	0001f580 	call	1f58 <alt_avalon_timer_sc_init>
    1060:	04400034 	movhi	r17,0
    1064:	8c571704 	addi	r17,r17,23644
    1068:	8809883a 	mov	r4,r17
    106c:	000b883a 	mov	r5,zero
    1070:	800d883a 	mov	r6,r16
    1074:	00014240 	call	1424 <altera_avalon_jtag_uart_init>
    1078:	04000034 	movhi	r16,0
    107c:	841eba04 	addi	r16,r16,31464
    1080:	893ff604 	addi	r4,r17,-40
    1084:	800b883a 	mov	r5,r16
    1088:	0002d140 	call	2d14 <alt_dev_llist_insert>
    108c:	01000034 	movhi	r4,0
    1090:	211b2504 	addi	r4,r4,27796
    1094:	000b883a 	mov	r5,zero
    1098:	018000c4 	movi	r6,3
    109c:	00019380 	call	1938 <alt_avalon_sgdma_init>
    10a0:	04800104 	movi	r18,4
    10a4:	01000034 	movhi	r4,0
    10a8:	211b3104 	addi	r4,r4,27844
    10ac:	000b883a 	mov	r5,zero
    10b0:	900d883a 	mov	r6,r18
    10b4:	00019380 	call	1938 <alt_avalon_sgdma_init>
    10b8:	01000034 	movhi	r4,0
    10bc:	211b3d04 	addi	r4,r4,27892
    10c0:	800b883a 	mov	r5,r16
    10c4:	0002d140 	call	2d14 <alt_dev_llist_insert>
    10c8:	01000034 	movhi	r4,0
    10cc:	211b4804 	addi	r4,r4,27936
    10d0:	800b883a 	mov	r5,r16
    10d4:	0002d140 	call	2d14 <alt_dev_llist_insert>
    10d8:	01000034 	movhi	r4,0
    10dc:	211b5404 	addi	r4,r4,27984
    10e0:	800b883a 	mov	r5,r16
    10e4:	0002d140 	call	2d14 <alt_dev_llist_insert>
    10e8:	01000034 	movhi	r4,0
    10ec:	211b6004 	addi	r4,r4,28032
    10f0:	800b883a 	mov	r5,r16
    10f4:	0002d140 	call	2d14 <alt_dev_llist_insert>
    10f8:	04400034 	movhi	r17,0
    10fc:	8c5b6c04 	addi	r17,r17,28080
    1100:	8809883a 	mov	r4,r17
    1104:	000208c0 	call	208c <alt_up_character_lcd_init>
    1108:	8809883a 	mov	r4,r17
    110c:	800b883a 	mov	r5,r16
    1110:	0002d140 	call	2d14 <alt_dev_llist_insert>
    1114:	01000034 	movhi	r4,0
    1118:	211b7704 	addi	r4,r4,28124
    111c:	800b883a 	mov	r5,r16
    1120:	0002d140 	call	2d14 <alt_dev_llist_insert>
    1124:	01000034 	movhi	r4,0
    1128:	211b8204 	addi	r4,r4,28168
    112c:	800b883a 	mov	r5,r16
    1130:	0002d140 	call	2d14 <alt_dev_llist_insert>
    1134:	01000034 	movhi	r4,0
    1138:	211b8d04 	addi	r4,r4,28212
    113c:	800b883a 	mov	r5,r16
    1140:	0002d140 	call	2d14 <alt_dev_llist_insert>
    1144:	01000034 	movhi	r4,0
    1148:	211b9804 	addi	r4,r4,28256
    114c:	800b883a 	mov	r5,r16
    1150:	0002d140 	call	2d14 <alt_dev_llist_insert>
    1154:	01000034 	movhi	r4,0
    1158:	211ba304 	addi	r4,r4,28300
    115c:	800b883a 	mov	r5,r16
    1160:	0002d140 	call	2d14 <alt_dev_llist_insert>
    1164:	01000034 	movhi	r4,0
    1168:	211bae04 	addi	r4,r4,28344
    116c:	800b883a 	mov	r5,r16
    1170:	0002d140 	call	2d14 <alt_dev_llist_insert>
    1174:	01000034 	movhi	r4,0
    1178:	211bb904 	addi	r4,r4,28388
    117c:	800b883a 	mov	r5,r16
    1180:	0002d140 	call	2d14 <alt_dev_llist_insert>
    1184:	01000034 	movhi	r4,0
    1188:	211bc404 	addi	r4,r4,28432
    118c:	800b883a 	mov	r5,r16
    1190:	0002d140 	call	2d14 <alt_dev_llist_insert>
    1194:	04400034 	movhi	r17,0
    1198:	8c5bcf04 	addi	r17,r17,28476
    119c:	8809883a 	mov	r4,r17
    11a0:	00027900 	call	2790 <alt_up_ps2_init>
    11a4:	8809883a 	mov	r4,r17
    11a8:	800b883a 	mov	r5,r16
    11ac:	0002d140 	call	2d14 <alt_dev_llist_insert>
    11b0:	04400034 	movhi	r17,0
    11b4:	8c5bdd04 	addi	r17,r17,28532
    11b8:	8809883a 	mov	r4,r17
    11bc:	00027900 	call	2790 <alt_up_ps2_init>
    11c0:	8809883a 	mov	r4,r17
    11c4:	800b883a 	mov	r5,r16
    11c8:	0002d140 	call	2d14 <alt_dev_llist_insert>
    11cc:	01000034 	movhi	r4,0
    11d0:	211beb04 	addi	r4,r4,28588
    11d4:	800b883a 	mov	r5,r16
    11d8:	0002d140 	call	2d14 <alt_dev_llist_insert>
    11dc:	01000034 	movhi	r4,0
    11e0:	211bf604 	addi	r4,r4,28632
    11e4:	800b883a 	mov	r5,r16
    11e8:	0002d140 	call	2d14 <alt_dev_llist_insert>
    11ec:	01000034 	movhi	r4,0
    11f0:	211c0304 	addi	r4,r4,28684
    11f4:	20800a17 	ldw	r2,40(r4)
    11f8:	1485883a 	add	r2,r2,r18
    11fc:	10c0000b 	ldhu	r3,0(r2)
    1200:	20c00c15 	stw	r3,48(r4)
    1204:	10800017 	ldw	r2,0(r2)
    1208:	100ad43a 	srli	r5,r2,16
    120c:	21400d15 	stw	r5,52(r4)
    1210:	00801004 	movi	r2,64
    1214:	10c00436 	bltu	r2,r3,1228 <alt_sys_init+0x1f8>
    1218:	00800fc4 	movi	r2,63
    121c:	20800f15 	stw	r2,60(r4)
    1220:	00800184 	movi	r2,6
    1224:	20801015 	stw	r2,64(r4)
    1228:	00800804 	movi	r2,32
    122c:	11400436 	bltu	r2,r5,1240 <alt_sys_init+0x210>
    1230:	00c007c4 	movi	r3,31
    1234:	00800034 	movhi	r2,0
    1238:	109c0304 	addi	r2,r2,28684
    123c:	10c01115 	stw	r3,68(r2)
    1240:	04000034 	movhi	r16,0
    1244:	841c0304 	addi	r16,r16,28684
    1248:	8009883a 	mov	r4,r16
    124c:	0002b480 	call	2b48 <alt_up_char_buffer_init>
    1250:	8009883a 	mov	r4,r16
    1254:	01400034 	movhi	r5,0
    1258:	295eba04 	addi	r5,r5,31464
    125c:	0002d140 	call	2d14 <alt_dev_llist_insert>
    1260:	01000034 	movhi	r4,0
    1264:	211c1504 	addi	r4,r4,28756
    1268:	20800a17 	ldw	r2,40(r4)
    126c:	10800104 	addi	r2,r2,4
    1270:	10c0000b 	ldhu	r3,0(r2)
    1274:	20c00c15 	stw	r3,48(r4)
    1278:	10800017 	ldw	r2,0(r2)
    127c:	100ad43a 	srli	r5,r2,16
    1280:	21400d15 	stw	r5,52(r4)
    1284:	00801004 	movi	r2,64
    1288:	10c00436 	bltu	r2,r3,129c <alt_sys_init+0x26c>
    128c:	00800fc4 	movi	r2,63
    1290:	20800f15 	stw	r2,60(r4)
    1294:	00800184 	movi	r2,6
    1298:	20801015 	stw	r2,64(r4)
    129c:	00800804 	movi	r2,32
    12a0:	11400436 	bltu	r2,r5,12b4 <alt_sys_init+0x284>
    12a4:	00c007c4 	movi	r3,31
    12a8:	00800034 	movhi	r2,0
    12ac:	109c1504 	addi	r2,r2,28756
    12b0:	10c01115 	stw	r3,68(r2)
    12b4:	04000034 	movhi	r16,0
    12b8:	841c1504 	addi	r16,r16,28756
    12bc:	8009883a 	mov	r4,r16
    12c0:	0002b480 	call	2b48 <alt_up_char_buffer_init>
    12c4:	04400034 	movhi	r17,0
    12c8:	8c5eba04 	addi	r17,r17,31464
    12cc:	8009883a 	mov	r4,r16
    12d0:	880b883a 	mov	r5,r17
    12d4:	0002d140 	call	2d14 <alt_dev_llist_insert>
    12d8:	01000034 	movhi	r4,0
    12dc:	211c2704 	addi	r4,r4,28828
    12e0:	880b883a 	mov	r5,r17
    12e4:	0002d140 	call	2d14 <alt_dev_llist_insert>
    12e8:	dfc00317 	ldw	ra,12(sp)
    12ec:	dc800217 	ldw	r18,8(sp)
    12f0:	dc400117 	ldw	r17,4(sp)
    12f4:	dc000017 	ldw	r16,0(sp)
    12f8:	dec00404 	addi	sp,sp,16
    12fc:	f800283a 	ret

00001300 <altera_avalon_jtag_uart_ioctl_fd>:
    1300:	deffff04 	addi	sp,sp,-4
    1304:	dfc00015 	stw	ra,0(sp)
    1308:	21000017 	ldw	r4,0(r4)
    130c:	21000a04 	addi	r4,r4,40
    1310:	00015d00 	call	15d0 <altera_avalon_jtag_uart_ioctl>
    1314:	dfc00017 	ldw	ra,0(sp)
    1318:	dec00104 	addi	sp,sp,4
    131c:	f800283a 	ret

00001320 <altera_avalon_jtag_uart_close_fd>:
    1320:	deffff04 	addi	sp,sp,-4
    1324:	dfc00015 	stw	ra,0(sp)
    1328:	2005883a 	mov	r2,r4
    132c:	21000017 	ldw	r4,0(r4)
    1330:	21000a04 	addi	r4,r4,40
    1334:	11400217 	ldw	r5,8(r2)
    1338:	00013980 	call	1398 <altera_avalon_jtag_uart_close>
    133c:	dfc00017 	ldw	ra,0(sp)
    1340:	dec00104 	addi	sp,sp,4
    1344:	f800283a 	ret

00001348 <altera_avalon_jtag_uart_write_fd>:
    1348:	deffff04 	addi	sp,sp,-4
    134c:	dfc00015 	stw	ra,0(sp)
    1350:	2005883a 	mov	r2,r4
    1354:	21000017 	ldw	r4,0(r4)
    1358:	21000a04 	addi	r4,r4,40
    135c:	11c00217 	ldw	r7,8(r2)
    1360:	00017ac0 	call	17ac <altera_avalon_jtag_uart_write>
    1364:	dfc00017 	ldw	ra,0(sp)
    1368:	dec00104 	addi	sp,sp,4
    136c:	f800283a 	ret

00001370 <altera_avalon_jtag_uart_read_fd>:
    1370:	deffff04 	addi	sp,sp,-4
    1374:	dfc00015 	stw	ra,0(sp)
    1378:	2005883a 	mov	r2,r4
    137c:	21000017 	ldw	r4,0(r4)
    1380:	21000a04 	addi	r4,r4,40
    1384:	11c00217 	ldw	r7,8(r2)
    1388:	00016440 	call	1644 <altera_avalon_jtag_uart_read>
    138c:	dfc00017 	ldw	ra,0(sp)
    1390:	dec00104 	addi	sp,sp,4
    1394:	f800283a 	ret

00001398 <altera_avalon_jtag_uart_close>:
    1398:	21800c17 	ldw	r6,48(r4)
    139c:	2950000c 	andi	r5,r5,16384
    13a0:	280b003a 	cmpeq	r5,r5,zero
    13a4:	00000306 	br	13b4 <altera_avalon_jtag_uart_close+0x1c>
    13a8:	2800021e 	bne	r5,zero,13b4 <altera_avalon_jtag_uart_close+0x1c>
    13ac:	00bffd44 	movi	r2,-11
    13b0:	f800283a 	ret
    13b4:	20800d17 	ldw	r2,52(r4)
    13b8:	11800326 	beq	r2,r6,13c8 <altera_avalon_jtag_uart_close+0x30>
    13bc:	20c00917 	ldw	r3,36(r4)
    13c0:	20800117 	ldw	r2,4(r4)
    13c4:	18bff836 	bltu	r3,r2,13a8 <altera_avalon_jtag_uart_close+0x10>
    13c8:	0005883a 	mov	r2,zero
    13cc:	f800283a 	ret

000013d0 <altera_avalon_jtag_uart_timeout>:
    13d0:	20800017 	ldw	r2,0(r4)
    13d4:	10c00104 	addi	r3,r2,4
    13d8:	18800037 	ldwio	r2,0(r3)
    13dc:	01410004 	movi	r5,1024
    13e0:	1144703a 	and	r2,r2,r5
    13e4:	10000526 	beq	r2,zero,13fc <altera_avalon_jtag_uart_timeout+0x2c>
    13e8:	20800817 	ldw	r2,32(r4)
    13ec:	1144b03a 	or	r2,r2,r5
    13f0:	18800035 	stwio	r2,0(r3)
    13f4:	20000915 	stw	zero,36(r4)
    13f8:	00000606 	br	1414 <altera_avalon_jtag_uart_timeout+0x44>
    13fc:	20c00917 	ldw	r3,36(r4)
    1400:	00a00034 	movhi	r2,32768
    1404:	10bfff04 	addi	r2,r2,-4
    1408:	10c00236 	bltu	r2,r3,1414 <altera_avalon_jtag_uart_timeout+0x44>
    140c:	18800044 	addi	r2,r3,1
    1410:	20800915 	stw	r2,36(r4)
    1414:	00800074 	movhi	r2,1
    1418:	10a68804 	addi	r2,r2,-26080
    141c:	10800017 	ldw	r2,0(r2)
    1420:	f800283a 	ret

00001424 <altera_avalon_jtag_uart_init>:
    1424:	defffe04 	addi	sp,sp,-8
    1428:	dfc00115 	stw	ra,4(sp)
    142c:	dc000015 	stw	r16,0(sp)
    1430:	2021883a 	mov	r16,r4
    1434:	00c00044 	movi	r3,1
    1438:	20c00815 	stw	r3,32(r4)
    143c:	20800017 	ldw	r2,0(r4)
    1440:	10c00135 	stwio	r3,4(r2)
    1444:	3009883a 	mov	r4,r6
    1448:	800b883a 	mov	r5,r16
    144c:	01800034 	movhi	r6,0
    1450:	31852704 	addi	r6,r6,5276
    1454:	0000c3c0 	call	c3c <alt_irq_register>
    1458:	80000915 	stw	zero,36(r16)
    145c:	81000204 	addi	r4,r16,8
    1460:	00800074 	movhi	r2,1
    1464:	10a68804 	addi	r2,r2,-26080
    1468:	11400017 	ldw	r5,0(r2)
    146c:	01800034 	movhi	r6,0
    1470:	3184f404 	addi	r6,r6,5072
    1474:	800f883a 	mov	r7,r16
    1478:	0002b980 	call	2b98 <alt_alarm_start>
    147c:	1000030e 	bge	r2,zero,148c <altera_avalon_jtag_uart_init+0x68>
    1480:	00a00034 	movhi	r2,32768
    1484:	10bfffc4 	addi	r2,r2,-1
    1488:	80800115 	stw	r2,4(r16)
    148c:	dfc00117 	ldw	ra,4(sp)
    1490:	dc000017 	ldw	r16,0(sp)
    1494:	dec00204 	addi	sp,sp,8
    1498:	f800283a 	ret

0000149c <altera_avalon_jtag_uart_irq>:
    149c:	22000017 	ldw	r8,0(r4)
    14a0:	03800104 	movi	r14,4
    14a4:	4399883a 	add	r12,r8,r14
    14a8:	037ffff4 	movhi	r13,65535
    14ac:	62c00037 	ldwio	r11,0(r12)
    14b0:	5880c00c 	andi	r2,r11,768
    14b4:	10004526 	beq	r2,zero,15cc <altera_avalon_jtag_uart_irq+0x130>
    14b8:	5880400c 	andi	r2,r11,256
    14bc:	10002126 	beq	r2,zero,1544 <altera_avalon_jtag_uart_irq+0xa8>
    14c0:	20800a17 	ldw	r2,40(r4)
    14c4:	10800044 	addi	r2,r2,1
    14c8:	1081ffcc 	andi	r2,r2,2047
    14cc:	20c00b17 	ldw	r3,44(r4)
    14d0:	10c01626 	beq	r2,r3,152c <altera_avalon_jtag_uart_irq+0x90>
    14d4:	02a00014 	movui	r10,32768
    14d8:	02400e04 	movi	r9,56
    14dc:	01c00044 	movi	r7,1
    14e0:	0181ffc4 	movi	r6,2047
    14e4:	41400037 	ldwio	r5,0(r8)
    14e8:	2a84703a 	and	r2,r5,r10
    14ec:	10000d26 	beq	r2,zero,1524 <altera_avalon_jtag_uart_irq+0x88>
    14f0:	20800a17 	ldw	r2,40(r4)
    14f4:	1105883a 	add	r2,r2,r4
    14f8:	1245883a 	add	r2,r2,r9
    14fc:	11400005 	stb	r5,0(r2)
    1500:	20800a17 	ldw	r2,40(r4)
    1504:	11c5883a 	add	r2,r2,r7
    1508:	1184703a 	and	r2,r2,r6
    150c:	20800a15 	stw	r2,40(r4)
    1510:	20800a17 	ldw	r2,40(r4)
    1514:	11c5883a 	add	r2,r2,r7
    1518:	1184703a 	and	r2,r2,r6
    151c:	20c00b17 	ldw	r3,44(r4)
    1520:	10fff01e 	bne	r2,r3,14e4 <altera_avalon_jtag_uart_irq+0x48>
    1524:	2b44703a 	and	r2,r5,r13
    1528:	10000626 	beq	r2,zero,1544 <altera_avalon_jtag_uart_irq+0xa8>
    152c:	20800817 	ldw	r2,32(r4)
    1530:	00ffff84 	movi	r3,-2
    1534:	10c4703a 	and	r2,r2,r3
    1538:	20800815 	stw	r2,32(r4)
    153c:	60800035 	stwio	r2,0(r12)
    1540:	60800037 	ldwio	r2,0(r12)
    1544:	5880800c 	andi	r2,r11,512
    1548:	103fd826 	beq	r2,zero,14ac <altera_avalon_jtag_uart_irq+0x10>
    154c:	5b44703a 	and	r2,r11,r13
    1550:	100ad43a 	srli	r5,r2,16
    1554:	283fd526 	beq	r5,zero,14ac <altera_avalon_jtag_uart_irq+0x10>
    1558:	20c00d17 	ldw	r3,52(r4)
    155c:	20800c17 	ldw	r2,48(r4)
    1560:	18801126 	beq	r3,r2,15a8 <altera_avalon_jtag_uart_irq+0x10c>
    1564:	02420e04 	movi	r9,2104
    1568:	01800044 	movi	r6,1
    156c:	01c1ffc4 	movi	r7,2047
    1570:	20800d17 	ldw	r2,52(r4)
    1574:	1105883a 	add	r2,r2,r4
    1578:	1245883a 	add	r2,r2,r9
    157c:	10800007 	ldb	r2,0(r2)
    1580:	40800035 	stwio	r2,0(r8)
    1584:	20800d17 	ldw	r2,52(r4)
    1588:	1185883a 	add	r2,r2,r6
    158c:	11c4703a 	and	r2,r2,r7
    1590:	20800d15 	stw	r2,52(r4)
    1594:	298bc83a 	sub	r5,r5,r6
    1598:	283fc426 	beq	r5,zero,14ac <altera_avalon_jtag_uart_irq+0x10>
    159c:	20c00d17 	ldw	r3,52(r4)
    15a0:	20800c17 	ldw	r2,48(r4)
    15a4:	18bff21e 	bne	r3,r2,1570 <altera_avalon_jtag_uart_irq+0xd4>
    15a8:	20c00817 	ldw	r3,32(r4)
    15ac:	00bfff44 	movi	r2,-3
    15b0:	1886703a 	and	r3,r3,r2
    15b4:	20c00815 	stw	r3,32(r4)
    15b8:	20800017 	ldw	r2,0(r4)
    15bc:	1385883a 	add	r2,r2,r14
    15c0:	10c00035 	stwio	r3,0(r2)
    15c4:	60800037 	ldwio	r2,0(r12)
    15c8:	003fb806 	br	14ac <altera_avalon_jtag_uart_irq+0x10>
    15cc:	f800283a 	ret

000015d0 <altera_avalon_jtag_uart_ioctl>:
    15d0:	009a8044 	movi	r2,27137
    15d4:	28800326 	beq	r5,r2,15e4 <altera_avalon_jtag_uart_ioctl+0x14>
    15d8:	009a8084 	movi	r2,27138
    15dc:	2880171e 	bne	r5,r2,163c <altera_avalon_jtag_uart_ioctl+0x6c>
    15e0:	00000d06 	br	1618 <altera_avalon_jtag_uart_ioctl+0x48>
    15e4:	20c00117 	ldw	r3,4(r4)
    15e8:	00a00034 	movhi	r2,32768
    15ec:	10bfffc4 	addi	r2,r2,-1
    15f0:	18801226 	beq	r3,r2,163c <altera_avalon_jtag_uart_ioctl+0x6c>
    15f4:	31800017 	ldw	r6,0(r6)
    15f8:	30ffff84 	addi	r3,r6,-2
    15fc:	10bfff44 	addi	r2,r2,-3
    1600:	10c0022e 	bgeu	r2,r3,160c <altera_avalon_jtag_uart_ioctl+0x3c>
    1604:	01a00034 	movhi	r6,32768
    1608:	31bfff84 	addi	r6,r6,-2
    160c:	21800115 	stw	r6,4(r4)
    1610:	0005883a 	mov	r2,zero
    1614:	f800283a 	ret
    1618:	20c00117 	ldw	r3,4(r4)
    161c:	00a00034 	movhi	r2,32768
    1620:	10bfffc4 	addi	r2,r2,-1
    1624:	18800526 	beq	r3,r2,163c <altera_avalon_jtag_uart_ioctl+0x6c>
    1628:	20800917 	ldw	r2,36(r4)
    162c:	10c5803a 	cmpltu	r2,r2,r3
    1630:	30800015 	stw	r2,0(r6)
    1634:	0005883a 	mov	r2,zero
    1638:	f800283a 	ret
    163c:	00bff9c4 	movi	r2,-25
    1640:	f800283a 	ret

00001644 <altera_avalon_jtag_uart_read>:
    1644:	defff604 	addi	sp,sp,-40
    1648:	dfc00915 	stw	ra,36(sp)
    164c:	df000815 	stw	fp,32(sp)
    1650:	ddc00715 	stw	r23,28(sp)
    1654:	dd800615 	stw	r22,24(sp)
    1658:	dd400515 	stw	r21,20(sp)
    165c:	dd000415 	stw	r20,16(sp)
    1660:	dcc00315 	stw	r19,12(sp)
    1664:	dc800215 	stw	r18,8(sp)
    1668:	dc400115 	stw	r17,4(sp)
    166c:	dc000015 	stw	r16,0(sp)
    1670:	2025883a 	mov	r18,r4
    1674:	282f883a 	mov	r23,r5
    1678:	3027883a 	mov	r19,r6
    167c:	3839883a 	mov	fp,r7
    1680:	0180220e 	bge	zero,r6,170c <altera_avalon_jtag_uart_read+0xc8>
    1684:	b82b883a 	mov	r21,r23
    1688:	95800a17 	ldw	r22,40(r18)
    168c:	94400b17 	ldw	r17,44(r18)
    1690:	b4400236 	bltu	r22,r17,169c <altera_avalon_jtag_uart_read+0x58>
    1694:	b461c83a 	sub	r16,r22,r17
    1698:	00000206 	br	16a4 <altera_avalon_jtag_uart_read+0x60>
    169c:	00820004 	movi	r2,2048
    16a0:	1461c83a 	sub	r16,r2,r17
    16a4:	80000d26 	beq	r16,zero,16dc <altera_avalon_jtag_uart_read+0x98>
    16a8:	9829883a 	mov	r20,r19
    16ac:	9c001d36 	bltu	r19,r16,1724 <altera_avalon_jtag_uart_read+0xe0>
    16b0:	91400e04 	addi	r5,r18,56
    16b4:	a809883a 	mov	r4,r21
    16b8:	2c4b883a 	add	r5,r5,r17
    16bc:	800d883a 	mov	r6,r16
    16c0:	00033d40 	call	33d4 <memcpy>
    16c4:	ac2b883a 	add	r21,r21,r16
    16c8:	9c27c83a 	sub	r19,r19,r16
    16cc:	8445883a 	add	r2,r16,r17
    16d0:	1081ffcc 	andi	r2,r2,2047
    16d4:	90800b15 	stw	r2,44(r18)
    16d8:	04ffeb16 	blt	zero,r19,1688 <altera_avalon_jtag_uart_read+0x44>
    16dc:	adc01c1e 	bne	r21,r23,1750 <altera_avalon_jtag_uart_read+0x10c>
    16e0:	e090000c 	andi	r2,fp,16384
    16e4:	10000d1e 	bne	r2,zero,171c <altera_avalon_jtag_uart_read+0xd8>
    16e8:	90800a17 	ldw	r2,40(r18)
    16ec:	b080031e 	bne	r22,r2,16fc <altera_avalon_jtag_uart_read+0xb8>
    16f0:	90c00917 	ldw	r3,36(r18)
    16f4:	90800117 	ldw	r2,4(r18)
    16f8:	18bffb36 	bltu	r3,r2,16e8 <altera_avalon_jtag_uart_read+0xa4>
    16fc:	90800a17 	ldw	r2,40(r18)
    1700:	b0800426 	beq	r22,r2,1714 <altera_avalon_jtag_uart_read+0xd0>
    1704:	04c0030e 	bge	zero,r19,1714 <altera_avalon_jtag_uart_read+0xd0>
    1708:	003fde06 	br	1684 <altera_avalon_jtag_uart_read+0x40>
    170c:	3890000c 	andi	r2,r7,16384
    1710:	1000021e 	bne	r2,zero,171c <altera_avalon_jtag_uart_read+0xd8>
    1714:	00bffec4 	movi	r2,-5
    1718:	00001806 	br	177c <altera_avalon_jtag_uart_read+0x138>
    171c:	00bffd44 	movi	r2,-11
    1720:	00001606 	br	177c <altera_avalon_jtag_uart_read+0x138>
    1724:	91400e04 	addi	r5,r18,56
    1728:	a809883a 	mov	r4,r21
    172c:	894b883a 	add	r5,r17,r5
    1730:	980d883a 	mov	r6,r19
    1734:	00033d40 	call	33d4 <memcpy>
    1738:	aceb883a 	add	r21,r21,r19
    173c:	0027883a 	mov	r19,zero
    1740:	a445883a 	add	r2,r20,r17
    1744:	1081ffcc 	andi	r2,r2,2047
    1748:	90800b15 	stw	r2,44(r18)
    174c:	003fe306 	br	16dc <altera_avalon_jtag_uart_read+0x98>
    1750:	0009303a 	rdctl	r4,status
    1754:	00bfff84 	movi	r2,-2
    1758:	2084703a 	and	r2,r4,r2
    175c:	1001703a 	wrctl	status,r2
    1760:	90800817 	ldw	r2,32(r18)
    1764:	10800054 	ori	r2,r2,1
    1768:	90800815 	stw	r2,32(r18)
    176c:	90c00017 	ldw	r3,0(r18)
    1770:	18800135 	stwio	r2,4(r3)
    1774:	2001703a 	wrctl	status,r4
    1778:	adc5c83a 	sub	r2,r21,r23
    177c:	dfc00917 	ldw	ra,36(sp)
    1780:	df000817 	ldw	fp,32(sp)
    1784:	ddc00717 	ldw	r23,28(sp)
    1788:	dd800617 	ldw	r22,24(sp)
    178c:	dd400517 	ldw	r21,20(sp)
    1790:	dd000417 	ldw	r20,16(sp)
    1794:	dcc00317 	ldw	r19,12(sp)
    1798:	dc800217 	ldw	r18,8(sp)
    179c:	dc400117 	ldw	r17,4(sp)
    17a0:	dc000017 	ldw	r16,0(sp)
    17a4:	dec00a04 	addi	sp,sp,40
    17a8:	f800283a 	ret

000017ac <altera_avalon_jtag_uart_write>:
    17ac:	defff804 	addi	sp,sp,-32
    17b0:	dfc00715 	stw	ra,28(sp)
    17b4:	dd800615 	stw	r22,24(sp)
    17b8:	dd400515 	stw	r21,20(sp)
    17bc:	dd000415 	stw	r20,16(sp)
    17c0:	dcc00315 	stw	r19,12(sp)
    17c4:	dc800215 	stw	r18,8(sp)
    17c8:	dc400115 	stw	r17,4(sp)
    17cc:	dc000015 	stw	r16,0(sp)
    17d0:	2021883a 	mov	r16,r4
    17d4:	282d883a 	mov	r22,r5
    17d8:	3011883a 	mov	r8,r6
    17dc:	382b883a 	mov	r21,r7
    17e0:	01800616 	blt	zero,r6,17fc <altera_avalon_jtag_uart_write+0x50>
    17e4:	2829883a 	mov	r20,r5
    17e8:	00002106 	br	1870 <altera_avalon_jtag_uart_write+0xc4>
    17ec:	a585c83a 	sub	r2,r20,r22
    17f0:	00004306 	br	1900 <altera_avalon_jtag_uart_write+0x154>
    17f4:	00bffd44 	movi	r2,-11
    17f8:	00004106 	br	1900 <altera_avalon_jtag_uart_write+0x154>
    17fc:	2829883a 	mov	r20,r5
    1800:	84800c17 	ldw	r18,48(r16)
    1804:	81400d17 	ldw	r5,52(r16)
    1808:	9140032e 	bgeu	r18,r5,1818 <altera_avalon_jtag_uart_write+0x6c>
    180c:	2c85c83a 	sub	r2,r5,r18
    1810:	11bfffc4 	addi	r6,r2,-1
    1814:	00000606 	br	1830 <altera_avalon_jtag_uart_write+0x84>
    1818:	28000326 	beq	r5,zero,1828 <altera_avalon_jtag_uart_write+0x7c>
    181c:	00820004 	movi	r2,2048
    1820:	148dc83a 	sub	r6,r2,r18
    1824:	00000206 	br	1830 <altera_avalon_jtag_uart_write+0x84>
    1828:	0081ffc4 	movi	r2,2047
    182c:	148dc83a 	sub	r6,r2,r18
    1830:	30002626 	beq	r6,zero,18cc <altera_avalon_jtag_uart_write+0x120>
    1834:	4027883a 	mov	r19,r8
    1838:	3023883a 	mov	r17,r6
    183c:	4180012e 	bgeu	r8,r6,1844 <altera_avalon_jtag_uart_write+0x98>
    1840:	4023883a 	mov	r17,r8
    1844:	81020e04 	addi	r4,r16,2104
    1848:	2489883a 	add	r4,r4,r18
    184c:	a00b883a 	mov	r5,r20
    1850:	880d883a 	mov	r6,r17
    1854:	00033d40 	call	33d4 <memcpy>
    1858:	a469883a 	add	r20,r20,r17
    185c:	9c51c83a 	sub	r8,r19,r17
    1860:	9445883a 	add	r2,r18,r17
    1864:	1081ffcc 	andi	r2,r2,2047
    1868:	80800c15 	stw	r2,48(r16)
    186c:	023fe416 	blt	zero,r8,1800 <altera_avalon_jtag_uart_write+0x54>
    1870:	0009303a 	rdctl	r4,status
    1874:	00bfff84 	movi	r2,-2
    1878:	2084703a 	and	r2,r4,r2
    187c:	1001703a 	wrctl	status,r2
    1880:	80800817 	ldw	r2,32(r16)
    1884:	10800094 	ori	r2,r2,2
    1888:	80800815 	stw	r2,32(r16)
    188c:	80c00017 	ldw	r3,0(r16)
    1890:	18800135 	stwio	r2,4(r3)
    1894:	2001703a 	wrctl	status,r4
    1898:	00000706 	br	18b8 <altera_avalon_jtag_uart_write+0x10c>
    189c:	80800d17 	ldw	r2,52(r16)
    18a0:	1140031e 	bne	r2,r5,18b0 <altera_avalon_jtag_uart_write+0x104>
    18a4:	80c00917 	ldw	r3,36(r16)
    18a8:	80800117 	ldw	r2,4(r16)
    18ac:	18bffb36 	bltu	r3,r2,189c <altera_avalon_jtag_uart_write+0xf0>
    18b0:	80800d17 	ldw	r2,52(r16)
    18b4:	117fed1e 	bne	r2,r5,186c <altera_avalon_jtag_uart_write+0xc0>
    18b8:	b53fcc1e 	bne	r22,r20,17ec <altera_avalon_jtag_uart_write+0x40>
    18bc:	a890000c 	andi	r2,r21,16384
    18c0:	103fcc1e 	bne	r2,zero,17f4 <altera_avalon_jtag_uart_write+0x48>
    18c4:	00bffec4 	movi	r2,-5
    18c8:	00000d06 	br	1900 <altera_avalon_jtag_uart_write+0x154>
    18cc:	0009303a 	rdctl	r4,status
    18d0:	00bfff84 	movi	r2,-2
    18d4:	2084703a 	and	r2,r4,r2
    18d8:	1001703a 	wrctl	status,r2
    18dc:	80800817 	ldw	r2,32(r16)
    18e0:	10800094 	ori	r2,r2,2
    18e4:	80800815 	stw	r2,32(r16)
    18e8:	80c00017 	ldw	r3,0(r16)
    18ec:	18800135 	stwio	r2,4(r3)
    18f0:	2001703a 	wrctl	status,r4
    18f4:	a890000c 	andi	r2,r21,16384
    18f8:	103fe826 	beq	r2,zero,189c <altera_avalon_jtag_uart_write+0xf0>
    18fc:	003fee06 	br	18b8 <altera_avalon_jtag_uart_write+0x10c>
    1900:	dfc00717 	ldw	ra,28(sp)
    1904:	dd800617 	ldw	r22,24(sp)
    1908:	dd400517 	ldw	r21,20(sp)
    190c:	dd000417 	ldw	r20,16(sp)
    1910:	dcc00317 	ldw	r19,12(sp)
    1914:	dc800217 	ldw	r18,8(sp)
    1918:	dc400117 	ldw	r17,4(sp)
    191c:	dc000017 	ldw	r16,0(sp)
    1920:	dec00804 	addi	sp,sp,32
    1924:	f800283a 	ret

00001928 <alt_avalon_sgdma_register_callback>:
    1928:	21400915 	stw	r5,36(r4)
    192c:	21c00a15 	stw	r7,40(r4)
    1930:	21800b15 	stw	r6,44(r4)
    1934:	f800283a 	ret

00001938 <alt_avalon_sgdma_init>:
    1938:	defffd04 	addi	sp,sp,-12
    193c:	dfc00215 	stw	ra,8(sp)
    1940:	dc400115 	stw	r17,4(sp)
    1944:	dc000015 	stw	r16,0(sp)
    1948:	2021883a 	mov	r16,r4
    194c:	3023883a 	mov	r17,r6
    1950:	00c00404 	movi	r3,16
    1954:	20800317 	ldw	r2,12(r4)
    1958:	10c5883a 	add	r2,r2,r3
    195c:	01400074 	movhi	r5,1
    1960:	11400035 	stwio	r5,0(r2)
    1964:	20800317 	ldw	r2,12(r4)
    1968:	10c5883a 	add	r2,r2,r3
    196c:	11400035 	stwio	r5,0(r2)
    1970:	20800317 	ldw	r2,12(r4)
    1974:	10c5883a 	add	r2,r2,r3
    1978:	10000035 	stwio	zero,0(r2)
    197c:	20c00317 	ldw	r3,12(r4)
    1980:	00803fc4 	movi	r2,255
    1984:	18800035 	stwio	r2,0(r3)
    1988:	d1601804 	addi	r5,gp,-32672
    198c:	0002d140 	call	2d14 <alt_dev_llist_insert>
    1990:	8809883a 	mov	r4,r17
    1994:	800b883a 	mov	r5,r16
    1998:	01800034 	movhi	r6,0
    199c:	3186db04 	addi	r6,r6,7020
    19a0:	0000c3c0 	call	c3c <alt_irq_register>
    19a4:	dfc00217 	ldw	ra,8(sp)
    19a8:	dc400117 	ldw	r17,4(sp)
    19ac:	dc000017 	ldw	r16,0(sp)
    19b0:	dec00304 	addi	sp,sp,12
    19b4:	f800283a 	ret

000019b8 <alt_avalon_sgdma_disable_desc_poll>:
    19b8:	20800317 	ldw	r2,12(r4)
    19bc:	10800404 	addi	r2,r2,16
    19c0:	10c00037 	ldwio	r3,0(r2)
    19c4:	013fff34 	movhi	r4,65532
    19c8:	213fffc4 	addi	r4,r4,-1
    19cc:	1906703a 	and	r3,r3,r4
    19d0:	10c00035 	stwio	r3,0(r2)
    19d4:	f800283a 	ret

000019d8 <alt_avalon_sgdma_enable_desc_poll>:
    19d8:	21000317 	ldw	r4,12(r4)
    19dc:	21000404 	addi	r4,r4,16
    19e0:	20c00037 	ldwio	r3,0(r4)
    19e4:	00a00434 	movhi	r2,32784
    19e8:	10bfffc4 	addi	r2,r2,-1
    19ec:	1886703a 	and	r3,r3,r2
    19f0:	280a953a 	slli	r5,r5,20
    19f4:	295ffc2c 	andhi	r5,r5,32752
    19f8:	29400134 	orhi	r5,r5,4
    19fc:	1946b03a 	or	r3,r3,r5
    1a00:	20c00035 	stwio	r3,0(r4)
    1a04:	f800283a 	ret

00001a08 <alt_avalon_sgdma_stop>:
    1a08:	20800317 	ldw	r2,12(r4)
    1a0c:	10800404 	addi	r2,r2,16
    1a10:	10c00037 	ldwio	r3,0(r2)
    1a14:	013ff7c4 	movi	r4,-33
    1a18:	1906703a 	and	r3,r3,r4
    1a1c:	10c00035 	stwio	r3,0(r2)
    1a20:	f800283a 	ret

00001a24 <alt_avalon_sgdma_start>:
    1a24:	20c00317 	ldw	r3,12(r4)
    1a28:	18c00404 	addi	r3,r3,16
    1a2c:	18800037 	ldwio	r2,0(r3)
    1a30:	10800814 	ori	r2,r2,32
    1a34:	18800035 	stwio	r2,0(r3)
    1a38:	f800283a 	ret

00001a3c <alt_avalon_sgdma_do_sync_transfer>:
    1a3c:	200f883a 	mov	r7,r4
    1a40:	21000317 	ldw	r4,12(r4)
    1a44:	01800404 	movi	r6,16
    1a48:	20800037 	ldwio	r2,0(r4)
    1a4c:	1184703a 	and	r2,r2,r6
    1a50:	103ffd1e 	bne	r2,zero,1a48 <alt_avalon_sgdma_do_sync_transfer+0xc>
    1a54:	2189883a 	add	r4,r4,r6
    1a58:	20800037 	ldwio	r2,0(r4)
    1a5c:	00fff7c4 	movi	r3,-33
    1a60:	10c4703a 	and	r2,r2,r3
    1a64:	20800035 	stwio	r2,0(r4)
    1a68:	38c00317 	ldw	r3,12(r7)
    1a6c:	00803fc4 	movi	r2,255
    1a70:	18800035 	stwio	r2,0(r3)
    1a74:	38800317 	ldw	r2,12(r7)
    1a78:	11400835 	stwio	r5,32(r2)
    1a7c:	38c00317 	ldw	r3,12(r7)
    1a80:	1987883a 	add	r3,r3,r6
    1a84:	18800037 	ldwio	r2,0(r3)
    1a88:	10801814 	ori	r2,r2,96
    1a8c:	18800035 	stwio	r2,0(r3)
    1a90:	39000317 	ldw	r4,12(r7)
    1a94:	00c00404 	movi	r3,16
    1a98:	20800037 	ldwio	r2,0(r4)
    1a9c:	10c4703a 	and	r2,r2,r3
    1aa0:	103ffd1e 	bne	r2,zero,1a98 <alt_avalon_sgdma_do_sync_transfer+0x5c>
    1aa4:	20c9883a 	add	r4,r4,r3
    1aa8:	20800037 	ldwio	r2,0(r4)
    1aac:	00fff7c4 	movi	r3,-33
    1ab0:	10c4703a 	and	r2,r2,r3
    1ab4:	20800035 	stwio	r2,0(r4)
    1ab8:	39000317 	ldw	r4,12(r7)
    1abc:	20800037 	ldwio	r2,0(r4)
    1ac0:	00c03fc4 	movi	r3,255
    1ac4:	20c00035 	stwio	r3,0(r4)
    1ac8:	10803fcc 	andi	r2,r2,255
    1acc:	f800283a 	ret

00001ad0 <alt_avalon_sgdma_do_async_transfer>:
    1ad0:	200d883a 	mov	r6,r4
    1ad4:	20800317 	ldw	r2,12(r4)
    1ad8:	10800037 	ldwio	r2,0(r2)
    1adc:	1080040c 	andi	r2,r2,16
    1ae0:	10000226 	beq	r2,zero,1aec <alt_avalon_sgdma_do_async_transfer+0x1c>
    1ae4:	00bffc04 	movi	r2,-16
    1ae8:	f800283a 	ret
    1aec:	01c00404 	movi	r7,16
    1af0:	20c00317 	ldw	r3,12(r4)
    1af4:	19c7883a 	add	r3,r3,r7
    1af8:	18800037 	ldwio	r2,0(r3)
    1afc:	013ff7c4 	movi	r4,-33
    1b00:	1104703a 	and	r2,r2,r4
    1b04:	18800035 	stwio	r2,0(r3)
    1b08:	30c00317 	ldw	r3,12(r6)
    1b0c:	00803fc4 	movi	r2,255
    1b10:	18800035 	stwio	r2,0(r3)
    1b14:	30800317 	ldw	r2,12(r6)
    1b18:	11400835 	stwio	r5,32(r2)
    1b1c:	30800917 	ldw	r2,36(r6)
    1b20:	10000926 	beq	r2,zero,1b48 <alt_avalon_sgdma_do_async_transfer+0x78>
    1b24:	31000317 	ldw	r4,12(r6)
    1b28:	21c9883a 	add	r4,r4,r7
    1b2c:	20c00037 	ldwio	r3,0(r4)
    1b30:	30800b17 	ldw	r2,44(r6)
    1b34:	10801814 	ori	r2,r2,96
    1b38:	1886b03a 	or	r3,r3,r2
    1b3c:	20c00035 	stwio	r3,0(r4)
    1b40:	0005883a 	mov	r2,zero
    1b44:	f800283a 	ret
    1b48:	30800317 	ldw	r2,12(r6)
    1b4c:	10800404 	addi	r2,r2,16
    1b50:	10c00037 	ldwio	r3,0(r2)
    1b54:	18c01814 	ori	r3,r3,96
    1b58:	013ffbc4 	movi	r4,-17
    1b5c:	1906703a 	and	r3,r3,r4
    1b60:	10c00035 	stwio	r3,0(r2)
    1b64:	0005883a 	mov	r2,zero
    1b68:	f800283a 	ret

00001b6c <alt_avalon_sgdma_irq>:
    1b6c:	defffe04 	addi	sp,sp,-8
    1b70:	dfc00115 	stw	ra,4(sp)
    1b74:	dc000015 	stw	r16,0(sp)
    1b78:	200b883a 	mov	r5,r4
    1b7c:	01000404 	movi	r4,16
    1b80:	28c00317 	ldw	r3,12(r5)
    1b84:	1907883a 	add	r3,r3,r4
    1b88:	18800037 	ldwio	r2,0(r3)
    1b8c:	10a00034 	orhi	r2,r2,32768
    1b90:	18800035 	stwio	r2,0(r3)
    1b94:	28800317 	ldw	r2,12(r5)
    1b98:	1105883a 	add	r2,r2,r4
    1b9c:	10800037 	ldwio	r2,0(r2)
    1ba0:	28c00917 	ldw	r3,36(r5)
    1ba4:	18000726 	beq	r3,zero,1bc4 <alt_avalon_sgdma_irq+0x58>
    1ba8:	0021303a 	rdctl	r16,status
    1bac:	00bfff84 	movi	r2,-2
    1bb0:	8084703a 	and	r2,r16,r2
    1bb4:	1001703a 	wrctl	status,r2
    1bb8:	29000a17 	ldw	r4,40(r5)
    1bbc:	183ee83a 	callr	r3
    1bc0:	8001703a 	wrctl	status,r16
    1bc4:	dfc00117 	ldw	ra,4(sp)
    1bc8:	dc000017 	ldw	r16,0(sp)
    1bcc:	dec00204 	addi	sp,sp,8
    1bd0:	f800283a 	ret

00001bd4 <alt_avalon_sgdma_construct_descriptor_burst>:
    1bd4:	deffff04 	addi	sp,sp,-4
    1bd8:	dfc00015 	stw	ra,0(sp)
    1bdc:	da000703 	ldbu	r8,28(sp)
    1be0:	288007c3 	ldbu	r2,31(r5)
    1be4:	10801fcc 	andi	r2,r2,127
    1be8:	288007e5 	stbio	r2,31(r5)
    1bec:	21800005 	stb	r6,0(r4)
    1bf0:	3004d23a 	srli	r2,r6,8
    1bf4:	20800045 	stb	r2,1(r4)
    1bf8:	3004d43a 	srli	r2,r6,16
    1bfc:	20800085 	stb	r2,2(r4)
    1c00:	300cd63a 	srli	r6,r6,24
    1c04:	218000c5 	stb	r6,3(r4)
    1c08:	21c00205 	stb	r7,8(r4)
    1c0c:	3804d23a 	srli	r2,r7,8
    1c10:	20800245 	stb	r2,9(r4)
    1c14:	3804d43a 	srli	r2,r7,16
    1c18:	20800285 	stb	r2,10(r4)
    1c1c:	380ed63a 	srli	r7,r7,24
    1c20:	21c002c5 	stb	r7,11(r4)
    1c24:	21400405 	stb	r5,16(r4)
    1c28:	2804d23a 	srli	r2,r5,8
    1c2c:	20800445 	stb	r2,17(r4)
    1c30:	2804d43a 	srli	r2,r5,16
    1c34:	20800485 	stb	r2,18(r4)
    1c38:	280ad63a 	srli	r5,r5,24
    1c3c:	214004c5 	stb	r5,19(r4)
    1c40:	20000105 	stb	zero,4(r4)
    1c44:	20000145 	stb	zero,5(r4)
    1c48:	20000185 	stb	zero,6(r4)
    1c4c:	200001c5 	stb	zero,7(r4)
    1c50:	20000305 	stb	zero,12(r4)
    1c54:	20000345 	stb	zero,13(r4)
    1c58:	20000385 	stb	zero,14(r4)
    1c5c:	200003c5 	stb	zero,15(r4)
    1c60:	20000505 	stb	zero,20(r4)
    1c64:	20000545 	stb	zero,21(r4)
    1c68:	20000585 	stb	zero,22(r4)
    1c6c:	200005c5 	stb	zero,23(r4)
    1c70:	d880010b 	ldhu	r2,4(sp)
    1c74:	20800605 	stb	r2,24(r4)
    1c78:	1004d23a 	srli	r2,r2,8
    1c7c:	20800645 	stb	r2,25(r4)
    1c80:	20000705 	stb	zero,28(r4)
    1c84:	20000745 	stb	zero,29(r4)
    1c88:	20000785 	stb	zero,30(r4)
    1c8c:	d8800517 	ldw	r2,20(sp)
    1c90:	20800685 	stb	r2,26(r4)
    1c94:	d8800617 	ldw	r2,24(sp)
    1c98:	208006c5 	stb	r2,27(r4)
    1c9c:	d8800217 	ldw	r2,8(sp)
    1ca0:	1005003a 	cmpeq	r2,r2,zero
    1ca4:	00ffe044 	movi	r3,-127
    1ca8:	188fc83a 	sub	r7,r3,r2
    1cac:	d8800317 	ldw	r2,12(sp)
    1cb0:	1004c03a 	cmpne	r2,r2,zero
    1cb4:	108d883a 	add	r6,r2,r2
    1cb8:	d8800417 	ldw	r2,16(sp)
    1cbc:	1004c03a 	cmpne	r2,r2,zero
    1cc0:	100a90ba 	slli	r5,r2,2
    1cc4:	40803fcc 	andi	r2,r8,255
    1cc8:	1000021e 	bne	r2,zero,1cd4 <alt_avalon_sgdma_construct_descriptor_burst+0x100>
    1ccc:	0007883a 	mov	r3,zero
    1cd0:	00000206 	br	1cdc <alt_avalon_sgdma_construct_descriptor_burst+0x108>
    1cd4:	408003cc 	andi	r2,r8,15
    1cd8:	100690fa 	slli	r3,r2,3
    1cdc:	3144b03a 	or	r2,r6,r5
    1ce0:	38c6b03a 	or	r3,r7,r3
    1ce4:	10c4b03a 	or	r2,r2,r3
    1ce8:	208007c5 	stb	r2,31(r4)
    1cec:	01400804 	movi	r5,32
    1cf0:	00030b00 	call	30b0 <alt_remap_uncached>
    1cf4:	dfc00017 	ldw	ra,0(sp)
    1cf8:	dec00104 	addi	sp,sp,4
    1cfc:	f800283a 	ret

00001d00 <alt_avalon_sgdma_construct_descriptor>:
    1d00:	defff804 	addi	sp,sp,-32
    1d04:	dfc00715 	stw	ra,28(sp)
    1d08:	d880080b 	ldhu	r2,32(sp)
    1d0c:	d8800015 	stw	r2,0(sp)
    1d10:	d8800917 	ldw	r2,36(sp)
    1d14:	d8800115 	stw	r2,4(sp)
    1d18:	d8800a17 	ldw	r2,40(sp)
    1d1c:	d8800215 	stw	r2,8(sp)
    1d20:	d8800b17 	ldw	r2,44(sp)
    1d24:	d8800315 	stw	r2,12(sp)
    1d28:	d8000415 	stw	zero,16(sp)
    1d2c:	d8000515 	stw	zero,20(sp)
    1d30:	d8800c03 	ldbu	r2,48(sp)
    1d34:	d8800615 	stw	r2,24(sp)
    1d38:	0001bd40 	call	1bd4 <alt_avalon_sgdma_construct_descriptor_burst>
    1d3c:	dfc00717 	ldw	ra,28(sp)
    1d40:	dec00804 	addi	sp,sp,32
    1d44:	f800283a 	ret

00001d48 <alt_avalon_sgdma_construct_mem_to_stream_desc_burst>:
    1d48:	defff804 	addi	sp,sp,-32
    1d4c:	dfc00715 	stw	ra,28(sp)
    1d50:	39ffffcc 	andi	r7,r7,65535
    1d54:	d9c00015 	stw	r7,0(sp)
    1d58:	d8800a17 	ldw	r2,40(sp)
    1d5c:	d8800115 	stw	r2,4(sp)
    1d60:	d8800817 	ldw	r2,32(sp)
    1d64:	d8800215 	stw	r2,8(sp)
    1d68:	d8800917 	ldw	r2,36(sp)
    1d6c:	d8800315 	stw	r2,12(sp)
    1d70:	d8800b17 	ldw	r2,44(sp)
    1d74:	d8800415 	stw	r2,16(sp)
    1d78:	d8000515 	stw	zero,20(sp)
    1d7c:	d8800c03 	ldbu	r2,48(sp)
    1d80:	d8800615 	stw	r2,24(sp)
    1d84:	000f883a 	mov	r7,zero
    1d88:	0001bd40 	call	1bd4 <alt_avalon_sgdma_construct_descriptor_burst>
    1d8c:	dfc00717 	ldw	ra,28(sp)
    1d90:	dec00804 	addi	sp,sp,32
    1d94:	f800283a 	ret

00001d98 <alt_avalon_sgdma_construct_mem_to_stream_desc>:
    1d98:	defffa04 	addi	sp,sp,-24
    1d9c:	dfc00515 	stw	ra,20(sp)
    1da0:	d8800617 	ldw	r2,24(sp)
    1da4:	d8800015 	stw	r2,0(sp)
    1da8:	d8800717 	ldw	r2,28(sp)
    1dac:	d8800115 	stw	r2,4(sp)
    1db0:	d8800817 	ldw	r2,32(sp)
    1db4:	d8800215 	stw	r2,8(sp)
    1db8:	d8000315 	stw	zero,12(sp)
    1dbc:	d8800903 	ldbu	r2,36(sp)
    1dc0:	d8800415 	stw	r2,16(sp)
    1dc4:	39ffffcc 	andi	r7,r7,65535
    1dc8:	0001d480 	call	1d48 <alt_avalon_sgdma_construct_mem_to_stream_desc_burst>
    1dcc:	dfc00517 	ldw	ra,20(sp)
    1dd0:	dec00604 	addi	sp,sp,24
    1dd4:	f800283a 	ret

00001dd8 <alt_avalon_sgdma_construct_stream_to_mem_desc_burst>:
    1dd8:	defff804 	addi	sp,sp,-32
    1ddc:	dfc00715 	stw	ra,28(sp)
    1de0:	3007883a 	mov	r3,r6
    1de4:	39ffffcc 	andi	r7,r7,65535
    1de8:	d9c00015 	stw	r7,0(sp)
    1dec:	d8000115 	stw	zero,4(sp)
    1df0:	d8000215 	stw	zero,8(sp)
    1df4:	d8800817 	ldw	r2,32(sp)
    1df8:	d8800315 	stw	r2,12(sp)
    1dfc:	d8000415 	stw	zero,16(sp)
    1e00:	d8800917 	ldw	r2,36(sp)
    1e04:	d8800515 	stw	r2,20(sp)
    1e08:	d8000615 	stw	zero,24(sp)
    1e0c:	000d883a 	mov	r6,zero
    1e10:	180f883a 	mov	r7,r3
    1e14:	0001bd40 	call	1bd4 <alt_avalon_sgdma_construct_descriptor_burst>
    1e18:	dfc00717 	ldw	ra,28(sp)
    1e1c:	dec00804 	addi	sp,sp,32
    1e20:	f800283a 	ret

00001e24 <alt_avalon_sgdma_construct_stream_to_mem_desc>:
    1e24:	defffd04 	addi	sp,sp,-12
    1e28:	dfc00215 	stw	ra,8(sp)
    1e2c:	d8800317 	ldw	r2,12(sp)
    1e30:	d8800015 	stw	r2,0(sp)
    1e34:	d8000115 	stw	zero,4(sp)
    1e38:	39ffffcc 	andi	r7,r7,65535
    1e3c:	0001dd80 	call	1dd8 <alt_avalon_sgdma_construct_stream_to_mem_desc_burst>
    1e40:	dfc00217 	ldw	ra,8(sp)
    1e44:	dec00304 	addi	sp,sp,12
    1e48:	f800283a 	ret

00001e4c <alt_avalon_sgdma_construct_mem_to_mem_desc_burst>:
    1e4c:	defff804 	addi	sp,sp,-32
    1e50:	dfc00715 	stw	ra,28(sp)
    1e54:	d880080b 	ldhu	r2,32(sp)
    1e58:	d8800015 	stw	r2,0(sp)
    1e5c:	d8000115 	stw	zero,4(sp)
    1e60:	d8800917 	ldw	r2,36(sp)
    1e64:	d8800215 	stw	r2,8(sp)
    1e68:	d8800a17 	ldw	r2,40(sp)
    1e6c:	d8800315 	stw	r2,12(sp)
    1e70:	d8800b17 	ldw	r2,44(sp)
    1e74:	d8800415 	stw	r2,16(sp)
    1e78:	d8800c17 	ldw	r2,48(sp)
    1e7c:	d8800515 	stw	r2,20(sp)
    1e80:	d8000615 	stw	zero,24(sp)
    1e84:	0001bd40 	call	1bd4 <alt_avalon_sgdma_construct_descriptor_burst>
    1e88:	dfc00717 	ldw	ra,28(sp)
    1e8c:	dec00804 	addi	sp,sp,32
    1e90:	f800283a 	ret

00001e94 <alt_avalon_sgdma_construct_mem_to_mem_desc>:
    1e94:	defffa04 	addi	sp,sp,-24
    1e98:	dfc00515 	stw	ra,20(sp)
    1e9c:	d880060b 	ldhu	r2,24(sp)
    1ea0:	d8800015 	stw	r2,0(sp)
    1ea4:	d8800717 	ldw	r2,28(sp)
    1ea8:	d8800115 	stw	r2,4(sp)
    1eac:	d8800817 	ldw	r2,32(sp)
    1eb0:	d8800215 	stw	r2,8(sp)
    1eb4:	d8000315 	stw	zero,12(sp)
    1eb8:	d8000415 	stw	zero,16(sp)
    1ebc:	0001e4c0 	call	1e4c <alt_avalon_sgdma_construct_mem_to_mem_desc_burst>
    1ec0:	dfc00517 	ldw	ra,20(sp)
    1ec4:	dec00604 	addi	sp,sp,24
    1ec8:	f800283a 	ret

00001ecc <alt_avalon_sgdma_open>:
    1ecc:	defffe04 	addi	sp,sp,-8
    1ed0:	dfc00115 	stw	ra,4(sp)
    1ed4:	dc000015 	stw	r16,0(sp)
    1ed8:	d1601804 	addi	r5,gp,-32672
    1edc:	0002d840 	call	2d84 <alt_find_dev>
    1ee0:	1021883a 	mov	r16,r2
    1ee4:	10000b1e 	bne	r2,zero,1f14 <alt_avalon_sgdma_open+0x48>
    1ee8:	00800034 	movhi	r2,0
    1eec:	109ebd04 	addi	r2,r2,31476
    1ef0:	10800017 	ldw	r2,0(r2)
    1ef4:	1000031e 	bne	r2,zero,1f04 <alt_avalon_sgdma_open+0x38>
    1ef8:	00c00074 	movhi	r3,1
    1efc:	18e68a04 	addi	r3,r3,-26072
    1f00:	00000206 	br	1f0c <alt_avalon_sgdma_open+0x40>
    1f04:	103ee83a 	callr	r2
    1f08:	1007883a 	mov	r3,r2
    1f0c:	008004c4 	movi	r2,19
    1f10:	18800015 	stw	r2,0(r3)
    1f14:	8005883a 	mov	r2,r16
    1f18:	dfc00117 	ldw	ra,4(sp)
    1f1c:	dc000017 	ldw	r16,0(sp)
    1f20:	dec00204 	addi	sp,sp,8
    1f24:	f800283a 	ret

00001f28 <alt_avalon_sgdma_check_descriptor_status>:
    1f28:	208007a3 	ldbuio	r2,30(r4)
    1f2c:	10801fcc 	andi	r2,r2,127
    1f30:	10000226 	beq	r2,zero,1f3c <alt_avalon_sgdma_check_descriptor_status+0x14>
    1f34:	00bffec4 	movi	r2,-5
    1f38:	f800283a 	ret
    1f3c:	208007e3 	ldbuio	r2,31(r4)
    1f40:	1080200c 	andi	r2,r2,128
    1f44:	10000226 	beq	r2,zero,1f50 <alt_avalon_sgdma_check_descriptor_status+0x28>
    1f48:	00bfe244 	movi	r2,-119
    1f4c:	f800283a 	ret
    1f50:	0005883a 	mov	r2,zero
    1f54:	f800283a 	ret

00001f58 <alt_avalon_timer_sc_init>:
    1f58:	deffff04 	addi	sp,sp,-4
    1f5c:	dfc00015 	stw	ra,0(sp)
    1f60:	200b883a 	mov	r5,r4
    1f64:	00c00074 	movhi	r3,1
    1f68:	18e68804 	addi	r3,r3,-26080
    1f6c:	18800017 	ldw	r2,0(r3)
    1f70:	1000011e 	bne	r2,zero,1f78 <alt_avalon_timer_sc_init+0x20>
    1f74:	19c00015 	stw	r7,0(r3)
    1f78:	008001c4 	movi	r2,7
    1f7c:	28800135 	stwio	r2,4(r5)
    1f80:	3009883a 	mov	r4,r6
    1f84:	01800034 	movhi	r6,0
    1f88:	3187e704 	addi	r6,r6,8092
    1f8c:	0000c3c0 	call	c3c <alt_irq_register>
    1f90:	dfc00017 	ldw	ra,0(sp)
    1f94:	dec00104 	addi	sp,sp,4
    1f98:	f800283a 	ret

00001f9c <alt_avalon_timer_sc_irq>:
    1f9c:	defffe04 	addi	sp,sp,-8
    1fa0:	dfc00115 	stw	ra,4(sp)
    1fa4:	dc000015 	stw	r16,0(sp)
    1fa8:	20000035 	stwio	zero,0(r4)
    1fac:	20800137 	ldwio	r2,4(r4)
    1fb0:	0021303a 	rdctl	r16,status
    1fb4:	00bfff84 	movi	r2,-2
    1fb8:	8084703a 	and	r2,r16,r2
    1fbc:	1001703a 	wrctl	status,r2
    1fc0:	000310c0 	call	310c <alt_tick>
    1fc4:	8001703a 	wrctl	status,r16
    1fc8:	dfc00117 	ldw	ra,4(sp)
    1fcc:	dc000017 	ldw	r16,0(sp)
    1fd0:	dec00204 	addi	sp,sp,8
    1fd4:	f800283a 	ret

00001fd8 <get_DDRAM_addr>:
    1fd8:	2800021e 	bne	r5,zero,1fe4 <get_DDRAM_addr+0xc>
    1fdc:	2005883a 	mov	r2,r4
    1fe0:	00000106 	br	1fe8 <get_DDRAM_addr+0x10>
    1fe4:	20801014 	ori	r2,r4,64
    1fe8:	10803fcc 	andi	r2,r2,255
    1fec:	10802014 	ori	r2,r2,128
    1ff0:	f800283a 	ret

00001ff4 <alt_up_character_lcd_string>:
    1ff4:	28c00003 	ldbu	r3,0(r5)
    1ff8:	18803fcc 	andi	r2,r3,255
    1ffc:	1080201c 	xori	r2,r2,128
    2000:	10bfe004 	addi	r2,r2,-128
    2004:	10000d26 	beq	r2,zero,203c <alt_up_character_lcd_string+0x48>
    2008:	01800044 	movi	r6,1
    200c:	20800a17 	ldw	r2,40(r4)
    2010:	1185883a 	add	r2,r2,r6
    2014:	18c03fcc 	andi	r3,r3,255
    2018:	18c0201c 	xori	r3,r3,128
    201c:	18ffe004 	addi	r3,r3,-128
    2020:	10c00025 	stbio	r3,0(r2)
    2024:	298b883a 	add	r5,r5,r6
    2028:	28c00003 	ldbu	r3,0(r5)
    202c:	18803fcc 	andi	r2,r3,255
    2030:	1080201c 	xori	r2,r2,128
    2034:	10bfe004 	addi	r2,r2,-128
    2038:	103ff41e 	bne	r2,zero,200c <alt_up_character_lcd_string+0x18>
    203c:	f800283a 	ret

00002040 <alt_up_character_lcd_write>:
    2040:	30000926 	beq	r6,zero,2068 <alt_up_character_lcd_write+0x28>
    2044:	000f883a 	mov	r7,zero
    2048:	02000044 	movi	r8,1
    204c:	20800a17 	ldw	r2,40(r4)
    2050:	1205883a 	add	r2,r2,r8
    2054:	3947883a 	add	r3,r7,r5
    2058:	18c00007 	ldb	r3,0(r3)
    205c:	10c00025 	stbio	r3,0(r2)
    2060:	3a0f883a 	add	r7,r7,r8
    2064:	31fff91e 	bne	r6,r7,204c <alt_up_character_lcd_write+0xc>
    2068:	f800283a 	ret

0000206c <alt_up_character_lcd_write_fd>:
    206c:	deffff04 	addi	sp,sp,-4
    2070:	dfc00015 	stw	ra,0(sp)
    2074:	21000017 	ldw	r4,0(r4)
    2078:	00020400 	call	2040 <alt_up_character_lcd_write>
    207c:	0005883a 	mov	r2,zero
    2080:	dfc00017 	ldw	ra,0(sp)
    2084:	dec00104 	addi	sp,sp,4
    2088:	f800283a 	ret

0000208c <alt_up_character_lcd_init>:
    208c:	20c00a17 	ldw	r3,40(r4)
    2090:	00800044 	movi	r2,1
    2094:	18800025 	stbio	r2,0(r3)
    2098:	f800283a 	ret

0000209c <alt_up_character_lcd_send_cmd>:
    209c:	20800a17 	ldw	r2,40(r4)
    20a0:	29403fcc 	andi	r5,r5,255
    20a4:	11400025 	stbio	r5,0(r2)
    20a8:	f800283a 	ret

000020ac <alt_up_character_lcd_cursor_blink_on>:
    20ac:	deffff04 	addi	sp,sp,-4
    20b0:	dfc00015 	stw	ra,0(sp)
    20b4:	014003c4 	movi	r5,15
    20b8:	000209c0 	call	209c <alt_up_character_lcd_send_cmd>
    20bc:	dfc00017 	ldw	ra,0(sp)
    20c0:	dec00104 	addi	sp,sp,4
    20c4:	f800283a 	ret

000020c8 <alt_up_character_lcd_cursor_off>:
    20c8:	deffff04 	addi	sp,sp,-4
    20cc:	dfc00015 	stw	ra,0(sp)
    20d0:	01400304 	movi	r5,12
    20d4:	000209c0 	call	209c <alt_up_character_lcd_send_cmd>
    20d8:	dfc00017 	ldw	ra,0(sp)
    20dc:	dec00104 	addi	sp,sp,4
    20e0:	f800283a 	ret

000020e4 <alt_up_character_lcd_erase_pos>:
    20e4:	defffd04 	addi	sp,sp,-12
    20e8:	dfc00215 	stw	ra,8(sp)
    20ec:	dc400115 	stw	r17,4(sp)
    20f0:	dc000015 	stw	r16,0(sp)
    20f4:	2021883a 	mov	r16,r4
    20f8:	008009c4 	movi	r2,39
    20fc:	11400e36 	bltu	r2,r5,2138 <alt_up_character_lcd_erase_pos+0x54>
    2100:	04400044 	movi	r17,1
    2104:	89800c36 	bltu	r17,r6,2138 <alt_up_character_lcd_erase_pos+0x54>
    2108:	2809883a 	mov	r4,r5
    210c:	300b883a 	mov	r5,r6
    2110:	0001fd80 	call	1fd8 <get_DDRAM_addr>
    2114:	8009883a 	mov	r4,r16
    2118:	11403fcc 	andi	r5,r2,255
    211c:	000209c0 	call	209c <alt_up_character_lcd_send_cmd>
    2120:	80800a17 	ldw	r2,40(r16)
    2124:	1445883a 	add	r2,r2,r17
    2128:	00c00084 	movi	r3,2
    212c:	10c00025 	stbio	r3,0(r2)
    2130:	0005883a 	mov	r2,zero
    2134:	00000106 	br	213c <alt_up_character_lcd_erase_pos+0x58>
    2138:	00bfffc4 	movi	r2,-1
    213c:	dfc00217 	ldw	ra,8(sp)
    2140:	dc400117 	ldw	r17,4(sp)
    2144:	dc000017 	ldw	r16,0(sp)
    2148:	dec00304 	addi	sp,sp,12
    214c:	f800283a 	ret

00002150 <alt_up_character_lcd_shift_display>:
    2150:	defffa04 	addi	sp,sp,-24
    2154:	dfc00515 	stw	ra,20(sp)
    2158:	dd000415 	stw	r20,16(sp)
    215c:	dcc00315 	stw	r19,12(sp)
    2160:	dc800215 	stw	r18,8(sp)
    2164:	dc400115 	stw	r17,4(sp)
    2168:	dc000015 	stw	r16,0(sp)
    216c:	2027883a 	mov	r19,r4
    2170:	28001326 	beq	r5,zero,21c0 <alt_up_character_lcd_shift_display+0x70>
    2174:	0140020e 	bge	zero,r5,2180 <alt_up_character_lcd_shift_display+0x30>
    2178:	05000704 	movi	r20,28
    217c:	00000106 	br	2184 <alt_up_character_lcd_shift_display+0x34>
    2180:	05000604 	movi	r20,24
    2184:	2800010e 	bge	r5,zero,218c <alt_up_character_lcd_shift_display+0x3c>
    2188:	014bc83a 	sub	r5,zero,r5
    218c:	00bfffc4 	movi	r2,-1
    2190:	28a1883a 	add	r16,r5,r2
    2194:	80c03fcc 	andi	r3,r16,255
    2198:	10803fcc 	andi	r2,r2,255
    219c:	18800826 	beq	r3,r2,21c0 <alt_up_character_lcd_shift_display+0x70>
    21a0:	04bfffc4 	movi	r18,-1
    21a4:	04403fc4 	movi	r17,255
    21a8:	9809883a 	mov	r4,r19
    21ac:	a1403fcc 	andi	r5,r20,255
    21b0:	000209c0 	call	209c <alt_up_character_lcd_send_cmd>
    21b4:	84a1883a 	add	r16,r16,r18
    21b8:	80803fcc 	andi	r2,r16,255
    21bc:	147ffa1e 	bne	r2,r17,21a8 <alt_up_character_lcd_shift_display+0x58>
    21c0:	dfc00517 	ldw	ra,20(sp)
    21c4:	dd000417 	ldw	r20,16(sp)
    21c8:	dcc00317 	ldw	r19,12(sp)
    21cc:	dc800217 	ldw	r18,8(sp)
    21d0:	dc400117 	ldw	r17,4(sp)
    21d4:	dc000017 	ldw	r16,0(sp)
    21d8:	dec00604 	addi	sp,sp,24
    21dc:	f800283a 	ret

000021e0 <alt_up_character_lcd_shift_cursor>:
    21e0:	defffa04 	addi	sp,sp,-24
    21e4:	dfc00515 	stw	ra,20(sp)
    21e8:	dd000415 	stw	r20,16(sp)
    21ec:	dcc00315 	stw	r19,12(sp)
    21f0:	dc800215 	stw	r18,8(sp)
    21f4:	dc400115 	stw	r17,4(sp)
    21f8:	dc000015 	stw	r16,0(sp)
    21fc:	2027883a 	mov	r19,r4
    2200:	28001326 	beq	r5,zero,2250 <alt_up_character_lcd_shift_cursor+0x70>
    2204:	0140020e 	bge	zero,r5,2210 <alt_up_character_lcd_shift_cursor+0x30>
    2208:	05000504 	movi	r20,20
    220c:	00000106 	br	2214 <alt_up_character_lcd_shift_cursor+0x34>
    2210:	05000404 	movi	r20,16
    2214:	2800010e 	bge	r5,zero,221c <alt_up_character_lcd_shift_cursor+0x3c>
    2218:	014bc83a 	sub	r5,zero,r5
    221c:	00bfffc4 	movi	r2,-1
    2220:	28a1883a 	add	r16,r5,r2
    2224:	80c03fcc 	andi	r3,r16,255
    2228:	10803fcc 	andi	r2,r2,255
    222c:	18800826 	beq	r3,r2,2250 <alt_up_character_lcd_shift_cursor+0x70>
    2230:	04bfffc4 	movi	r18,-1
    2234:	04403fc4 	movi	r17,255
    2238:	9809883a 	mov	r4,r19
    223c:	a1403fcc 	andi	r5,r20,255
    2240:	000209c0 	call	209c <alt_up_character_lcd_send_cmd>
    2244:	84a1883a 	add	r16,r16,r18
    2248:	80803fcc 	andi	r2,r16,255
    224c:	147ffa1e 	bne	r2,r17,2238 <alt_up_character_lcd_shift_cursor+0x58>
    2250:	dfc00517 	ldw	ra,20(sp)
    2254:	dd000417 	ldw	r20,16(sp)
    2258:	dcc00317 	ldw	r19,12(sp)
    225c:	dc800217 	ldw	r18,8(sp)
    2260:	dc400117 	ldw	r17,4(sp)
    2264:	dc000017 	ldw	r16,0(sp)
    2268:	dec00604 	addi	sp,sp,24
    226c:	f800283a 	ret

00002270 <alt_up_character_lcd_set_cursor_pos>:
    2270:	defffe04 	addi	sp,sp,-8
    2274:	dfc00115 	stw	ra,4(sp)
    2278:	dc000015 	stw	r16,0(sp)
    227c:	2021883a 	mov	r16,r4
    2280:	008009c4 	movi	r2,39
    2284:	11400a36 	bltu	r2,r5,22b0 <alt_up_character_lcd_set_cursor_pos+0x40>
    2288:	00800044 	movi	r2,1
    228c:	11800836 	bltu	r2,r6,22b0 <alt_up_character_lcd_set_cursor_pos+0x40>
    2290:	2809883a 	mov	r4,r5
    2294:	300b883a 	mov	r5,r6
    2298:	0001fd80 	call	1fd8 <get_DDRAM_addr>
    229c:	8009883a 	mov	r4,r16
    22a0:	11403fcc 	andi	r5,r2,255
    22a4:	000209c0 	call	209c <alt_up_character_lcd_send_cmd>
    22a8:	0005883a 	mov	r2,zero
    22ac:	00000106 	br	22b4 <alt_up_character_lcd_set_cursor_pos+0x44>
    22b0:	00bfffc4 	movi	r2,-1
    22b4:	dfc00117 	ldw	ra,4(sp)
    22b8:	dc000017 	ldw	r16,0(sp)
    22bc:	dec00204 	addi	sp,sp,8
    22c0:	f800283a 	ret

000022c4 <alt_up_character_lcd_open_dev>:
    22c4:	deffff04 	addi	sp,sp,-4
    22c8:	dfc00015 	stw	ra,0(sp)
    22cc:	01400034 	movhi	r5,0
    22d0:	295eba04 	addi	r5,r5,31464
    22d4:	0002d840 	call	2d84 <alt_find_dev>
    22d8:	dfc00017 	ldw	ra,0(sp)
    22dc:	dec00104 	addi	sp,sp,4
    22e0:	f800283a 	ret

000022e4 <alt_up_irda_check_parity>:
    22e4:	200495ba 	slli	r2,r4,22
    22e8:	1005d7fa 	srai	r2,r2,31
    22ec:	f800283a 	ret

000022f0 <alt_up_irda_open_dev>:
    22f0:	deffff04 	addi	sp,sp,-4
    22f4:	dfc00015 	stw	ra,0(sp)
    22f8:	01400034 	movhi	r5,0
    22fc:	295eba04 	addi	r5,r5,31464
    2300:	0002d840 	call	2d84 <alt_find_dev>
    2304:	dfc00017 	ldw	ra,0(sp)
    2308:	dec00104 	addi	sp,sp,4
    230c:	f800283a 	ret

00002310 <alt_up_irda_read_data>:
    2310:	defffd04 	addi	sp,sp,-12
    2314:	dfc00215 	stw	ra,8(sp)
    2318:	dc400115 	stw	r17,4(sp)
    231c:	dc000015 	stw	r16,0(sp)
    2320:	3023883a 	mov	r17,r6
    2324:	20800a17 	ldw	r2,40(r4)
    2328:	14000037 	ldwio	r16,0(r2)
    232c:	2c000005 	stb	r16,0(r5)
    2330:	8009883a 	mov	r4,r16
    2334:	00022e40 	call	22e4 <alt_up_irda_check_parity>
    2338:	88800005 	stb	r2,0(r17)
    233c:	8420000c 	andi	r16,r16,32768
    2340:	8020d3fa 	srli	r16,r16,15
    2344:	80bfffc4 	addi	r2,r16,-1
    2348:	dfc00217 	ldw	ra,8(sp)
    234c:	dc400117 	ldw	r17,4(sp)
    2350:	dc000017 	ldw	r16,0(sp)
    2354:	dec00304 	addi	sp,sp,12
    2358:	f800283a 	ret

0000235c <alt_up_irda_read_fd>:
    235c:	defff904 	addi	sp,sp,-28
    2360:	dfc00615 	stw	ra,24(sp)
    2364:	dd000515 	stw	r20,20(sp)
    2368:	dcc00415 	stw	r19,16(sp)
    236c:	dc800315 	stw	r18,12(sp)
    2370:	dc400215 	stw	r17,8(sp)
    2374:	dc000115 	stw	r16,4(sp)
    2378:	2821883a 	mov	r16,r5
    237c:	3029883a 	mov	r20,r6
    2380:	24c00017 	ldw	r19,0(r4)
    2384:	3000021e 	bne	r6,zero,2390 <alt_up_irda_read_fd+0x34>
    2388:	0025883a 	mov	r18,zero
    238c:	00000a06 	br	23b8 <alt_up_irda_read_fd+0x5c>
    2390:	0025883a 	mov	r18,zero
    2394:	04400044 	movi	r17,1
    2398:	800b883a 	mov	r5,r16
    239c:	8461883a 	add	r16,r16,r17
    23a0:	9809883a 	mov	r4,r19
    23a4:	d80d883a 	mov	r6,sp
    23a8:	00023100 	call	2310 <alt_up_irda_read_data>
    23ac:	1000021e 	bne	r2,zero,23b8 <alt_up_irda_read_fd+0x5c>
    23b0:	9465883a 	add	r18,r18,r17
    23b4:	a4bff81e 	bne	r20,r18,2398 <alt_up_irda_read_fd+0x3c>
    23b8:	9005883a 	mov	r2,r18
    23bc:	dfc00617 	ldw	ra,24(sp)
    23c0:	dd000517 	ldw	r20,20(sp)
    23c4:	dcc00417 	ldw	r19,16(sp)
    23c8:	dc800317 	ldw	r18,12(sp)
    23cc:	dc400217 	ldw	r17,8(sp)
    23d0:	dc000117 	ldw	r16,4(sp)
    23d4:	dec00704 	addi	sp,sp,28
    23d8:	f800283a 	ret

000023dc <alt_up_irda_get_available_space_in_write_FIFO>:
    23dc:	20800a17 	ldw	r2,40(r4)
    23e0:	10800137 	ldwio	r2,4(r2)
    23e4:	1004d43a 	srli	r2,r2,16
    23e8:	f800283a 	ret

000023ec <alt_up_irda_write_data>:
    23ec:	20800a17 	ldw	r2,40(r4)
    23f0:	10c00037 	ldwio	r3,0(r2)
    23f4:	29403fcc 	andi	r5,r5,255
    23f8:	11400035 	stwio	r5,0(r2)
    23fc:	0005883a 	mov	r2,zero
    2400:	f800283a 	ret

00002404 <alt_up_irda_write_fd>:
    2404:	defffa04 	addi	sp,sp,-24
    2408:	dfc00515 	stw	ra,20(sp)
    240c:	dd000415 	stw	r20,16(sp)
    2410:	dcc00315 	stw	r19,12(sp)
    2414:	dc800215 	stw	r18,8(sp)
    2418:	dc400115 	stw	r17,4(sp)
    241c:	dc000015 	stw	r16,0(sp)
    2420:	3029883a 	mov	r20,r6
    2424:	24c00017 	ldw	r19,0(r4)
    2428:	3000021e 	bne	r6,zero,2434 <alt_up_irda_write_fd+0x30>
    242c:	0025883a 	mov	r18,zero
    2430:	00000a06 	br	245c <alt_up_irda_write_fd+0x58>
    2434:	2821883a 	mov	r16,r5
    2438:	0025883a 	mov	r18,zero
    243c:	04400044 	movi	r17,1
    2440:	9809883a 	mov	r4,r19
    2444:	81403fcc 	andi	r5,r16,255
    2448:	00023ec0 	call	23ec <alt_up_irda_write_data>
    244c:	1000031e 	bne	r2,zero,245c <alt_up_irda_write_fd+0x58>
    2450:	9465883a 	add	r18,r18,r17
    2454:	8c21883a 	add	r16,r17,r16
    2458:	a4bff91e 	bne	r20,r18,2440 <alt_up_irda_write_fd+0x3c>
    245c:	9005883a 	mov	r2,r18
    2460:	dfc00517 	ldw	ra,20(sp)
    2464:	dd000417 	ldw	r20,16(sp)
    2468:	dcc00317 	ldw	r19,12(sp)
    246c:	dc800217 	ldw	r18,8(sp)
    2470:	dc400117 	ldw	r17,4(sp)
    2474:	dc000017 	ldw	r16,0(sp)
    2478:	dec00604 	addi	sp,sp,24
    247c:	f800283a 	ret

00002480 <alt_up_irda_disable_read_interrupt>:
    2480:	20800a17 	ldw	r2,40(r4)
    2484:	10800104 	addi	r2,r2,4
    2488:	10c00037 	ldwio	r3,0(r2)
    248c:	013fff84 	movi	r4,-2
    2490:	1906703a 	and	r3,r3,r4
    2494:	10c00035 	stwio	r3,0(r2)
    2498:	f800283a 	ret

0000249c <alt_up_irda_enable_read_interrupt>:
    249c:	20c00a17 	ldw	r3,40(r4)
    24a0:	18c00104 	addi	r3,r3,4
    24a4:	18800037 	ldwio	r2,0(r3)
    24a8:	10800054 	ori	r2,r2,1
    24ac:	18800035 	stwio	r2,0(r3)
    24b0:	f800283a 	ret

000024b4 <alt_up_irda_get_used_space_in_read_FIFO>:
    24b4:	20800a17 	ldw	r2,40(r4)
    24b8:	108000ab 	ldhuio	r2,2(r2)
    24bc:	10bfffcc 	andi	r2,r2,65535
    24c0:	f800283a 	ret

000024c4 <read_RI_bit>:
    24c4:	2080400c 	andi	r2,r4,256
    24c8:	1004c03a 	cmpne	r2,r2,zero
    24cc:	f800283a 	ret

000024d0 <read_RE_bit>:
    24d0:	2080004c 	andi	r2,r4,1
    24d4:	f800283a 	ret

000024d8 <read_CE_bit>:
    24d8:	2081000c 	andi	r2,r4,1024
    24dc:	1004c03a 	cmpne	r2,r2,zero
    24e0:	f800283a 	ret

000024e4 <read_num_bytes_available>:
    24e4:	2004d43a 	srli	r2,r4,16
    24e8:	f800283a 	ret

000024ec <read_data_valid>:
    24ec:	20a0000c 	andi	r2,r4,32768
    24f0:	1004c03a 	cmpne	r2,r2,zero
    24f4:	f800283a 	ret

000024f8 <read_data_byte>:
    24f8:	20803fcc 	andi	r2,r4,255
    24fc:	f800283a 	ret

00002500 <alt_up_ps2_open_dev>:
    2500:	deffff04 	addi	sp,sp,-4
    2504:	dfc00015 	stw	ra,0(sp)
    2508:	01400034 	movhi	r5,0
    250c:	295eba04 	addi	r5,r5,31464
    2510:	0002d840 	call	2d84 <alt_find_dev>
    2514:	dfc00017 	ldw	ra,0(sp)
    2518:	dec00104 	addi	sp,sp,4
    251c:	f800283a 	ret

00002520 <alt_up_ps2_clear_fifo>:
    2520:	defffe04 	addi	sp,sp,-8
    2524:	dfc00115 	stw	ra,4(sp)
    2528:	dc000015 	stw	r16,0(sp)
    252c:	24000a17 	ldw	r16,40(r4)
    2530:	81000037 	ldwio	r4,0(r16)
    2534:	00024e40 	call	24e4 <read_num_bytes_available>
    2538:	10bfffcc 	andi	r2,r2,65535
    253c:	103ffc1e 	bne	r2,zero,2530 <alt_up_ps2_clear_fifo+0x10>
    2540:	dfc00117 	ldw	ra,4(sp)
    2544:	dc000017 	ldw	r16,0(sp)
    2548:	dec00204 	addi	sp,sp,8
    254c:	f800283a 	ret

00002550 <alt_up_ps2_read_data_byte>:
    2550:	defffd04 	addi	sp,sp,-12
    2554:	dfc00215 	stw	ra,8(sp)
    2558:	dc400115 	stw	r17,4(sp)
    255c:	dc000015 	stw	r16,0(sp)
    2560:	2823883a 	mov	r17,r5
    2564:	20800a17 	ldw	r2,40(r4)
    2568:	14000037 	ldwio	r16,0(r2)
    256c:	8009883a 	mov	r4,r16
    2570:	00024ec0 	call	24ec <read_data_valid>
    2574:	10803fcc 	andi	r2,r2,255
    2578:	1000021e 	bne	r2,zero,2584 <alt_up_ps2_read_data_byte+0x34>
    257c:	00bfffc4 	movi	r2,-1
    2580:	00000406 	br	2594 <alt_up_ps2_read_data_byte+0x44>
    2584:	8009883a 	mov	r4,r16
    2588:	00024f80 	call	24f8 <read_data_byte>
    258c:	88800005 	stb	r2,0(r17)
    2590:	0005883a 	mov	r2,zero
    2594:	dfc00217 	ldw	ra,8(sp)
    2598:	dc400117 	ldw	r17,4(sp)
    259c:	dc000017 	ldw	r16,0(sp)
    25a0:	dec00304 	addi	sp,sp,12
    25a4:	f800283a 	ret

000025a8 <alt_up_ps2_read_data_byte_timeout>:
    25a8:	defffb04 	addi	sp,sp,-20
    25ac:	dfc00415 	stw	ra,16(sp)
    25b0:	dcc00315 	stw	r19,12(sp)
    25b4:	dc800215 	stw	r18,8(sp)
    25b8:	dc400115 	stw	r17,4(sp)
    25bc:	dc000015 	stw	r16,0(sp)
    25c0:	2025883a 	mov	r18,r4
    25c4:	2827883a 	mov	r19,r5
    25c8:	0023883a 	mov	r17,zero
    25cc:	90800a17 	ldw	r2,40(r18)
    25d0:	14000037 	ldwio	r16,0(r2)
    25d4:	8009883a 	mov	r4,r16
    25d8:	00024ec0 	call	24ec <read_data_valid>
    25dc:	10803fcc 	andi	r2,r2,255
    25e0:	10000526 	beq	r2,zero,25f8 <alt_up_ps2_read_data_byte_timeout+0x50>
    25e4:	8009883a 	mov	r4,r16
    25e8:	00024f80 	call	24f8 <read_data_byte>
    25ec:	98800005 	stb	r2,0(r19)
    25f0:	0005883a 	mov	r2,zero
    25f4:	00000506 	br	260c <alt_up_ps2_read_data_byte_timeout+0x64>
    25f8:	8c400044 	addi	r17,r17,1
    25fc:	90800c17 	ldw	r2,48(r18)
    2600:	103ff226 	beq	r2,zero,25cc <alt_up_ps2_read_data_byte_timeout+0x24>
    2604:	147ff12e 	bgeu	r2,r17,25cc <alt_up_ps2_read_data_byte_timeout+0x24>
    2608:	00bfe304 	movi	r2,-116
    260c:	dfc00417 	ldw	ra,16(sp)
    2610:	dcc00317 	ldw	r19,12(sp)
    2614:	dc800217 	ldw	r18,8(sp)
    2618:	dc400117 	ldw	r17,4(sp)
    261c:	dc000017 	ldw	r16,0(sp)
    2620:	dec00504 	addi	sp,sp,20
    2624:	f800283a 	ret

00002628 <alt_up_ps2_read_fd>:
    2628:	deffff04 	addi	sp,sp,-4
    262c:	dfc00015 	stw	ra,0(sp)
    2630:	21000017 	ldw	r4,0(r4)
    2634:	0180010e 	bge	zero,r6,263c <alt_up_ps2_read_fd+0x14>
    2638:	003fff06 	br	2638 <alt_up_ps2_read_fd+0x10>
    263c:	00025a80 	call	25a8 <alt_up_ps2_read_data_byte_timeout>
    2640:	1005003a 	cmpeq	r2,r2,zero
    2644:	dfc00017 	ldw	ra,0(sp)
    2648:	dec00104 	addi	sp,sp,4
    264c:	f800283a 	ret

00002650 <alt_up_ps2_wait_for_ack>:
    2650:	defffc04 	addi	sp,sp,-16
    2654:	dfc00315 	stw	ra,12(sp)
    2658:	dc400215 	stw	r17,8(sp)
    265c:	dc000115 	stw	r16,4(sp)
    2660:	2021883a 	mov	r16,r4
    2664:	d8000005 	stb	zero,0(sp)
    2668:	04403e84 	movi	r17,250
    266c:	8009883a 	mov	r4,r16
    2670:	d80b883a 	mov	r5,sp
    2674:	00025a80 	call	25a8 <alt_up_ps2_read_data_byte_timeout>
    2678:	1007883a 	mov	r3,r2
    267c:	10803fcc 	andi	r2,r2,255
    2680:	1000041e 	bne	r2,zero,2694 <alt_up_ps2_wait_for_ack+0x44>
    2684:	d8800003 	ldbu	r2,0(sp)
    2688:	147ff81e 	bne	r2,r17,266c <alt_up_ps2_wait_for_ack+0x1c>
    268c:	0005883a 	mov	r2,zero
    2690:	00000106 	br	2698 <alt_up_ps2_wait_for_ack+0x48>
    2694:	18803fcc 	andi	r2,r3,255
    2698:	dfc00317 	ldw	ra,12(sp)
    269c:	dc400217 	ldw	r17,8(sp)
    26a0:	dc000117 	ldw	r16,4(sp)
    26a4:	dec00404 	addi	sp,sp,16
    26a8:	f800283a 	ret

000026ac <alt_up_ps2_write_data_byte>:
    26ac:	deffff04 	addi	sp,sp,-4
    26b0:	dfc00015 	stw	ra,0(sp)
    26b4:	20800a17 	ldw	r2,40(r4)
    26b8:	29403fcc 	andi	r5,r5,255
    26bc:	11400025 	stbio	r5,0(r2)
    26c0:	20800a17 	ldw	r2,40(r4)
    26c4:	11000137 	ldwio	r4,4(r2)
    26c8:	00024d80 	call	24d8 <read_CE_bit>
    26cc:	10803fcc 	andi	r2,r2,255
    26d0:	10000226 	beq	r2,zero,26dc <alt_up_ps2_write_data_byte+0x30>
    26d4:	00bffec4 	movi	r2,-5
    26d8:	00000106 	br	26e0 <alt_up_ps2_write_data_byte+0x34>
    26dc:	0005883a 	mov	r2,zero
    26e0:	dfc00017 	ldw	ra,0(sp)
    26e4:	dec00104 	addi	sp,sp,4
    26e8:	f800283a 	ret

000026ec <alt_up_ps2_write_fd>:
    26ec:	defffb04 	addi	sp,sp,-20
    26f0:	dfc00415 	stw	ra,16(sp)
    26f4:	dcc00315 	stw	r19,12(sp)
    26f8:	dc800215 	stw	r18,8(sp)
    26fc:	dc400115 	stw	r17,4(sp)
    2700:	dc000015 	stw	r16,0(sp)
    2704:	2827883a 	mov	r19,r5
    2708:	3025883a 	mov	r18,r6
    270c:	24400017 	ldw	r17,0(r4)
    2710:	01800216 	blt	zero,r6,271c <alt_up_ps2_write_fd+0x30>
    2714:	0021883a 	mov	r16,zero
    2718:	00000806 	br	273c <alt_up_ps2_write_fd+0x50>
    271c:	0021883a 	mov	r16,zero
    2720:	9c05883a 	add	r2,r19,r16
    2724:	8809883a 	mov	r4,r17
    2728:	11400003 	ldbu	r5,0(r2)
    272c:	00026ac0 	call	26ac <alt_up_ps2_write_data_byte>
    2730:	1000021e 	bne	r2,zero,273c <alt_up_ps2_write_fd+0x50>
    2734:	84000044 	addi	r16,r16,1
    2738:	943ff91e 	bne	r18,r16,2720 <alt_up_ps2_write_fd+0x34>
    273c:	8005883a 	mov	r2,r16
    2740:	dfc00417 	ldw	ra,16(sp)
    2744:	dcc00317 	ldw	r19,12(sp)
    2748:	dc800217 	ldw	r18,8(sp)
    274c:	dc400117 	ldw	r17,4(sp)
    2750:	dc000017 	ldw	r16,0(sp)
    2754:	dec00504 	addi	sp,sp,20
    2758:	f800283a 	ret

0000275c <alt_up_ps2_write_data_byte_with_ack>:
    275c:	defffe04 	addi	sp,sp,-8
    2760:	dfc00115 	stw	ra,4(sp)
    2764:	dc000015 	stw	r16,0(sp)
    2768:	2021883a 	mov	r16,r4
    276c:	29403fcc 	andi	r5,r5,255
    2770:	00026ac0 	call	26ac <alt_up_ps2_write_data_byte>
    2774:	1000021e 	bne	r2,zero,2780 <alt_up_ps2_write_data_byte_with_ack+0x24>
    2778:	8009883a 	mov	r4,r16
    277c:	00026500 	call	2650 <alt_up_ps2_wait_for_ack>
    2780:	dfc00117 	ldw	ra,4(sp)
    2784:	dc000017 	ldw	r16,0(sp)
    2788:	dec00204 	addi	sp,sp,8
    278c:	f800283a 	ret

00002790 <alt_up_ps2_init>:
    2790:	defffd04 	addi	sp,sp,-12
    2794:	dfc00215 	stw	ra,8(sp)
    2798:	dc000115 	stw	r16,4(sp)
    279c:	2021883a 	mov	r16,r4
    27a0:	01403fc4 	movi	r5,255
    27a4:	000275c0 	call	275c <alt_up_ps2_write_data_byte_with_ack>
    27a8:	1000171e 	bne	r2,zero,2808 <alt_up_ps2_init+0x78>
    27ac:	8009883a 	mov	r4,r16
    27b0:	d80b883a 	mov	r5,sp
    27b4:	00025a80 	call	25a8 <alt_up_ps2_read_data_byte_timeout>
    27b8:	1000131e 	bne	r2,zero,2808 <alt_up_ps2_init+0x78>
    27bc:	d8c00003 	ldbu	r3,0(sp)
    27c0:	00802a84 	movi	r2,170
    27c4:	1880101e 	bne	r3,r2,2808 <alt_up_ps2_init+0x78>
    27c8:	8009883a 	mov	r4,r16
    27cc:	d80b883a 	mov	r5,sp
    27d0:	00025a80 	call	25a8 <alt_up_ps2_read_data_byte_timeout>
    27d4:	1007883a 	mov	r3,r2
    27d8:	00bfe304 	movi	r2,-116
    27dc:	1880031e 	bne	r3,r2,27ec <alt_up_ps2_init+0x5c>
    27e0:	00800044 	movi	r2,1
    27e4:	80800d15 	stw	r2,52(r16)
    27e8:	00000706 	br	2808 <alt_up_ps2_init+0x78>
    27ec:	1800061e 	bne	r3,zero,2808 <alt_up_ps2_init+0x78>
    27f0:	d8800003 	ldbu	r2,0(sp)
    27f4:	1000041e 	bne	r2,zero,2808 <alt_up_ps2_init+0x78>
    27f8:	80000d15 	stw	zero,52(r16)
    27fc:	8009883a 	mov	r4,r16
    2800:	01403d04 	movi	r5,244
    2804:	00026ac0 	call	26ac <alt_up_ps2_write_data_byte>
    2808:	dfc00217 	ldw	ra,8(sp)
    280c:	dc000117 	ldw	r16,4(sp)
    2810:	dec00304 	addi	sp,sp,12
    2814:	f800283a 	ret

00002818 <alt_up_ps2_disable_read_interrupt>:
    2818:	20800a17 	ldw	r2,40(r4)
    281c:	10800104 	addi	r2,r2,4
    2820:	10c00037 	ldwio	r3,0(r2)
    2824:	013fff84 	movi	r4,-2
    2828:	1906703a 	and	r3,r3,r4
    282c:	10c00035 	stwio	r3,0(r2)
    2830:	f800283a 	ret

00002834 <alt_up_ps2_enable_read_interrupt>:
    2834:	20c00a17 	ldw	r3,40(r4)
    2838:	18c00104 	addi	r3,r3,4
    283c:	18800037 	ldwio	r2,0(r3)
    2840:	10800054 	ori	r2,r2,1
    2844:	18800035 	stwio	r2,0(r3)
    2848:	f800283a 	ret

0000284c <alt_up_rs232_check_parity>:
    284c:	200495ba 	slli	r2,r4,22
    2850:	1005d7fa 	srai	r2,r2,31
    2854:	f800283a 	ret

00002858 <alt_up_rs232_open_dev>:
    2858:	deffff04 	addi	sp,sp,-4
    285c:	dfc00015 	stw	ra,0(sp)
    2860:	01400034 	movhi	r5,0
    2864:	295eba04 	addi	r5,r5,31464
    2868:	0002d840 	call	2d84 <alt_find_dev>
    286c:	dfc00017 	ldw	ra,0(sp)
    2870:	dec00104 	addi	sp,sp,4
    2874:	f800283a 	ret

00002878 <alt_up_rs232_read_data>:
    2878:	defffd04 	addi	sp,sp,-12
    287c:	dfc00215 	stw	ra,8(sp)
    2880:	dc400115 	stw	r17,4(sp)
    2884:	dc000015 	stw	r16,0(sp)
    2888:	3023883a 	mov	r17,r6
    288c:	20800a17 	ldw	r2,40(r4)
    2890:	14000037 	ldwio	r16,0(r2)
    2894:	2c000005 	stb	r16,0(r5)
    2898:	8009883a 	mov	r4,r16
    289c:	000284c0 	call	284c <alt_up_rs232_check_parity>
    28a0:	88800005 	stb	r2,0(r17)
    28a4:	8420000c 	andi	r16,r16,32768
    28a8:	8020d3fa 	srli	r16,r16,15
    28ac:	80bfffc4 	addi	r2,r16,-1
    28b0:	dfc00217 	ldw	ra,8(sp)
    28b4:	dc400117 	ldw	r17,4(sp)
    28b8:	dc000017 	ldw	r16,0(sp)
    28bc:	dec00304 	addi	sp,sp,12
    28c0:	f800283a 	ret

000028c4 <alt_up_rs232_read_fd>:
    28c4:	defff904 	addi	sp,sp,-28
    28c8:	dfc00615 	stw	ra,24(sp)
    28cc:	dd000515 	stw	r20,20(sp)
    28d0:	dcc00415 	stw	r19,16(sp)
    28d4:	dc800315 	stw	r18,12(sp)
    28d8:	dc400215 	stw	r17,8(sp)
    28dc:	dc000115 	stw	r16,4(sp)
    28e0:	2821883a 	mov	r16,r5
    28e4:	3029883a 	mov	r20,r6
    28e8:	24c00017 	ldw	r19,0(r4)
    28ec:	3000021e 	bne	r6,zero,28f8 <alt_up_rs232_read_fd+0x34>
    28f0:	0025883a 	mov	r18,zero
    28f4:	00000a06 	br	2920 <alt_up_rs232_read_fd+0x5c>
    28f8:	0025883a 	mov	r18,zero
    28fc:	04400044 	movi	r17,1
    2900:	800b883a 	mov	r5,r16
    2904:	8461883a 	add	r16,r16,r17
    2908:	9809883a 	mov	r4,r19
    290c:	d80d883a 	mov	r6,sp
    2910:	00028780 	call	2878 <alt_up_rs232_read_data>
    2914:	1000021e 	bne	r2,zero,2920 <alt_up_rs232_read_fd+0x5c>
    2918:	9465883a 	add	r18,r18,r17
    291c:	a4bff81e 	bne	r20,r18,2900 <alt_up_rs232_read_fd+0x3c>
    2920:	9005883a 	mov	r2,r18
    2924:	dfc00617 	ldw	ra,24(sp)
    2928:	dd000517 	ldw	r20,20(sp)
    292c:	dcc00417 	ldw	r19,16(sp)
    2930:	dc800317 	ldw	r18,12(sp)
    2934:	dc400217 	ldw	r17,8(sp)
    2938:	dc000117 	ldw	r16,4(sp)
    293c:	dec00704 	addi	sp,sp,28
    2940:	f800283a 	ret

00002944 <alt_up_rs232_get_available_space_in_write_FIFO>:
    2944:	20800a17 	ldw	r2,40(r4)
    2948:	10800137 	ldwio	r2,4(r2)
    294c:	1004d43a 	srli	r2,r2,16
    2950:	f800283a 	ret

00002954 <alt_up_rs232_write_data>:
    2954:	20800a17 	ldw	r2,40(r4)
    2958:	10c00037 	ldwio	r3,0(r2)
    295c:	29403fcc 	andi	r5,r5,255
    2960:	11400035 	stwio	r5,0(r2)
    2964:	0005883a 	mov	r2,zero
    2968:	f800283a 	ret

0000296c <alt_up_rs232_write_fd>:
    296c:	defffb04 	addi	sp,sp,-20
    2970:	dfc00415 	stw	ra,16(sp)
    2974:	dcc00315 	stw	r19,12(sp)
    2978:	dc800215 	stw	r18,8(sp)
    297c:	dc400115 	stw	r17,4(sp)
    2980:	dc000015 	stw	r16,0(sp)
    2984:	2827883a 	mov	r19,r5
    2988:	3025883a 	mov	r18,r6
    298c:	24400017 	ldw	r17,0(r4)
    2990:	3000021e 	bne	r6,zero,299c <alt_up_rs232_write_fd+0x30>
    2994:	0021883a 	mov	r16,zero
    2998:	00000806 	br	29bc <alt_up_rs232_write_fd+0x50>
    299c:	0021883a 	mov	r16,zero
    29a0:	84c5883a 	add	r2,r16,r19
    29a4:	8809883a 	mov	r4,r17
    29a8:	11400003 	ldbu	r5,0(r2)
    29ac:	00029540 	call	2954 <alt_up_rs232_write_data>
    29b0:	1000021e 	bne	r2,zero,29bc <alt_up_rs232_write_fd+0x50>
    29b4:	84000044 	addi	r16,r16,1
    29b8:	943ff91e 	bne	r18,r16,29a0 <alt_up_rs232_write_fd+0x34>
    29bc:	8005883a 	mov	r2,r16
    29c0:	dfc00417 	ldw	ra,16(sp)
    29c4:	dcc00317 	ldw	r19,12(sp)
    29c8:	dc800217 	ldw	r18,8(sp)
    29cc:	dc400117 	ldw	r17,4(sp)
    29d0:	dc000017 	ldw	r16,0(sp)
    29d4:	dec00504 	addi	sp,sp,20
    29d8:	f800283a 	ret

000029dc <alt_up_rs232_disable_read_interrupt>:
    29dc:	20800a17 	ldw	r2,40(r4)
    29e0:	10800104 	addi	r2,r2,4
    29e4:	10c00037 	ldwio	r3,0(r2)
    29e8:	013fff84 	movi	r4,-2
    29ec:	1906703a 	and	r3,r3,r4
    29f0:	10c00035 	stwio	r3,0(r2)
    29f4:	f800283a 	ret

000029f8 <alt_up_rs232_enable_read_interrupt>:
    29f8:	20c00a17 	ldw	r3,40(r4)
    29fc:	18c00104 	addi	r3,r3,4
    2a00:	18800037 	ldwio	r2,0(r3)
    2a04:	10800054 	ori	r2,r2,1
    2a08:	18800035 	stwio	r2,0(r3)
    2a0c:	f800283a 	ret

00002a10 <alt_up_rs232_get_used_space_in_read_FIFO>:
    2a10:	20800a17 	ldw	r2,40(r4)
    2a14:	108000ab 	ldhuio	r2,2(r2)
    2a18:	10bfffcc 	andi	r2,r2,65535
    2a1c:	f800283a 	ret

00002a20 <alt_up_char_buffer_string>:
    2a20:	20800c17 	ldw	r2,48(r4)
    2a24:	30801c2e 	bgeu	r6,r2,2a98 <alt_up_char_buffer_string+0x78>
    2a28:	20800d17 	ldw	r2,52(r4)
    2a2c:	38801a2e 	bgeu	r7,r2,2a98 <alt_up_char_buffer_string+0x78>
    2a30:	22001017 	ldw	r8,64(r4)
    2a34:	28c00003 	ldbu	r3,0(r5)
    2a38:	18803fcc 	andi	r2,r3,255
    2a3c:	1080201c 	xori	r2,r2,128
    2a40:	10bfe004 	addi	r2,r2,-128
    2a44:	10001626 	beq	r2,zero,2aa0 <alt_up_char_buffer_string+0x80>
    2a48:	3a04983a 	sll	r2,r7,r8
    2a4c:	308f883a 	add	r7,r6,r2
    2a50:	02000044 	movi	r8,1
    2a54:	20800b17 	ldw	r2,44(r4)
    2a58:	3885883a 	add	r2,r7,r2
    2a5c:	18c03fcc 	andi	r3,r3,255
    2a60:	18c0201c 	xori	r3,r3,128
    2a64:	18ffe004 	addi	r3,r3,-128
    2a68:	10c00025 	stbio	r3,0(r2)
    2a6c:	320d883a 	add	r6,r6,r8
    2a70:	20800c17 	ldw	r2,48(r4)
    2a74:	3080082e 	bgeu	r6,r2,2a98 <alt_up_char_buffer_string+0x78>
    2a78:	2a0b883a 	add	r5,r5,r8
    2a7c:	28c00003 	ldbu	r3,0(r5)
    2a80:	18803fcc 	andi	r2,r3,255
    2a84:	1080201c 	xori	r2,r2,128
    2a88:	10bfe004 	addi	r2,r2,-128
    2a8c:	10000426 	beq	r2,zero,2aa0 <alt_up_char_buffer_string+0x80>
    2a90:	3a0f883a 	add	r7,r7,r8
    2a94:	003fef06 	br	2a54 <alt_up_char_buffer_string+0x34>
    2a98:	00bfffc4 	movi	r2,-1
    2a9c:	f800283a 	ret
    2aa0:	0005883a 	mov	r2,zero
    2aa4:	f800283a 	ret

00002aa8 <alt_up_char_buffer_draw>:
    2aa8:	2011883a 	mov	r8,r4
    2aac:	20800c17 	ldw	r2,48(r4)
    2ab0:	3080112e 	bgeu	r6,r2,2af8 <alt_up_char_buffer_draw+0x50>
    2ab4:	20800d17 	ldw	r2,52(r4)
    2ab8:	38800f2e 	bgeu	r7,r2,2af8 <alt_up_char_buffer_draw+0x50>
    2abc:	20c00f17 	ldw	r3,60(r4)
    2ac0:	30c6703a 	and	r3,r6,r3
    2ac4:	20800e17 	ldw	r2,56(r4)
    2ac8:	1886983a 	sll	r3,r3,r2
    2acc:	20801117 	ldw	r2,68(r4)
    2ad0:	3884703a 	and	r2,r7,r2
    2ad4:	21001017 	ldw	r4,64(r4)
    2ad8:	1104983a 	sll	r2,r2,r4
    2adc:	1886b03a 	or	r3,r3,r2
    2ae0:	40800b17 	ldw	r2,44(r8)
    2ae4:	1887883a 	add	r3,r3,r2
    2ae8:	28803fcc 	andi	r2,r5,255
    2aec:	18800025 	stbio	r2,0(r3)
    2af0:	0005883a 	mov	r2,zero
    2af4:	f800283a 	ret
    2af8:	00bfffc4 	movi	r2,-1
    2afc:	f800283a 	ret

00002b00 <alt_up_char_buffer_clear>:
    2b00:	20c00a17 	ldw	r3,40(r4)
    2b04:	00800044 	movi	r2,1
    2b08:	188000a5 	stbio	r2,2(r3)
    2b0c:	20800a17 	ldw	r2,40(r4)
    2b10:	10c00084 	addi	r3,r2,2
    2b14:	01000044 	movi	r4,1
    2b18:	18800023 	ldbuio	r2,0(r3)
    2b1c:	1104703a 	and	r2,r2,r4
    2b20:	103ffd1e 	bne	r2,zero,2b18 <alt_up_char_buffer_clear+0x18>
    2b24:	f800283a 	ret

00002b28 <alt_up_char_buffer_open_dev>:
    2b28:	deffff04 	addi	sp,sp,-4
    2b2c:	dfc00015 	stw	ra,0(sp)
    2b30:	01400034 	movhi	r5,0
    2b34:	295eba04 	addi	r5,r5,31464
    2b38:	0002d840 	call	2d84 <alt_find_dev>
    2b3c:	dfc00017 	ldw	ra,0(sp)
    2b40:	dec00104 	addi	sp,sp,4
    2b44:	f800283a 	ret

00002b48 <alt_up_char_buffer_init>:
    2b48:	defffe04 	addi	sp,sp,-8
    2b4c:	dfc00115 	stw	ra,4(sp)
    2b50:	dc000015 	stw	r16,0(sp)
    2b54:	24000217 	ldw	r16,8(r4)
    2b58:	80800007 	ldb	r2,0(r16)
    2b5c:	10000a26 	beq	r2,zero,2b88 <alt_up_char_buffer_init+0x40>
    2b60:	8009883a 	mov	r4,r16
    2b64:	01400034 	movhi	r5,0
    2b68:	2956fe04 	addi	r5,r5,23544
    2b6c:	00036600 	call	3660 <strcmp>
    2b70:	1000021e 	bne	r2,zero,2b7c <alt_up_char_buffer_init+0x34>
    2b74:	80000005 	stb	zero,0(r16)
    2b78:	00000306 	br	2b88 <alt_up_char_buffer_init+0x40>
    2b7c:	84000044 	addi	r16,r16,1
    2b80:	80800007 	ldb	r2,0(r16)
    2b84:	103ff61e 	bne	r2,zero,2b60 <alt_up_char_buffer_init+0x18>
    2b88:	dfc00117 	ldw	ra,4(sp)
    2b8c:	dc000017 	ldw	r16,0(sp)
    2b90:	dec00204 	addi	sp,sp,8
    2b94:	f800283a 	ret

00002b98 <alt_alarm_start>:
    2b98:	00800074 	movhi	r2,1
    2b9c:	10a68804 	addi	r2,r2,-26080
    2ba0:	10800017 	ldw	r2,0(r2)
    2ba4:	1000021e 	bne	r2,zero,2bb0 <alt_alarm_start+0x18>
    2ba8:	00bfde84 	movi	r2,-134
    2bac:	f800283a 	ret
    2bb0:	2000021e 	bne	r4,zero,2bbc <alt_alarm_start+0x24>
    2bb4:	00bffa84 	movi	r2,-22
    2bb8:	f800283a 	ret
    2bbc:	21800315 	stw	r6,12(r4)
    2bc0:	21c00515 	stw	r7,20(r4)
    2bc4:	000f303a 	rdctl	r7,status
    2bc8:	00bfff84 	movi	r2,-2
    2bcc:	3884703a 	and	r2,r7,r2
    2bd0:	1001703a 	wrctl	status,r2
    2bd4:	00800074 	movhi	r2,1
    2bd8:	10a68904 	addi	r2,r2,-26076
    2bdc:	10c00017 	ldw	r3,0(r2)
    2be0:	01800044 	movi	r6,1
    2be4:	1985883a 	add	r2,r3,r6
    2be8:	2885883a 	add	r2,r5,r2
    2bec:	20800215 	stw	r2,8(r4)
    2bf0:	10c0022e 	bgeu	r2,r3,2bfc <alt_alarm_start+0x64>
    2bf4:	21800405 	stb	r6,16(r4)
    2bf8:	00000106 	br	2c00 <alt_alarm_start+0x68>
    2bfc:	20000405 	stb	zero,16(r4)
    2c00:	00800034 	movhi	r2,0
    2c04:	109ebe04 	addi	r2,r2,31480
    2c08:	20800115 	stw	r2,4(r4)
    2c0c:	10c00017 	ldw	r3,0(r2)
    2c10:	20c00015 	stw	r3,0(r4)
    2c14:	10c00017 	ldw	r3,0(r2)
    2c18:	19000115 	stw	r4,4(r3)
    2c1c:	11000015 	stw	r4,0(r2)
    2c20:	3801703a 	wrctl	status,r7
    2c24:	0005883a 	mov	r2,zero
    2c28:	f800283a 	ret

00002c2c <close>:
    2c2c:	defffd04 	addi	sp,sp,-12
    2c30:	dfc00215 	stw	ra,8(sp)
    2c34:	dc400115 	stw	r17,4(sp)
    2c38:	dc000015 	stw	r16,0(sp)
    2c3c:	2021883a 	mov	r16,r4
    2c40:	20001c16 	blt	r4,zero,2cb4 <close+0x88>
    2c44:	20c00324 	muli	r3,r4,12
    2c48:	00800034 	movhi	r2,0
    2c4c:	109c3c04 	addi	r2,r2,28912
    2c50:	1889883a 	add	r4,r3,r2
    2c54:	20001726 	beq	r4,zero,2cb4 <close+0x88>
    2c58:	20800017 	ldw	r2,0(r4)
    2c5c:	10800417 	ldw	r2,16(r2)
    2c60:	10002126 	beq	r2,zero,2ce8 <close+0xbc>
    2c64:	103ee83a 	callr	r2
    2c68:	1023883a 	mov	r17,r2
    2c6c:	8009883a 	mov	r4,r16
    2c70:	000308c0 	call	308c <alt_release_fd>
    2c74:	88000216 	blt	r17,zero,2c80 <close+0x54>
    2c78:	0005883a 	mov	r2,zero
    2c7c:	00001d06 	br	2cf4 <close+0xc8>
    2c80:	00800034 	movhi	r2,0
    2c84:	109ebd04 	addi	r2,r2,31476
    2c88:	10800017 	ldw	r2,0(r2)
    2c8c:	1000031e 	bne	r2,zero,2c9c <close+0x70>
    2c90:	00c00074 	movhi	r3,1
    2c94:	18e68a04 	addi	r3,r3,-26072
    2c98:	00000206 	br	2ca4 <close+0x78>
    2c9c:	103ee83a 	callr	r2
    2ca0:	1007883a 	mov	r3,r2
    2ca4:	0445c83a 	sub	r2,zero,r17
    2ca8:	18800015 	stw	r2,0(r3)
    2cac:	00bfffc4 	movi	r2,-1
    2cb0:	00001006 	br	2cf4 <close+0xc8>
    2cb4:	00800034 	movhi	r2,0
    2cb8:	109ebd04 	addi	r2,r2,31476
    2cbc:	10800017 	ldw	r2,0(r2)
    2cc0:	1000031e 	bne	r2,zero,2cd0 <close+0xa4>
    2cc4:	00c00074 	movhi	r3,1
    2cc8:	18e68a04 	addi	r3,r3,-26072
    2ccc:	00000206 	br	2cd8 <close+0xac>
    2cd0:	103ee83a 	callr	r2
    2cd4:	1007883a 	mov	r3,r2
    2cd8:	00801444 	movi	r2,81
    2cdc:	18800015 	stw	r2,0(r3)
    2ce0:	00bfffc4 	movi	r2,-1
    2ce4:	00000306 	br	2cf4 <close+0xc8>
    2ce8:	8009883a 	mov	r4,r16
    2cec:	000308c0 	call	308c <alt_release_fd>
    2cf0:	0005883a 	mov	r2,zero
    2cf4:	dfc00217 	ldw	ra,8(sp)
    2cf8:	dc400117 	ldw	r17,4(sp)
    2cfc:	dc000017 	ldw	r16,0(sp)
    2d00:	dec00304 	addi	sp,sp,12
    2d04:	f800283a 	ret

00002d08 <alt_dcache_flush_all>:
    2d08:	f800283a 	ret

00002d0c <alt_dev_null_write>:
    2d0c:	3005883a 	mov	r2,r6
    2d10:	f800283a 	ret

00002d14 <alt_dev_llist_insert>:
    2d14:	deffff04 	addi	sp,sp,-4
    2d18:	dfc00015 	stw	ra,0(sp)
    2d1c:	20000226 	beq	r4,zero,2d28 <alt_dev_llist_insert+0x14>
    2d20:	20800217 	ldw	r2,8(r4)
    2d24:	10000d1e 	bne	r2,zero,2d5c <alt_dev_llist_insert+0x48>
    2d28:	00800034 	movhi	r2,0
    2d2c:	109ebd04 	addi	r2,r2,31476
    2d30:	10800017 	ldw	r2,0(r2)
    2d34:	1000031e 	bne	r2,zero,2d44 <alt_dev_llist_insert+0x30>
    2d38:	00c00074 	movhi	r3,1
    2d3c:	18e68a04 	addi	r3,r3,-26072
    2d40:	00000206 	br	2d4c <alt_dev_llist_insert+0x38>
    2d44:	103ee83a 	callr	r2
    2d48:	1007883a 	mov	r3,r2
    2d4c:	00800584 	movi	r2,22
    2d50:	18800015 	stw	r2,0(r3)
    2d54:	00bffa84 	movi	r2,-22
    2d58:	00000706 	br	2d78 <alt_dev_llist_insert+0x64>
    2d5c:	21400115 	stw	r5,4(r4)
    2d60:	28800017 	ldw	r2,0(r5)
    2d64:	20800015 	stw	r2,0(r4)
    2d68:	28800017 	ldw	r2,0(r5)
    2d6c:	11000115 	stw	r4,4(r2)
    2d70:	29000015 	stw	r4,0(r5)
    2d74:	0005883a 	mov	r2,zero
    2d78:	dfc00017 	ldw	ra,0(sp)
    2d7c:	dec00104 	addi	sp,sp,4
    2d80:	f800283a 	ret

00002d84 <alt_find_dev>:
    2d84:	defffb04 	addi	sp,sp,-20
    2d88:	dfc00415 	stw	ra,16(sp)
    2d8c:	dcc00315 	stw	r19,12(sp)
    2d90:	dc800215 	stw	r18,8(sp)
    2d94:	dc400115 	stw	r17,4(sp)
    2d98:	dc000015 	stw	r16,0(sp)
    2d9c:	2027883a 	mov	r19,r4
    2da0:	2821883a 	mov	r16,r5
    2da4:	2c400017 	ldw	r17,0(r5)
    2da8:	000371c0 	call	371c <strlen>
    2dac:	14800044 	addi	r18,r2,1
    2db0:	8c000726 	beq	r17,r16,2dd0 <alt_find_dev+0x4c>
    2db4:	89000217 	ldw	r4,8(r17)
    2db8:	980b883a 	mov	r5,r19
    2dbc:	900d883a 	mov	r6,r18
    2dc0:	00033600 	call	3360 <memcmp>
    2dc4:	10000326 	beq	r2,zero,2dd4 <alt_find_dev+0x50>
    2dc8:	8c400017 	ldw	r17,0(r17)
    2dcc:	847ff91e 	bne	r16,r17,2db4 <alt_find_dev+0x30>
    2dd0:	0023883a 	mov	r17,zero
    2dd4:	8805883a 	mov	r2,r17
    2dd8:	dfc00417 	ldw	ra,16(sp)
    2ddc:	dcc00317 	ldw	r19,12(sp)
    2de0:	dc800217 	ldw	r18,8(sp)
    2de4:	dc400117 	ldw	r17,4(sp)
    2de8:	dc000017 	ldw	r16,0(sp)
    2dec:	dec00504 	addi	sp,sp,20
    2df0:	f800283a 	ret

00002df4 <alt_icache_flush_all>:
    2df4:	deffff04 	addi	sp,sp,-4
    2df8:	dfc00015 	stw	ra,0(sp)
    2dfc:	0009883a 	mov	r4,zero
    2e00:	01440004 	movi	r5,4096
    2e04:	00032ec0 	call	32ec <alt_icache_flush>
    2e08:	dfc00017 	ldw	ra,0(sp)
    2e0c:	dec00104 	addi	sp,sp,4
    2e10:	f800283a 	ret

00002e14 <alt_open_fd>:
    2e14:	defffe04 	addi	sp,sp,-8
    2e18:	dfc00115 	stw	ra,4(sp)
    2e1c:	dc000015 	stw	r16,0(sp)
    2e20:	2021883a 	mov	r16,r4
    2e24:	2809883a 	mov	r4,r5
    2e28:	300b883a 	mov	r5,r6
    2e2c:	380d883a 	mov	r6,r7
    2e30:	0002f100 	call	2f10 <open>
    2e34:	1009883a 	mov	r4,r2
    2e38:	10000b16 	blt	r2,zero,2e68 <alt_open_fd+0x54>
    2e3c:	10c00324 	muli	r3,r2,12
    2e40:	00800034 	movhi	r2,0
    2e44:	109c3c04 	addi	r2,r2,28912
    2e48:	1887883a 	add	r3,r3,r2
    2e4c:	18800017 	ldw	r2,0(r3)
    2e50:	80800015 	stw	r2,0(r16)
    2e54:	18800117 	ldw	r2,4(r3)
    2e58:	80800115 	stw	r2,4(r16)
    2e5c:	18800217 	ldw	r2,8(r3)
    2e60:	80800215 	stw	r2,8(r16)
    2e64:	000308c0 	call	308c <alt_release_fd>
    2e68:	dfc00117 	ldw	ra,4(sp)
    2e6c:	dc000017 	ldw	r16,0(sp)
    2e70:	dec00204 	addi	sp,sp,8
    2e74:	f800283a 	ret

00002e78 <alt_io_redirect>:
    2e78:	defffa04 	addi	sp,sp,-24
    2e7c:	dfc00515 	stw	ra,20(sp)
    2e80:	dd000415 	stw	r20,16(sp)
    2e84:	dcc00315 	stw	r19,12(sp)
    2e88:	dc800215 	stw	r18,8(sp)
    2e8c:	dc400115 	stw	r17,4(sp)
    2e90:	dc000015 	stw	r16,0(sp)
    2e94:	2005883a 	mov	r2,r4
    2e98:	2827883a 	mov	r19,r5
    2e9c:	3029883a 	mov	r20,r6
    2ea0:	04000034 	movhi	r16,0
    2ea4:	841c3f04 	addi	r16,r16,28924
    2ea8:	04800044 	movi	r18,1
    2eac:	04407fc4 	movi	r17,511
    2eb0:	8009883a 	mov	r4,r16
    2eb4:	100b883a 	mov	r5,r2
    2eb8:	900d883a 	mov	r6,r18
    2ebc:	880f883a 	mov	r7,r17
    2ec0:	0002e140 	call	2e14 <alt_open_fd>
    2ec4:	843ffd04 	addi	r16,r16,-12
    2ec8:	8009883a 	mov	r4,r16
    2ecc:	980b883a 	mov	r5,r19
    2ed0:	000d883a 	mov	r6,zero
    2ed4:	880f883a 	mov	r7,r17
    2ed8:	0002e140 	call	2e14 <alt_open_fd>
    2edc:	81000604 	addi	r4,r16,24
    2ee0:	a00b883a 	mov	r5,r20
    2ee4:	900d883a 	mov	r6,r18
    2ee8:	880f883a 	mov	r7,r17
    2eec:	0002e140 	call	2e14 <alt_open_fd>
    2ef0:	dfc00517 	ldw	ra,20(sp)
    2ef4:	dd000417 	ldw	r20,16(sp)
    2ef8:	dcc00317 	ldw	r19,12(sp)
    2efc:	dc800217 	ldw	r18,8(sp)
    2f00:	dc400117 	ldw	r17,4(sp)
    2f04:	dc000017 	ldw	r16,0(sp)
    2f08:	dec00604 	addi	sp,sp,24
    2f0c:	f800283a 	ret

00002f10 <open>:
    2f10:	defff904 	addi	sp,sp,-28
    2f14:	dfc00615 	stw	ra,24(sp)
    2f18:	dd400515 	stw	r21,20(sp)
    2f1c:	dd000415 	stw	r20,16(sp)
    2f20:	dcc00315 	stw	r19,12(sp)
    2f24:	dc800215 	stw	r18,8(sp)
    2f28:	dc400115 	stw	r17,4(sp)
    2f2c:	dc000015 	stw	r16,0(sp)
    2f30:	2029883a 	mov	r20,r4
    2f34:	2827883a 	mov	r19,r5
    2f38:	302b883a 	mov	r21,r6
    2f3c:	01400034 	movhi	r5,0
    2f40:	295eba04 	addi	r5,r5,31464
    2f44:	0002d840 	call	2d84 <alt_find_dev>
    2f48:	1021883a 	mov	r16,r2
    2f4c:	10000226 	beq	r2,zero,2f58 <open+0x48>
    2f50:	0025883a 	mov	r18,zero
    2f54:	00000a06 	br	2f80 <open+0x70>
    2f58:	a009883a 	mov	r4,r20
    2f5c:	00031c40 	call	31c4 <alt_find_file>
    2f60:	1021883a 	mov	r16,r2
    2f64:	1000051e 	bne	r2,zero,2f7c <open+0x6c>
    2f68:	047fffc4 	movi	r17,-1
    2f6c:	043ffb44 	movi	r16,-19
    2f70:	00002b06 	br	3020 <open+0x110>
    2f74:	043ffcc4 	movi	r16,-13
    2f78:	00002906 	br	3020 <open+0x110>
    2f7c:	04800044 	movi	r18,1
    2f80:	8009883a 	mov	r4,r16
    2f84:	00032800 	call	3280 <alt_get_fd>
    2f88:	1023883a 	mov	r17,r2
    2f8c:	10003316 	blt	r2,zero,305c <open+0x14c>
    2f90:	10800324 	muli	r2,r2,12
    2f94:	02000034 	movhi	r8,0
    2f98:	421c3c04 	addi	r8,r8,28912
    2f9c:	1209883a 	add	r4,r2,r8
    2fa0:	00900034 	movhi	r2,16384
    2fa4:	10bfffc4 	addi	r2,r2,-1
    2fa8:	9886703a 	and	r3,r19,r2
    2fac:	20c00215 	stw	r3,8(r4)
    2fb0:	9004c03a 	cmpne	r2,r18,zero
    2fb4:	1000121e 	bne	r2,zero,3000 <open+0xf0>
    2fb8:	18900034 	orhi	r2,r3,16384
    2fbc:	20800215 	stw	r2,8(r4)
    2fc0:	00800034 	movhi	r2,0
    2fc4:	109ebc04 	addi	r2,r2,31472
    2fc8:	11c00017 	ldw	r7,0(r2)
    2fcc:	21800017 	ldw	r6,0(r4)
    2fd0:	000b883a 	mov	r5,zero
    2fd4:	4007883a 	mov	r3,r8
    2fd8:	02400044 	movi	r9,1
    2fdc:	02000304 	movi	r8,12
    2fe0:	18800017 	ldw	r2,0(r3)
    2fe4:	1180031e 	bne	r2,r6,2ff4 <open+0xe4>
    2fe8:	18800217 	ldw	r2,8(r3)
    2fec:	1000010e 	bge	r2,zero,2ff4 <open+0xe4>
    2ff0:	193fe01e 	bne	r3,r4,2f74 <open+0x64>
    2ff4:	2a4b883a 	add	r5,r5,r9
    2ff8:	1a07883a 	add	r3,r3,r8
    2ffc:	397ff82e 	bgeu	r7,r5,2fe0 <open+0xd0>
    3000:	80800317 	ldw	r2,12(r16)
    3004:	10001726 	beq	r2,zero,3064 <open+0x154>
    3008:	a00b883a 	mov	r5,r20
    300c:	980d883a 	mov	r6,r19
    3010:	a80f883a 	mov	r7,r21
    3014:	103ee83a 	callr	r2
    3018:	1021883a 	mov	r16,r2
    301c:	1000110e 	bge	r2,zero,3064 <open+0x154>
    3020:	8809883a 	mov	r4,r17
    3024:	000308c0 	call	308c <alt_release_fd>
    3028:	00800034 	movhi	r2,0
    302c:	109ebd04 	addi	r2,r2,31476
    3030:	10800017 	ldw	r2,0(r2)
    3034:	1000031e 	bne	r2,zero,3044 <open+0x134>
    3038:	00c00074 	movhi	r3,1
    303c:	18e68a04 	addi	r3,r3,-26072
    3040:	00000206 	br	304c <open+0x13c>
    3044:	103ee83a 	callr	r2
    3048:	1007883a 	mov	r3,r2
    304c:	0405c83a 	sub	r2,zero,r16
    3050:	18800015 	stw	r2,0(r3)
    3054:	047fffc4 	movi	r17,-1
    3058:	00000206 	br	3064 <open+0x154>
    305c:	1021883a 	mov	r16,r2
    3060:	003fef06 	br	3020 <open+0x110>
    3064:	8805883a 	mov	r2,r17
    3068:	dfc00617 	ldw	ra,24(sp)
    306c:	dd400517 	ldw	r21,20(sp)
    3070:	dd000417 	ldw	r20,16(sp)
    3074:	dcc00317 	ldw	r19,12(sp)
    3078:	dc800217 	ldw	r18,8(sp)
    307c:	dc400117 	ldw	r17,4(sp)
    3080:	dc000017 	ldw	r16,0(sp)
    3084:	dec00704 	addi	sp,sp,28
    3088:	f800283a 	ret

0000308c <alt_release_fd>:
    308c:	00800084 	movi	r2,2
    3090:	1100060e 	bge	r2,r4,30ac <alt_release_fd+0x20>
    3094:	20800324 	muli	r2,r4,12
    3098:	00c00034 	movhi	r3,0
    309c:	18dc3c04 	addi	r3,r3,28912
    30a0:	10c5883a 	add	r2,r2,r3
    30a4:	10000215 	stw	zero,8(r2)
    30a8:	10000015 	stw	zero,0(r2)
    30ac:	f800283a 	ret

000030b0 <alt_remap_uncached>:
    30b0:	defffe04 	addi	sp,sp,-8
    30b4:	dfc00115 	stw	ra,4(sp)
    30b8:	dc000015 	stw	r16,0(sp)
    30bc:	2021883a 	mov	r16,r4
    30c0:	00031c00 	call	31c0 <alt_dcache_flush>
    30c4:	80a00034 	orhi	r2,r16,32768
    30c8:	dfc00117 	ldw	ra,4(sp)
    30cc:	dc000017 	ldw	r16,0(sp)
    30d0:	dec00204 	addi	sp,sp,8
    30d4:	f800283a 	ret

000030d8 <alt_alarm_stop>:
    30d8:	000b303a 	rdctl	r5,status
    30dc:	00bfff84 	movi	r2,-2
    30e0:	2884703a 	and	r2,r5,r2
    30e4:	1001703a 	wrctl	status,r2
    30e8:	20c00017 	ldw	r3,0(r4)
    30ec:	20800117 	ldw	r2,4(r4)
    30f0:	18800115 	stw	r2,4(r3)
    30f4:	20800117 	ldw	r2,4(r4)
    30f8:	10c00015 	stw	r3,0(r2)
    30fc:	21000115 	stw	r4,4(r4)
    3100:	21000015 	stw	r4,0(r4)
    3104:	2801703a 	wrctl	status,r5
    3108:	f800283a 	ret

0000310c <alt_tick>:
    310c:	defffd04 	addi	sp,sp,-12
    3110:	dfc00215 	stw	ra,8(sp)
    3114:	dc400115 	stw	r17,4(sp)
    3118:	dc000015 	stw	r16,0(sp)
    311c:	d4202017 	ldw	r16,-32640(gp)
    3120:	d0a7eb17 	ldw	r2,-24660(gp)
    3124:	10800044 	addi	r2,r2,1
    3128:	d0a7eb15 	stw	r2,-24660(gp)
    312c:	00001b06 	br	319c <alt_tick+0x90>
    3130:	84400017 	ldw	r17,0(r16)
    3134:	80800403 	ldbu	r2,16(r16)
    3138:	10000326 	beq	r2,zero,3148 <alt_tick+0x3c>
    313c:	d0a7eb17 	ldw	r2,-24660(gp)
    3140:	1000011e 	bne	r2,zero,3148 <alt_tick+0x3c>
    3144:	80000405 	stb	zero,16(r16)
    3148:	d0e7eb17 	ldw	r3,-24660(gp)
    314c:	80800217 	ldw	r2,8(r16)
    3150:	18801136 	bltu	r3,r2,3198 <alt_tick+0x8c>
    3154:	80800403 	ldbu	r2,16(r16)
    3158:	10000f1e 	bne	r2,zero,3198 <alt_tick+0x8c>
    315c:	80800317 	ldw	r2,12(r16)
    3160:	81000517 	ldw	r4,20(r16)
    3164:	103ee83a 	callr	r2
    3168:	1007883a 	mov	r3,r2
    316c:	1000031e 	bne	r2,zero,317c <alt_tick+0x70>
    3170:	8009883a 	mov	r4,r16
    3174:	00030d80 	call	30d8 <alt_alarm_stop>
    3178:	00000706 	br	3198 <alt_tick+0x8c>
    317c:	80800217 	ldw	r2,8(r16)
    3180:	1885883a 	add	r2,r3,r2
    3184:	80800215 	stw	r2,8(r16)
    3188:	d0e7eb17 	ldw	r3,-24660(gp)
    318c:	10c0022e 	bgeu	r2,r3,3198 <alt_tick+0x8c>
    3190:	00800044 	movi	r2,1
    3194:	80800405 	stb	r2,16(r16)
    3198:	8821883a 	mov	r16,r17
    319c:	d0a02004 	addi	r2,gp,-32640
    31a0:	80bfe31e 	bne	r16,r2,3130 <alt_tick+0x24>
    31a4:	dfc00217 	ldw	ra,8(sp)
    31a8:	dc400117 	ldw	r17,4(sp)
    31ac:	dc000017 	ldw	r16,0(sp)
    31b0:	dec00304 	addi	sp,sp,12
    31b4:	f800283a 	ret

000031b8 <altera_nios2_qsys_irq_init>:
    31b8:	000170fa 	wrctl	ienable,zero
    31bc:	f800283a 	ret

000031c0 <alt_dcache_flush>:
    31c0:	f800283a 	ret

000031c4 <alt_find_file>:
    31c4:	defff904 	addi	sp,sp,-28
    31c8:	dfc00615 	stw	ra,24(sp)
    31cc:	dd400515 	stw	r21,20(sp)
    31d0:	dd000415 	stw	r20,16(sp)
    31d4:	dcc00315 	stw	r19,12(sp)
    31d8:	dc800215 	stw	r18,8(sp)
    31dc:	dc400115 	stw	r17,4(sp)
    31e0:	dc000015 	stw	r16,0(sp)
    31e4:	2025883a 	mov	r18,r4
    31e8:	00800034 	movhi	r2,0
    31ec:	109eb804 	addi	r2,r2,31456
    31f0:	14400017 	ldw	r17,0(r2)
    31f4:	102b883a 	mov	r21,r2
    31f8:	88801626 	beq	r17,r2,3254 <alt_find_file+0x90>
    31fc:	053fffc4 	movi	r20,-1
    3200:	04c00bc4 	movi	r19,47
    3204:	8c000217 	ldw	r16,8(r17)
    3208:	8009883a 	mov	r4,r16
    320c:	000371c0 	call	371c <strlen>
    3210:	1007883a 	mov	r3,r2
    3214:	8085883a 	add	r2,r16,r2
    3218:	1505883a 	add	r2,r2,r20
    321c:	10800007 	ldb	r2,0(r2)
    3220:	14c0011e 	bne	r2,r19,3228 <alt_find_file+0x64>
    3224:	1d07883a 	add	r3,r3,r20
    3228:	1c85883a 	add	r2,r3,r18
    322c:	10800007 	ldb	r2,0(r2)
    3230:	14c00126 	beq	r2,r19,3238 <alt_find_file+0x74>
    3234:	1000051e 	bne	r2,zero,324c <alt_find_file+0x88>
    3238:	8009883a 	mov	r4,r16
    323c:	900b883a 	mov	r5,r18
    3240:	180d883a 	mov	r6,r3
    3244:	00033600 	call	3360 <memcmp>
    3248:	10000326 	beq	r2,zero,3258 <alt_find_file+0x94>
    324c:	8c400017 	ldw	r17,0(r17)
    3250:	8d7fec1e 	bne	r17,r21,3204 <alt_find_file+0x40>
    3254:	0023883a 	mov	r17,zero
    3258:	8805883a 	mov	r2,r17
    325c:	dfc00617 	ldw	ra,24(sp)
    3260:	dd400517 	ldw	r21,20(sp)
    3264:	dd000417 	ldw	r20,16(sp)
    3268:	dcc00317 	ldw	r19,12(sp)
    326c:	dc800217 	ldw	r18,8(sp)
    3270:	dc400117 	ldw	r17,4(sp)
    3274:	dc000017 	ldw	r16,0(sp)
    3278:	dec00704 	addi	sp,sp,28
    327c:	f800283a 	ret

00003280 <alt_get_fd>:
    3280:	000b883a 	mov	r5,zero
    3284:	00c00034 	movhi	r3,0
    3288:	18dc3c04 	addi	r3,r3,28912
    328c:	02000304 	movi	r8,12
    3290:	02400034 	movhi	r9,0
    3294:	4a5ebc04 	addi	r9,r9,31472
    3298:	01c00044 	movi	r7,1
    329c:	01800804 	movi	r6,32
    32a0:	18800017 	ldw	r2,0(r3)
    32a4:	10000c1e 	bne	r2,zero,32d8 <alt_get_fd+0x58>
    32a8:	2a05383a 	mul	r2,r5,r8
    32ac:	00c00034 	movhi	r3,0
    32b0:	18dc3c04 	addi	r3,r3,28912
    32b4:	10c5883a 	add	r2,r2,r3
    32b8:	11000015 	stw	r4,0(r2)
    32bc:	48800017 	ldw	r2,0(r9)
    32c0:	11400216 	blt	r2,r5,32cc <alt_get_fd+0x4c>
    32c4:	2805883a 	mov	r2,r5
    32c8:	f800283a 	ret
    32cc:	49400015 	stw	r5,0(r9)
    32d0:	2805883a 	mov	r2,r5
    32d4:	f800283a 	ret
    32d8:	29cb883a 	add	r5,r5,r7
    32dc:	1a07883a 	add	r3,r3,r8
    32e0:	29bfef1e 	bne	r5,r6,32a0 <alt_get_fd+0x20>
    32e4:	00bffa04 	movi	r2,-24
    32e8:	f800283a 	ret

000032ec <alt_icache_flush>:
    32ec:	2007883a 	mov	r3,r4
    32f0:	00840004 	movi	r2,4096
    32f4:	1140012e 	bgeu	r2,r5,32fc <alt_icache_flush+0x10>
    32f8:	100b883a 	mov	r5,r2
    32fc:	194b883a 	add	r5,r3,r5
    3300:	1940042e 	bgeu	r3,r5,3314 <alt_icache_flush+0x28>
    3304:	00800804 	movi	r2,32
    3308:	1800603a 	flushi	r3
    330c:	1887883a 	add	r3,r3,r2
    3310:	197ffd36 	bltu	r3,r5,3308 <alt_icache_flush+0x1c>
    3314:	208007cc 	andi	r2,r4,31
    3318:	10000126 	beq	r2,zero,3320 <alt_icache_flush+0x34>
    331c:	1800603a 	flushi	r3
    3320:	0000203a 	flushp
    3324:	f800283a 	ret

00003328 <exit>:
    3328:	defffe04 	addi	sp,sp,-8
    332c:	000b883a 	mov	r5,zero
    3330:	dc000015 	stw	r16,0(sp)
    3334:	dfc00115 	stw	ra,4(sp)
    3338:	2021883a 	mov	r16,r4
    333c:	0003a1c0 	call	3a1c <__call_exitprocs>
    3340:	00800034 	movhi	r2,0
    3344:	109ec104 	addi	r2,r2,31492
    3348:	11000017 	ldw	r4,0(r2)
    334c:	20800f17 	ldw	r2,60(r4)
    3350:	10000126 	beq	r2,zero,3358 <exit+0x30>
    3354:	103ee83a 	callr	r2
    3358:	8009883a 	mov	r4,r16
    335c:	00055840 	call	5584 <_exit>

00003360 <memcmp>:
    3360:	00c000c4 	movi	r3,3
    3364:	1980032e 	bgeu	r3,r6,3374 <memcmp+0x14>
    3368:	2144b03a 	or	r2,r4,r5
    336c:	10c4703a 	and	r2,r2,r3
    3370:	10000f26 	beq	r2,zero,33b0 <memcmp+0x50>
    3374:	31ffffc4 	addi	r7,r6,-1
    3378:	3000061e 	bne	r6,zero,3394 <memcmp+0x34>
    337c:	00000a06 	br	33a8 <memcmp+0x48>
    3380:	39ffffc4 	addi	r7,r7,-1
    3384:	00bfffc4 	movi	r2,-1
    3388:	21000044 	addi	r4,r4,1
    338c:	29400044 	addi	r5,r5,1
    3390:	38800526 	beq	r7,r2,33a8 <memcmp+0x48>
    3394:	20c00003 	ldbu	r3,0(r4)
    3398:	28800003 	ldbu	r2,0(r5)
    339c:	18bff826 	beq	r3,r2,3380 <memcmp+0x20>
    33a0:	1885c83a 	sub	r2,r3,r2
    33a4:	f800283a 	ret
    33a8:	0005883a 	mov	r2,zero
    33ac:	f800283a 	ret
    33b0:	180f883a 	mov	r7,r3
    33b4:	20c00017 	ldw	r3,0(r4)
    33b8:	28800017 	ldw	r2,0(r5)
    33bc:	18bfed1e 	bne	r3,r2,3374 <memcmp+0x14>
    33c0:	31bfff04 	addi	r6,r6,-4
    33c4:	21000104 	addi	r4,r4,4
    33c8:	29400104 	addi	r5,r5,4
    33cc:	39bff936 	bltu	r7,r6,33b4 <memcmp+0x54>
    33d0:	003fe806 	br	3374 <memcmp+0x14>

000033d4 <memcpy>:
    33d4:	01c003c4 	movi	r7,15
    33d8:	2007883a 	mov	r3,r4
    33dc:	3980032e 	bgeu	r7,r6,33ec <memcpy+0x18>
    33e0:	2904b03a 	or	r2,r5,r4
    33e4:	108000cc 	andi	r2,r2,3
    33e8:	10000926 	beq	r2,zero,3410 <memcpy+0x3c>
    33ec:	30000626 	beq	r6,zero,3408 <memcpy+0x34>
    33f0:	30cd883a 	add	r6,r6,r3
    33f4:	28800003 	ldbu	r2,0(r5)
    33f8:	29400044 	addi	r5,r5,1
    33fc:	18800005 	stb	r2,0(r3)
    3400:	18c00044 	addi	r3,r3,1
    3404:	30fffb1e 	bne	r6,r3,33f4 <memcpy+0x20>
    3408:	2005883a 	mov	r2,r4
    340c:	f800283a 	ret
    3410:	3811883a 	mov	r8,r7
    3414:	200f883a 	mov	r7,r4
    3418:	28c00017 	ldw	r3,0(r5)
    341c:	31bffc04 	addi	r6,r6,-16
    3420:	38c00015 	stw	r3,0(r7)
    3424:	28800117 	ldw	r2,4(r5)
    3428:	38800115 	stw	r2,4(r7)
    342c:	28c00217 	ldw	r3,8(r5)
    3430:	38c00215 	stw	r3,8(r7)
    3434:	28800317 	ldw	r2,12(r5)
    3438:	29400404 	addi	r5,r5,16
    343c:	38800315 	stw	r2,12(r7)
    3440:	39c00404 	addi	r7,r7,16
    3444:	41bff436 	bltu	r8,r6,3418 <memcpy+0x44>
    3448:	008000c4 	movi	r2,3
    344c:	1180072e 	bgeu	r2,r6,346c <memcpy+0x98>
    3450:	1007883a 	mov	r3,r2
    3454:	28800017 	ldw	r2,0(r5)
    3458:	31bfff04 	addi	r6,r6,-4
    345c:	29400104 	addi	r5,r5,4
    3460:	38800015 	stw	r2,0(r7)
    3464:	39c00104 	addi	r7,r7,4
    3468:	19bffa36 	bltu	r3,r6,3454 <memcpy+0x80>
    346c:	3807883a 	mov	r3,r7
    3470:	003fde06 	br	33ec <memcpy+0x18>

00003474 <putc>:
    3474:	defffc04 	addi	sp,sp,-16
    3478:	dc800215 	stw	r18,8(sp)
    347c:	04800034 	movhi	r18,0
    3480:	949ec004 	addi	r18,r18,31488
    3484:	90c00017 	ldw	r3,0(r18)
    3488:	dc400115 	stw	r17,4(sp)
    348c:	dc000015 	stw	r16,0(sp)
    3490:	dfc00315 	stw	ra,12(sp)
    3494:	2023883a 	mov	r17,r4
    3498:	2821883a 	mov	r16,r5
    349c:	18000226 	beq	r3,zero,34a8 <putc+0x34>
    34a0:	18800e17 	ldw	r2,56(r3)
    34a4:	10001126 	beq	r2,zero,34ec <putc+0x78>
    34a8:	80800217 	ldw	r2,8(r16)
    34ac:	10ffffc4 	addi	r3,r2,-1
    34b0:	80c00215 	stw	r3,8(r16)
    34b4:	18001316 	blt	r3,zero,3504 <putc+0x90>
    34b8:	80800017 	ldw	r2,0(r16)
    34bc:	14400005 	stb	r17,0(r2)
    34c0:	80c00017 	ldw	r3,0(r16)
    34c4:	18800044 	addi	r2,r3,1
    34c8:	18c00003 	ldbu	r3,0(r3)
    34cc:	80800015 	stw	r2,0(r16)
    34d0:	1805883a 	mov	r2,r3
    34d4:	dfc00317 	ldw	ra,12(sp)
    34d8:	dc800217 	ldw	r18,8(sp)
    34dc:	dc400117 	ldw	r17,4(sp)
    34e0:	dc000017 	ldw	r16,0(sp)
    34e4:	dec00404 	addi	sp,sp,16
    34e8:	f800283a 	ret
    34ec:	1809883a 	mov	r4,r3
    34f0:	0003e640 	call	3e64 <__sinit>
    34f4:	80800217 	ldw	r2,8(r16)
    34f8:	10ffffc4 	addi	r3,r2,-1
    34fc:	80c00215 	stw	r3,8(r16)
    3500:	183fed0e 	bge	r3,zero,34b8 <putc+0x44>
    3504:	80800617 	ldw	r2,24(r16)
    3508:	18800f16 	blt	r3,r2,3548 <putc+0xd4>
    350c:	80800017 	ldw	r2,0(r16)
    3510:	14400005 	stb	r17,0(r2)
    3514:	81000017 	ldw	r4,0(r16)
    3518:	00800284 	movi	r2,10
    351c:	20c00003 	ldbu	r3,0(r4)
    3520:	18801226 	beq	r3,r2,356c <putc+0xf8>
    3524:	20800044 	addi	r2,r4,1
    3528:	80800015 	stw	r2,0(r16)
    352c:	1805883a 	mov	r2,r3
    3530:	dfc00317 	ldw	ra,12(sp)
    3534:	dc800217 	ldw	r18,8(sp)
    3538:	dc400117 	ldw	r17,4(sp)
    353c:	dc000017 	ldw	r16,0(sp)
    3540:	dec00404 	addi	sp,sp,16
    3544:	f800283a 	ret
    3548:	91000017 	ldw	r4,0(r18)
    354c:	880b883a 	mov	r5,r17
    3550:	800d883a 	mov	r6,r16
    3554:	dfc00317 	ldw	ra,12(sp)
    3558:	dc800217 	ldw	r18,8(sp)
    355c:	dc400117 	ldw	r17,4(sp)
    3560:	dc000017 	ldw	r16,0(sp)
    3564:	dec00404 	addi	sp,sp,16
    3568:	00037901 	jmpi	3790 <__swbuf_r>
    356c:	91000017 	ldw	r4,0(r18)
    3570:	180b883a 	mov	r5,r3
    3574:	003ff606 	br	3550 <putc+0xdc>

00003578 <_putc_r>:
    3578:	defffc04 	addi	sp,sp,-16
    357c:	dc400215 	stw	r17,8(sp)
    3580:	dc000115 	stw	r16,4(sp)
    3584:	dfc00315 	stw	ra,12(sp)
    3588:	2021883a 	mov	r16,r4
    358c:	2823883a 	mov	r17,r5
    3590:	20000226 	beq	r4,zero,359c <_putc_r+0x24>
    3594:	20800e17 	ldw	r2,56(r4)
    3598:	10001026 	beq	r2,zero,35dc <_putc_r+0x64>
    359c:	30800217 	ldw	r2,8(r6)
    35a0:	10ffffc4 	addi	r3,r2,-1
    35a4:	30c00215 	stw	r3,8(r6)
    35a8:	18001316 	blt	r3,zero,35f8 <_putc_r+0x80>
    35ac:	30800017 	ldw	r2,0(r6)
    35b0:	14400005 	stb	r17,0(r2)
    35b4:	30c00017 	ldw	r3,0(r6)
    35b8:	18800044 	addi	r2,r3,1
    35bc:	18c00003 	ldbu	r3,0(r3)
    35c0:	30800015 	stw	r2,0(r6)
    35c4:	1805883a 	mov	r2,r3
    35c8:	dfc00317 	ldw	ra,12(sp)
    35cc:	dc400217 	ldw	r17,8(sp)
    35d0:	dc000117 	ldw	r16,4(sp)
    35d4:	dec00404 	addi	sp,sp,16
    35d8:	f800283a 	ret
    35dc:	d9800015 	stw	r6,0(sp)
    35e0:	0003e640 	call	3e64 <__sinit>
    35e4:	d9800017 	ldw	r6,0(sp)
    35e8:	30800217 	ldw	r2,8(r6)
    35ec:	10ffffc4 	addi	r3,r2,-1
    35f0:	30c00215 	stw	r3,8(r6)
    35f4:	183fed0e 	bge	r3,zero,35ac <_putc_r+0x34>
    35f8:	30800617 	ldw	r2,24(r6)
    35fc:	18800e16 	blt	r3,r2,3638 <_putc_r+0xc0>
    3600:	30800017 	ldw	r2,0(r6)
    3604:	14400005 	stb	r17,0(r2)
    3608:	31000017 	ldw	r4,0(r6)
    360c:	00800284 	movi	r2,10
    3610:	20c00003 	ldbu	r3,0(r4)
    3614:	18800f26 	beq	r3,r2,3654 <_putc_r+0xdc>
    3618:	20800044 	addi	r2,r4,1
    361c:	30800015 	stw	r2,0(r6)
    3620:	1805883a 	mov	r2,r3
    3624:	dfc00317 	ldw	ra,12(sp)
    3628:	dc400217 	ldw	r17,8(sp)
    362c:	dc000117 	ldw	r16,4(sp)
    3630:	dec00404 	addi	sp,sp,16
    3634:	f800283a 	ret
    3638:	8009883a 	mov	r4,r16
    363c:	880b883a 	mov	r5,r17
    3640:	dfc00317 	ldw	ra,12(sp)
    3644:	dc400217 	ldw	r17,8(sp)
    3648:	dc000117 	ldw	r16,4(sp)
    364c:	dec00404 	addi	sp,sp,16
    3650:	00037901 	jmpi	3790 <__swbuf_r>
    3654:	8009883a 	mov	r4,r16
    3658:	180b883a 	mov	r5,r3
    365c:	003ff806 	br	3640 <_putc_r+0xc8>

00003660 <strcmp>:
    3660:	2144b03a 	or	r2,r4,r5
    3664:	108000cc 	andi	r2,r2,3
    3668:	10001d1e 	bne	r2,zero,36e0 <strcmp+0x80>
    366c:	200f883a 	mov	r7,r4
    3670:	28800017 	ldw	r2,0(r5)
    3674:	21000017 	ldw	r4,0(r4)
    3678:	280d883a 	mov	r6,r5
    367c:	2080161e 	bne	r4,r2,36d8 <strcmp+0x78>
    3680:	023fbff4 	movhi	r8,65279
    3684:	423fbfc4 	addi	r8,r8,-257
    3688:	2207883a 	add	r3,r4,r8
    368c:	01602074 	movhi	r5,32897
    3690:	29602004 	addi	r5,r5,-32640
    3694:	1946703a 	and	r3,r3,r5
    3698:	0104303a 	nor	r2,zero,r4
    369c:	10c4703a 	and	r2,r2,r3
    36a0:	10001c1e 	bne	r2,zero,3714 <strcmp+0xb4>
    36a4:	4013883a 	mov	r9,r8
    36a8:	2811883a 	mov	r8,r5
    36ac:	00000106 	br	36b4 <strcmp+0x54>
    36b0:	1800181e 	bne	r3,zero,3714 <strcmp+0xb4>
    36b4:	39c00104 	addi	r7,r7,4
    36b8:	39000017 	ldw	r4,0(r7)
    36bc:	31800104 	addi	r6,r6,4
    36c0:	31400017 	ldw	r5,0(r6)
    36c4:	2245883a 	add	r2,r4,r9
    36c8:	1204703a 	and	r2,r2,r8
    36cc:	0106303a 	nor	r3,zero,r4
    36d0:	1886703a 	and	r3,r3,r2
    36d4:	217ff626 	beq	r4,r5,36b0 <strcmp+0x50>
    36d8:	3809883a 	mov	r4,r7
    36dc:	300b883a 	mov	r5,r6
    36e0:	20c00007 	ldb	r3,0(r4)
    36e4:	1800051e 	bne	r3,zero,36fc <strcmp+0x9c>
    36e8:	00000606 	br	3704 <strcmp+0xa4>
    36ec:	21000044 	addi	r4,r4,1
    36f0:	20c00007 	ldb	r3,0(r4)
    36f4:	29400044 	addi	r5,r5,1
    36f8:	18000226 	beq	r3,zero,3704 <strcmp+0xa4>
    36fc:	28800007 	ldb	r2,0(r5)
    3700:	18bffa26 	beq	r3,r2,36ec <strcmp+0x8c>
    3704:	20c00003 	ldbu	r3,0(r4)
    3708:	28800003 	ldbu	r2,0(r5)
    370c:	1885c83a 	sub	r2,r3,r2
    3710:	f800283a 	ret
    3714:	0005883a 	mov	r2,zero
    3718:	f800283a 	ret

0000371c <strlen>:
    371c:	208000cc 	andi	r2,r4,3
    3720:	2011883a 	mov	r8,r4
    3724:	1000161e 	bne	r2,zero,3780 <strlen+0x64>
    3728:	20c00017 	ldw	r3,0(r4)
    372c:	017fbff4 	movhi	r5,65279
    3730:	297fbfc4 	addi	r5,r5,-257
    3734:	01e02074 	movhi	r7,32897
    3738:	39e02004 	addi	r7,r7,-32640
    373c:	1945883a 	add	r2,r3,r5
    3740:	11c4703a 	and	r2,r2,r7
    3744:	00c6303a 	nor	r3,zero,r3
    3748:	1886703a 	and	r3,r3,r2
    374c:	18000c1e 	bne	r3,zero,3780 <strlen+0x64>
    3750:	280d883a 	mov	r6,r5
    3754:	380b883a 	mov	r5,r7
    3758:	21000104 	addi	r4,r4,4
    375c:	20800017 	ldw	r2,0(r4)
    3760:	1187883a 	add	r3,r2,r6
    3764:	1946703a 	and	r3,r3,r5
    3768:	0084303a 	nor	r2,zero,r2
    376c:	10c4703a 	and	r2,r2,r3
    3770:	103ff926 	beq	r2,zero,3758 <strlen+0x3c>
    3774:	20800007 	ldb	r2,0(r4)
    3778:	10000326 	beq	r2,zero,3788 <strlen+0x6c>
    377c:	21000044 	addi	r4,r4,1
    3780:	20800007 	ldb	r2,0(r4)
    3784:	103ffd1e 	bne	r2,zero,377c <strlen+0x60>
    3788:	2205c83a 	sub	r2,r4,r8
    378c:	f800283a 	ret

00003790 <__swbuf_r>:
    3790:	defffc04 	addi	sp,sp,-16
    3794:	dc400215 	stw	r17,8(sp)
    3798:	dc000115 	stw	r16,4(sp)
    379c:	dfc00315 	stw	ra,12(sp)
    37a0:	2023883a 	mov	r17,r4
    37a4:	2821883a 	mov	r16,r5
    37a8:	20000226 	beq	r4,zero,37b4 <__swbuf_r+0x24>
    37ac:	20800e17 	ldw	r2,56(r4)
    37b0:	10002f26 	beq	r2,zero,3870 <__swbuf_r+0xe0>
    37b4:	3080030b 	ldhu	r2,12(r6)
    37b8:	30c00617 	ldw	r3,24(r6)
    37bc:	1080020c 	andi	r2,r2,8
    37c0:	30c00215 	stw	r3,8(r6)
    37c4:	10002226 	beq	r2,zero,3850 <__swbuf_r+0xc0>
    37c8:	30c00417 	ldw	r3,16(r6)
    37cc:	18002026 	beq	r3,zero,3850 <__swbuf_r+0xc0>
    37d0:	31000017 	ldw	r4,0(r6)
    37d4:	30800517 	ldw	r2,20(r6)
    37d8:	20c7c83a 	sub	r3,r4,r3
    37dc:	18802f0e 	bge	r3,r2,389c <__swbuf_r+0x10c>
    37e0:	19400044 	addi	r5,r3,1
    37e4:	30800217 	ldw	r2,8(r6)
    37e8:	84003fcc 	andi	r16,r16,255
    37ec:	20c00044 	addi	r3,r4,1
    37f0:	10bfffc4 	addi	r2,r2,-1
    37f4:	30800215 	stw	r2,8(r6)
    37f8:	24000005 	stb	r16,0(r4)
    37fc:	30800517 	ldw	r2,20(r6)
    3800:	30c00015 	stw	r3,0(r6)
    3804:	11400c26 	beq	r2,r5,3838 <__swbuf_r+0xa8>
    3808:	3080030b 	ldhu	r2,12(r6)
    380c:	1080004c 	andi	r2,r2,1
    3810:	1005003a 	cmpeq	r2,r2,zero
    3814:	10000626 	beq	r2,zero,3830 <__swbuf_r+0xa0>
    3818:	8005883a 	mov	r2,r16
    381c:	dfc00317 	ldw	ra,12(sp)
    3820:	dc400217 	ldw	r17,8(sp)
    3824:	dc000117 	ldw	r16,4(sp)
    3828:	dec00404 	addi	sp,sp,16
    382c:	f800283a 	ret
    3830:	00800284 	movi	r2,10
    3834:	80bff81e 	bne	r16,r2,3818 <__swbuf_r+0x88>
    3838:	8809883a 	mov	r4,r17
    383c:	300b883a 	mov	r5,r6
    3840:	0003bcc0 	call	3bcc <_fflush_r>
    3844:	103ff426 	beq	r2,zero,3818 <__swbuf_r+0x88>
    3848:	043fffc4 	movi	r16,-1
    384c:	003ff206 	br	3818 <__swbuf_r+0x88>
    3850:	300b883a 	mov	r5,r6
    3854:	8809883a 	mov	r4,r17
    3858:	d9800015 	stw	r6,0(sp)
    385c:	00038dc0 	call	38dc <__swsetup_r>
    3860:	d9800017 	ldw	r6,0(sp)
    3864:	1000061e 	bne	r2,zero,3880 <__swbuf_r+0xf0>
    3868:	30c00417 	ldw	r3,16(r6)
    386c:	003fd806 	br	37d0 <__swbuf_r+0x40>
    3870:	d9800015 	stw	r6,0(sp)
    3874:	0003e640 	call	3e64 <__sinit>
    3878:	d9800017 	ldw	r6,0(sp)
    387c:	003fcd06 	br	37b4 <__swbuf_r+0x24>
    3880:	3080030b 	ldhu	r2,12(r6)
    3884:	00c00244 	movi	r3,9
    3888:	043fffc4 	movi	r16,-1
    388c:	10801014 	ori	r2,r2,64
    3890:	3080030d 	sth	r2,12(r6)
    3894:	88c00015 	stw	r3,0(r17)
    3898:	003fdf06 	br	3818 <__swbuf_r+0x88>
    389c:	300b883a 	mov	r5,r6
    38a0:	8809883a 	mov	r4,r17
    38a4:	d9800015 	stw	r6,0(sp)
    38a8:	0003bcc0 	call	3bcc <_fflush_r>
    38ac:	d9800017 	ldw	r6,0(sp)
    38b0:	103fe51e 	bne	r2,zero,3848 <__swbuf_r+0xb8>
    38b4:	31000017 	ldw	r4,0(r6)
    38b8:	01400044 	movi	r5,1
    38bc:	003fc906 	br	37e4 <__swbuf_r+0x54>

000038c0 <__swbuf>:
    38c0:	01800034 	movhi	r6,0
    38c4:	319ec004 	addi	r6,r6,31488
    38c8:	2007883a 	mov	r3,r4
    38cc:	31000017 	ldw	r4,0(r6)
    38d0:	280d883a 	mov	r6,r5
    38d4:	180b883a 	mov	r5,r3
    38d8:	00037901 	jmpi	3790 <__swbuf_r>

000038dc <__swsetup_r>:
    38dc:	00800034 	movhi	r2,0
    38e0:	109ec004 	addi	r2,r2,31488
    38e4:	10c00017 	ldw	r3,0(r2)
    38e8:	defffd04 	addi	sp,sp,-12
    38ec:	dc400115 	stw	r17,4(sp)
    38f0:	dc000015 	stw	r16,0(sp)
    38f4:	dfc00215 	stw	ra,8(sp)
    38f8:	2023883a 	mov	r17,r4
    38fc:	2821883a 	mov	r16,r5
    3900:	18000226 	beq	r3,zero,390c <__swsetup_r+0x30>
    3904:	18800e17 	ldw	r2,56(r3)
    3908:	10001f26 	beq	r2,zero,3988 <__swsetup_r+0xac>
    390c:	8100030b 	ldhu	r4,12(r16)
    3910:	2080020c 	andi	r2,r4,8
    3914:	10002826 	beq	r2,zero,39b8 <__swsetup_r+0xdc>
    3918:	81400417 	ldw	r5,16(r16)
    391c:	28001d26 	beq	r5,zero,3994 <__swsetup_r+0xb8>
    3920:	2080004c 	andi	r2,r4,1
    3924:	1005003a 	cmpeq	r2,r2,zero
    3928:	10000b26 	beq	r2,zero,3958 <__swsetup_r+0x7c>
    392c:	2080008c 	andi	r2,r4,2
    3930:	10001226 	beq	r2,zero,397c <__swsetup_r+0xa0>
    3934:	0005883a 	mov	r2,zero
    3938:	80800215 	stw	r2,8(r16)
    393c:	28000b26 	beq	r5,zero,396c <__swsetup_r+0x90>
    3940:	0005883a 	mov	r2,zero
    3944:	dfc00217 	ldw	ra,8(sp)
    3948:	dc400117 	ldw	r17,4(sp)
    394c:	dc000017 	ldw	r16,0(sp)
    3950:	dec00304 	addi	sp,sp,12
    3954:	f800283a 	ret
    3958:	80800517 	ldw	r2,20(r16)
    395c:	80000215 	stw	zero,8(r16)
    3960:	0085c83a 	sub	r2,zero,r2
    3964:	80800615 	stw	r2,24(r16)
    3968:	283ff51e 	bne	r5,zero,3940 <__swsetup_r+0x64>
    396c:	2080200c 	andi	r2,r4,128
    3970:	103ff326 	beq	r2,zero,3940 <__swsetup_r+0x64>
    3974:	00bfffc4 	movi	r2,-1
    3978:	003ff206 	br	3944 <__swsetup_r+0x68>
    397c:	80800517 	ldw	r2,20(r16)
    3980:	80800215 	stw	r2,8(r16)
    3984:	003fed06 	br	393c <__swsetup_r+0x60>
    3988:	1809883a 	mov	r4,r3
    398c:	0003e640 	call	3e64 <__sinit>
    3990:	003fde06 	br	390c <__swsetup_r+0x30>
    3994:	20c0a00c 	andi	r3,r4,640
    3998:	00808004 	movi	r2,512
    399c:	18bfe026 	beq	r3,r2,3920 <__swsetup_r+0x44>
    39a0:	8809883a 	mov	r4,r17
    39a4:	800b883a 	mov	r5,r16
    39a8:	000467c0 	call	467c <__smakebuf_r>
    39ac:	8100030b 	ldhu	r4,12(r16)
    39b0:	81400417 	ldw	r5,16(r16)
    39b4:	003fda06 	br	3920 <__swsetup_r+0x44>
    39b8:	2080040c 	andi	r2,r4,16
    39bc:	103fed26 	beq	r2,zero,3974 <__swsetup_r+0x98>
    39c0:	2080010c 	andi	r2,r4,4
    39c4:	10001226 	beq	r2,zero,3a10 <__swsetup_r+0x134>
    39c8:	81400c17 	ldw	r5,48(r16)
    39cc:	28000526 	beq	r5,zero,39e4 <__swsetup_r+0x108>
    39d0:	80801004 	addi	r2,r16,64
    39d4:	28800226 	beq	r5,r2,39e0 <__swsetup_r+0x104>
    39d8:	8809883a 	mov	r4,r17
    39dc:	00041e80 	call	41e8 <_free_r>
    39e0:	80000c15 	stw	zero,48(r16)
    39e4:	8080030b 	ldhu	r2,12(r16)
    39e8:	81400417 	ldw	r5,16(r16)
    39ec:	80000115 	stw	zero,4(r16)
    39f0:	10bff6cc 	andi	r2,r2,65499
    39f4:	8080030d 	sth	r2,12(r16)
    39f8:	81400015 	stw	r5,0(r16)
    39fc:	8080030b 	ldhu	r2,12(r16)
    3a00:	10800214 	ori	r2,r2,8
    3a04:	113fffcc 	andi	r4,r2,65535
    3a08:	8080030d 	sth	r2,12(r16)
    3a0c:	003fc306 	br	391c <__swsetup_r+0x40>
    3a10:	81400417 	ldw	r5,16(r16)
    3a14:	003ff906 	br	39fc <__swsetup_r+0x120>

00003a18 <register_fini>:
    3a18:	f800283a 	ret

00003a1c <__call_exitprocs>:
    3a1c:	00800034 	movhi	r2,0
    3a20:	109ec104 	addi	r2,r2,31492
    3a24:	10800017 	ldw	r2,0(r2)
    3a28:	defff304 	addi	sp,sp,-52
    3a2c:	df000b15 	stw	fp,44(sp)
    3a30:	d8800115 	stw	r2,4(sp)
    3a34:	00800034 	movhi	r2,0
    3a38:	10800004 	addi	r2,r2,0
    3a3c:	1005003a 	cmpeq	r2,r2,zero
    3a40:	d8800215 	stw	r2,8(sp)
    3a44:	d8800117 	ldw	r2,4(sp)
    3a48:	dd400815 	stw	r21,32(sp)
    3a4c:	dd000715 	stw	r20,28(sp)
    3a50:	10805204 	addi	r2,r2,328
    3a54:	dfc00c15 	stw	ra,48(sp)
    3a58:	ddc00a15 	stw	r23,40(sp)
    3a5c:	dd800915 	stw	r22,36(sp)
    3a60:	dcc00615 	stw	r19,24(sp)
    3a64:	dc800515 	stw	r18,20(sp)
    3a68:	dc400415 	stw	r17,16(sp)
    3a6c:	dc000315 	stw	r16,12(sp)
    3a70:	282b883a 	mov	r21,r5
    3a74:	2039883a 	mov	fp,r4
    3a78:	d8800015 	stw	r2,0(sp)
    3a7c:	2829003a 	cmpeq	r20,r5,zero
    3a80:	d8800117 	ldw	r2,4(sp)
    3a84:	14405217 	ldw	r17,328(r2)
    3a88:	88001026 	beq	r17,zero,3acc <__call_exitprocs+0xb0>
    3a8c:	ddc00017 	ldw	r23,0(sp)
    3a90:	88800117 	ldw	r2,4(r17)
    3a94:	8c802204 	addi	r18,r17,136
    3a98:	143fffc4 	addi	r16,r2,-1
    3a9c:	80000916 	blt	r16,zero,3ac4 <__call_exitprocs+0xa8>
    3aa0:	05bfffc4 	movi	r22,-1
    3aa4:	a000151e 	bne	r20,zero,3afc <__call_exitprocs+0xe0>
    3aa8:	8409883a 	add	r4,r16,r16
    3aac:	2105883a 	add	r2,r4,r4
    3ab0:	1485883a 	add	r2,r2,r18
    3ab4:	10c02017 	ldw	r3,128(r2)
    3ab8:	a8c01126 	beq	r21,r3,3b00 <__call_exitprocs+0xe4>
    3abc:	843fffc4 	addi	r16,r16,-1
    3ac0:	85bff81e 	bne	r16,r22,3aa4 <__call_exitprocs+0x88>
    3ac4:	d8800217 	ldw	r2,8(sp)
    3ac8:	10003126 	beq	r2,zero,3b90 <__call_exitprocs+0x174>
    3acc:	dfc00c17 	ldw	ra,48(sp)
    3ad0:	df000b17 	ldw	fp,44(sp)
    3ad4:	ddc00a17 	ldw	r23,40(sp)
    3ad8:	dd800917 	ldw	r22,36(sp)
    3adc:	dd400817 	ldw	r21,32(sp)
    3ae0:	dd000717 	ldw	r20,28(sp)
    3ae4:	dcc00617 	ldw	r19,24(sp)
    3ae8:	dc800517 	ldw	r18,20(sp)
    3aec:	dc400417 	ldw	r17,16(sp)
    3af0:	dc000317 	ldw	r16,12(sp)
    3af4:	dec00d04 	addi	sp,sp,52
    3af8:	f800283a 	ret
    3afc:	8409883a 	add	r4,r16,r16
    3b00:	88c00117 	ldw	r3,4(r17)
    3b04:	2105883a 	add	r2,r4,r4
    3b08:	1445883a 	add	r2,r2,r17
    3b0c:	18ffffc4 	addi	r3,r3,-1
    3b10:	11800217 	ldw	r6,8(r2)
    3b14:	1c001526 	beq	r3,r16,3b6c <__call_exitprocs+0x150>
    3b18:	10000215 	stw	zero,8(r2)
    3b1c:	303fe726 	beq	r6,zero,3abc <__call_exitprocs+0xa0>
    3b20:	00c00044 	movi	r3,1
    3b24:	1c06983a 	sll	r3,r3,r16
    3b28:	90804017 	ldw	r2,256(r18)
    3b2c:	8cc00117 	ldw	r19,4(r17)
    3b30:	1884703a 	and	r2,r3,r2
    3b34:	10001426 	beq	r2,zero,3b88 <__call_exitprocs+0x16c>
    3b38:	90804117 	ldw	r2,260(r18)
    3b3c:	1884703a 	and	r2,r3,r2
    3b40:	10000c1e 	bne	r2,zero,3b74 <__call_exitprocs+0x158>
    3b44:	2105883a 	add	r2,r4,r4
    3b48:	1485883a 	add	r2,r2,r18
    3b4c:	11400017 	ldw	r5,0(r2)
    3b50:	e009883a 	mov	r4,fp
    3b54:	303ee83a 	callr	r6
    3b58:	88800117 	ldw	r2,4(r17)
    3b5c:	98bfc81e 	bne	r19,r2,3a80 <__call_exitprocs+0x64>
    3b60:	b8800017 	ldw	r2,0(r23)
    3b64:	147fd526 	beq	r2,r17,3abc <__call_exitprocs+0xa0>
    3b68:	003fc506 	br	3a80 <__call_exitprocs+0x64>
    3b6c:	8c000115 	stw	r16,4(r17)
    3b70:	003fea06 	br	3b1c <__call_exitprocs+0x100>
    3b74:	2105883a 	add	r2,r4,r4
    3b78:	1485883a 	add	r2,r2,r18
    3b7c:	11000017 	ldw	r4,0(r2)
    3b80:	303ee83a 	callr	r6
    3b84:	003ff406 	br	3b58 <__call_exitprocs+0x13c>
    3b88:	303ee83a 	callr	r6
    3b8c:	003ff206 	br	3b58 <__call_exitprocs+0x13c>
    3b90:	88800117 	ldw	r2,4(r17)
    3b94:	1000081e 	bne	r2,zero,3bb8 <__call_exitprocs+0x19c>
    3b98:	89000017 	ldw	r4,0(r17)
    3b9c:	20000726 	beq	r4,zero,3bbc <__call_exitprocs+0x1a0>
    3ba0:	b9000015 	stw	r4,0(r23)
    3ba4:	8809883a 	mov	r4,r17
    3ba8:	00000000 	call	0 <__reset>
    3bac:	bc400017 	ldw	r17,0(r23)
    3bb0:	883fb71e 	bne	r17,zero,3a90 <__call_exitprocs+0x74>
    3bb4:	003fc506 	br	3acc <__call_exitprocs+0xb0>
    3bb8:	89000017 	ldw	r4,0(r17)
    3bbc:	882f883a 	mov	r23,r17
    3bc0:	2023883a 	mov	r17,r4
    3bc4:	883fb21e 	bne	r17,zero,3a90 <__call_exitprocs+0x74>
    3bc8:	003fc006 	br	3acc <__call_exitprocs+0xb0>

00003bcc <_fflush_r>:
    3bcc:	defffb04 	addi	sp,sp,-20
    3bd0:	dcc00315 	stw	r19,12(sp)
    3bd4:	dc800215 	stw	r18,8(sp)
    3bd8:	dfc00415 	stw	ra,16(sp)
    3bdc:	dc400115 	stw	r17,4(sp)
    3be0:	dc000015 	stw	r16,0(sp)
    3be4:	2027883a 	mov	r19,r4
    3be8:	2825883a 	mov	r18,r5
    3bec:	20000226 	beq	r4,zero,3bf8 <_fflush_r+0x2c>
    3bf0:	20800e17 	ldw	r2,56(r4)
    3bf4:	10005626 	beq	r2,zero,3d50 <_fflush_r+0x184>
    3bf8:	9100030b 	ldhu	r4,12(r18)
    3bfc:	20ffffcc 	andi	r3,r4,65535
    3c00:	18e0001c 	xori	r3,r3,32768
    3c04:	18e00004 	addi	r3,r3,-32768
    3c08:	1880020c 	andi	r2,r3,8
    3c0c:	1000261e 	bne	r2,zero,3ca8 <_fflush_r+0xdc>
    3c10:	90c00117 	ldw	r3,4(r18)
    3c14:	20820014 	ori	r2,r4,2048
    3c18:	9080030d 	sth	r2,12(r18)
    3c1c:	1009883a 	mov	r4,r2
    3c20:	00c0400e 	bge	zero,r3,3d24 <_fflush_r+0x158>
    3c24:	92000a17 	ldw	r8,40(r18)
    3c28:	40004026 	beq	r8,zero,3d2c <_fflush_r+0x160>
    3c2c:	2084000c 	andi	r2,r4,4096
    3c30:	10005326 	beq	r2,zero,3d80 <_fflush_r+0x1b4>
    3c34:	94001417 	ldw	r16,80(r18)
    3c38:	9080030b 	ldhu	r2,12(r18)
    3c3c:	1080010c 	andi	r2,r2,4
    3c40:	1000481e 	bne	r2,zero,3d64 <_fflush_r+0x198>
    3c44:	91400717 	ldw	r5,28(r18)
    3c48:	9809883a 	mov	r4,r19
    3c4c:	800d883a 	mov	r6,r16
    3c50:	000f883a 	mov	r7,zero
    3c54:	403ee83a 	callr	r8
    3c58:	8080261e 	bne	r16,r2,3cf4 <_fflush_r+0x128>
    3c5c:	9080030b 	ldhu	r2,12(r18)
    3c60:	91000417 	ldw	r4,16(r18)
    3c64:	90000115 	stw	zero,4(r18)
    3c68:	10bdffcc 	andi	r2,r2,63487
    3c6c:	10ffffcc 	andi	r3,r2,65535
    3c70:	18c4000c 	andi	r3,r3,4096
    3c74:	9080030d 	sth	r2,12(r18)
    3c78:	91000015 	stw	r4,0(r18)
    3c7c:	18002b26 	beq	r3,zero,3d2c <_fflush_r+0x160>
    3c80:	0007883a 	mov	r3,zero
    3c84:	1805883a 	mov	r2,r3
    3c88:	94001415 	stw	r16,80(r18)
    3c8c:	dfc00417 	ldw	ra,16(sp)
    3c90:	dcc00317 	ldw	r19,12(sp)
    3c94:	dc800217 	ldw	r18,8(sp)
    3c98:	dc400117 	ldw	r17,4(sp)
    3c9c:	dc000017 	ldw	r16,0(sp)
    3ca0:	dec00504 	addi	sp,sp,20
    3ca4:	f800283a 	ret
    3ca8:	94400417 	ldw	r17,16(r18)
    3cac:	88001f26 	beq	r17,zero,3d2c <_fflush_r+0x160>
    3cb0:	90800017 	ldw	r2,0(r18)
    3cb4:	18c000cc 	andi	r3,r3,3
    3cb8:	94400015 	stw	r17,0(r18)
    3cbc:	1461c83a 	sub	r16,r2,r17
    3cc0:	18002526 	beq	r3,zero,3d58 <_fflush_r+0x18c>
    3cc4:	0005883a 	mov	r2,zero
    3cc8:	90800215 	stw	r2,8(r18)
    3ccc:	0400170e 	bge	zero,r16,3d2c <_fflush_r+0x160>
    3cd0:	90c00917 	ldw	r3,36(r18)
    3cd4:	91400717 	ldw	r5,28(r18)
    3cd8:	880d883a 	mov	r6,r17
    3cdc:	800f883a 	mov	r7,r16
    3ce0:	9809883a 	mov	r4,r19
    3ce4:	183ee83a 	callr	r3
    3ce8:	88a3883a 	add	r17,r17,r2
    3cec:	80a1c83a 	sub	r16,r16,r2
    3cf0:	00bff616 	blt	zero,r2,3ccc <_fflush_r+0x100>
    3cf4:	9080030b 	ldhu	r2,12(r18)
    3cf8:	00ffffc4 	movi	r3,-1
    3cfc:	10801014 	ori	r2,r2,64
    3d00:	9080030d 	sth	r2,12(r18)
    3d04:	1805883a 	mov	r2,r3
    3d08:	dfc00417 	ldw	ra,16(sp)
    3d0c:	dcc00317 	ldw	r19,12(sp)
    3d10:	dc800217 	ldw	r18,8(sp)
    3d14:	dc400117 	ldw	r17,4(sp)
    3d18:	dc000017 	ldw	r16,0(sp)
    3d1c:	dec00504 	addi	sp,sp,20
    3d20:	f800283a 	ret
    3d24:	90800f17 	ldw	r2,60(r18)
    3d28:	00bfbe16 	blt	zero,r2,3c24 <_fflush_r+0x58>
    3d2c:	0007883a 	mov	r3,zero
    3d30:	1805883a 	mov	r2,r3
    3d34:	dfc00417 	ldw	ra,16(sp)
    3d38:	dcc00317 	ldw	r19,12(sp)
    3d3c:	dc800217 	ldw	r18,8(sp)
    3d40:	dc400117 	ldw	r17,4(sp)
    3d44:	dc000017 	ldw	r16,0(sp)
    3d48:	dec00504 	addi	sp,sp,20
    3d4c:	f800283a 	ret
    3d50:	0003e640 	call	3e64 <__sinit>
    3d54:	003fa806 	br	3bf8 <_fflush_r+0x2c>
    3d58:	90800517 	ldw	r2,20(r18)
    3d5c:	90800215 	stw	r2,8(r18)
    3d60:	003fda06 	br	3ccc <_fflush_r+0x100>
    3d64:	90800117 	ldw	r2,4(r18)
    3d68:	90c00c17 	ldw	r3,48(r18)
    3d6c:	80a1c83a 	sub	r16,r16,r2
    3d70:	183fb426 	beq	r3,zero,3c44 <_fflush_r+0x78>
    3d74:	90800f17 	ldw	r2,60(r18)
    3d78:	80a1c83a 	sub	r16,r16,r2
    3d7c:	003fb106 	br	3c44 <_fflush_r+0x78>
    3d80:	91400717 	ldw	r5,28(r18)
    3d84:	9809883a 	mov	r4,r19
    3d88:	000d883a 	mov	r6,zero
    3d8c:	01c00044 	movi	r7,1
    3d90:	403ee83a 	callr	r8
    3d94:	1021883a 	mov	r16,r2
    3d98:	00bfffc4 	movi	r2,-1
    3d9c:	80800226 	beq	r16,r2,3da8 <_fflush_r+0x1dc>
    3da0:	92000a17 	ldw	r8,40(r18)
    3da4:	003fa406 	br	3c38 <_fflush_r+0x6c>
    3da8:	98c00017 	ldw	r3,0(r19)
    3dac:	00800744 	movi	r2,29
    3db0:	18bfde26 	beq	r3,r2,3d2c <_fflush_r+0x160>
    3db4:	9080030b 	ldhu	r2,12(r18)
    3db8:	8007883a 	mov	r3,r16
    3dbc:	10801014 	ori	r2,r2,64
    3dc0:	9080030d 	sth	r2,12(r18)
    3dc4:	003fcf06 	br	3d04 <_fflush_r+0x138>

00003dc8 <fflush>:
    3dc8:	01400034 	movhi	r5,0
    3dcc:	294ef304 	addi	r5,r5,15308
    3dd0:	2007883a 	mov	r3,r4
    3dd4:	20000526 	beq	r4,zero,3dec <fflush+0x24>
    3dd8:	00800034 	movhi	r2,0
    3ddc:	109ec004 	addi	r2,r2,31488
    3de0:	11000017 	ldw	r4,0(r2)
    3de4:	180b883a 	mov	r5,r3
    3de8:	0003bcc1 	jmpi	3bcc <_fflush_r>
    3dec:	00800034 	movhi	r2,0
    3df0:	109ec104 	addi	r2,r2,31492
    3df4:	11000017 	ldw	r4,0(r2)
    3df8:	00044fc1 	jmpi	44fc <_fwalk_reent>

00003dfc <std>:
    3dfc:	00800034 	movhi	r2,0
    3e00:	10941604 	addi	r2,r2,20568
    3e04:	20800b15 	stw	r2,44(r4)
    3e08:	00800034 	movhi	r2,0
    3e0c:	10945104 	addi	r2,r2,20804
    3e10:	20800815 	stw	r2,32(r4)
    3e14:	00c00034 	movhi	r3,0
    3e18:	18d43204 	addi	r3,r3,20680
    3e1c:	00800034 	movhi	r2,0
    3e20:	10941804 	addi	r2,r2,20576
    3e24:	2140030d 	sth	r5,12(r4)
    3e28:	2180038d 	sth	r6,14(r4)
    3e2c:	20c00915 	stw	r3,36(r4)
    3e30:	20800a15 	stw	r2,40(r4)
    3e34:	20000015 	stw	zero,0(r4)
    3e38:	20000115 	stw	zero,4(r4)
    3e3c:	20000215 	stw	zero,8(r4)
    3e40:	20000415 	stw	zero,16(r4)
    3e44:	20000515 	stw	zero,20(r4)
    3e48:	20000615 	stw	zero,24(r4)
    3e4c:	21000715 	stw	r4,28(r4)
    3e50:	f800283a 	ret

00003e54 <__sfp_lock_acquire>:
    3e54:	f800283a 	ret

00003e58 <__sfp_lock_release>:
    3e58:	f800283a 	ret

00003e5c <__sinit_lock_acquire>:
    3e5c:	f800283a 	ret

00003e60 <__sinit_lock_release>:
    3e60:	f800283a 	ret

00003e64 <__sinit>:
    3e64:	20800e17 	ldw	r2,56(r4)
    3e68:	defffd04 	addi	sp,sp,-12
    3e6c:	dc400115 	stw	r17,4(sp)
    3e70:	dc000015 	stw	r16,0(sp)
    3e74:	dfc00215 	stw	ra,8(sp)
    3e78:	04400044 	movi	r17,1
    3e7c:	01400104 	movi	r5,4
    3e80:	000d883a 	mov	r6,zero
    3e84:	2021883a 	mov	r16,r4
    3e88:	2200bb04 	addi	r8,r4,748
    3e8c:	200f883a 	mov	r7,r4
    3e90:	10000526 	beq	r2,zero,3ea8 <__sinit+0x44>
    3e94:	dfc00217 	ldw	ra,8(sp)
    3e98:	dc400117 	ldw	r17,4(sp)
    3e9c:	dc000017 	ldw	r16,0(sp)
    3ea0:	dec00304 	addi	sp,sp,12
    3ea4:	f800283a 	ret
    3ea8:	21000117 	ldw	r4,4(r4)
    3eac:	00800034 	movhi	r2,0
    3eb0:	108fd204 	addi	r2,r2,16200
    3eb4:	00c000c4 	movi	r3,3
    3eb8:	80800f15 	stw	r2,60(r16)
    3ebc:	80c0b915 	stw	r3,740(r16)
    3ec0:	8200ba15 	stw	r8,744(r16)
    3ec4:	84400e15 	stw	r17,56(r16)
    3ec8:	8000b815 	stw	zero,736(r16)
    3ecc:	0003dfc0 	call	3dfc <std>
    3ed0:	81000217 	ldw	r4,8(r16)
    3ed4:	880d883a 	mov	r6,r17
    3ed8:	800f883a 	mov	r7,r16
    3edc:	01400284 	movi	r5,10
    3ee0:	0003dfc0 	call	3dfc <std>
    3ee4:	81000317 	ldw	r4,12(r16)
    3ee8:	800f883a 	mov	r7,r16
    3eec:	01400484 	movi	r5,18
    3ef0:	01800084 	movi	r6,2
    3ef4:	dfc00217 	ldw	ra,8(sp)
    3ef8:	dc400117 	ldw	r17,4(sp)
    3efc:	dc000017 	ldw	r16,0(sp)
    3f00:	dec00304 	addi	sp,sp,12
    3f04:	0003dfc1 	jmpi	3dfc <std>

00003f08 <__fp_lock>:
    3f08:	0005883a 	mov	r2,zero
    3f0c:	f800283a 	ret

00003f10 <__fp_unlock>:
    3f10:	0005883a 	mov	r2,zero
    3f14:	f800283a 	ret

00003f18 <__fp_unlock_all>:
    3f18:	00800034 	movhi	r2,0
    3f1c:	109ec004 	addi	r2,r2,31488
    3f20:	11000017 	ldw	r4,0(r2)
    3f24:	01400034 	movhi	r5,0
    3f28:	294fc404 	addi	r5,r5,16144
    3f2c:	00045c41 	jmpi	45c4 <_fwalk>

00003f30 <__fp_lock_all>:
    3f30:	00800034 	movhi	r2,0
    3f34:	109ec004 	addi	r2,r2,31488
    3f38:	11000017 	ldw	r4,0(r2)
    3f3c:	01400034 	movhi	r5,0
    3f40:	294fc204 	addi	r5,r5,16136
    3f44:	00045c41 	jmpi	45c4 <_fwalk>

00003f48 <_cleanup_r>:
    3f48:	01400034 	movhi	r5,0
    3f4c:	2954e704 	addi	r5,r5,21404
    3f50:	00045c41 	jmpi	45c4 <_fwalk>

00003f54 <_cleanup>:
    3f54:	00800034 	movhi	r2,0
    3f58:	109ec104 	addi	r2,r2,31492
    3f5c:	11000017 	ldw	r4,0(r2)
    3f60:	0003f481 	jmpi	3f48 <_cleanup_r>

00003f64 <__sfmoreglue>:
    3f64:	defffc04 	addi	sp,sp,-16
    3f68:	dc400115 	stw	r17,4(sp)
    3f6c:	2c401724 	muli	r17,r5,92
    3f70:	dc800215 	stw	r18,8(sp)
    3f74:	2825883a 	mov	r18,r5
    3f78:	89400304 	addi	r5,r17,12
    3f7c:	dc000015 	stw	r16,0(sp)
    3f80:	dfc00315 	stw	ra,12(sp)
    3f84:	00048100 	call	4810 <_malloc_r>
    3f88:	0021883a 	mov	r16,zero
    3f8c:	880d883a 	mov	r6,r17
    3f90:	000b883a 	mov	r5,zero
    3f94:	10000626 	beq	r2,zero,3fb0 <__sfmoreglue+0x4c>
    3f98:	11000304 	addi	r4,r2,12
    3f9c:	14800115 	stw	r18,4(r2)
    3fa0:	10000015 	stw	zero,0(r2)
    3fa4:	11000215 	stw	r4,8(r2)
    3fa8:	1021883a 	mov	r16,r2
    3fac:	0004f500 	call	4f50 <memset>
    3fb0:	8005883a 	mov	r2,r16
    3fb4:	dfc00317 	ldw	ra,12(sp)
    3fb8:	dc800217 	ldw	r18,8(sp)
    3fbc:	dc400117 	ldw	r17,4(sp)
    3fc0:	dc000017 	ldw	r16,0(sp)
    3fc4:	dec00404 	addi	sp,sp,16
    3fc8:	f800283a 	ret

00003fcc <__sfp>:
    3fcc:	defffd04 	addi	sp,sp,-12
    3fd0:	00800034 	movhi	r2,0
    3fd4:	109ec104 	addi	r2,r2,31492
    3fd8:	dc000015 	stw	r16,0(sp)
    3fdc:	14000017 	ldw	r16,0(r2)
    3fe0:	dc400115 	stw	r17,4(sp)
    3fe4:	dfc00215 	stw	ra,8(sp)
    3fe8:	80800e17 	ldw	r2,56(r16)
    3fec:	2023883a 	mov	r17,r4
    3ff0:	10002626 	beq	r2,zero,408c <__sfp+0xc0>
    3ff4:	8400b804 	addi	r16,r16,736
    3ff8:	80800117 	ldw	r2,4(r16)
    3ffc:	81000217 	ldw	r4,8(r16)
    4000:	10ffffc4 	addi	r3,r2,-1
    4004:	18000916 	blt	r3,zero,402c <__sfp+0x60>
    4008:	2080030f 	ldh	r2,12(r4)
    400c:	10000b26 	beq	r2,zero,403c <__sfp+0x70>
    4010:	017fffc4 	movi	r5,-1
    4014:	00000206 	br	4020 <__sfp+0x54>
    4018:	2080030f 	ldh	r2,12(r4)
    401c:	10000726 	beq	r2,zero,403c <__sfp+0x70>
    4020:	18ffffc4 	addi	r3,r3,-1
    4024:	21001704 	addi	r4,r4,92
    4028:	197ffb1e 	bne	r3,r5,4018 <__sfp+0x4c>
    402c:	80800017 	ldw	r2,0(r16)
    4030:	10001926 	beq	r2,zero,4098 <__sfp+0xcc>
    4034:	1021883a 	mov	r16,r2
    4038:	003fef06 	br	3ff8 <__sfp+0x2c>
    403c:	00bfffc4 	movi	r2,-1
    4040:	00c00044 	movi	r3,1
    4044:	2080038d 	sth	r2,14(r4)
    4048:	20c0030d 	sth	r3,12(r4)
    404c:	20000015 	stw	zero,0(r4)
    4050:	20000215 	stw	zero,8(r4)
    4054:	20000115 	stw	zero,4(r4)
    4058:	20000415 	stw	zero,16(r4)
    405c:	20000515 	stw	zero,20(r4)
    4060:	20000615 	stw	zero,24(r4)
    4064:	20000c15 	stw	zero,48(r4)
    4068:	20000d15 	stw	zero,52(r4)
    406c:	20001115 	stw	zero,68(r4)
    4070:	20001215 	stw	zero,72(r4)
    4074:	2005883a 	mov	r2,r4
    4078:	dfc00217 	ldw	ra,8(sp)
    407c:	dc400117 	ldw	r17,4(sp)
    4080:	dc000017 	ldw	r16,0(sp)
    4084:	dec00304 	addi	sp,sp,12
    4088:	f800283a 	ret
    408c:	8009883a 	mov	r4,r16
    4090:	0003e640 	call	3e64 <__sinit>
    4094:	003fd706 	br	3ff4 <__sfp+0x28>
    4098:	8809883a 	mov	r4,r17
    409c:	01400104 	movi	r5,4
    40a0:	0003f640 	call	3f64 <__sfmoreglue>
    40a4:	80800015 	stw	r2,0(r16)
    40a8:	103fe21e 	bne	r2,zero,4034 <__sfp+0x68>
    40ac:	00800304 	movi	r2,12
    40b0:	0009883a 	mov	r4,zero
    40b4:	88800015 	stw	r2,0(r17)
    40b8:	003fee06 	br	4074 <__sfp+0xa8>

000040bc <_malloc_trim_r>:
    40bc:	defffb04 	addi	sp,sp,-20
    40c0:	dcc00315 	stw	r19,12(sp)
    40c4:	04c00034 	movhi	r19,0
    40c8:	9cdd9c04 	addi	r19,r19,30320
    40cc:	dc800215 	stw	r18,8(sp)
    40d0:	dc400115 	stw	r17,4(sp)
    40d4:	dc000015 	stw	r16,0(sp)
    40d8:	2823883a 	mov	r17,r5
    40dc:	2025883a 	mov	r18,r4
    40e0:	dfc00415 	stw	ra,16(sp)
    40e4:	00057340 	call	5734 <__malloc_lock>
    40e8:	98800217 	ldw	r2,8(r19)
    40ec:	9009883a 	mov	r4,r18
    40f0:	000b883a 	mov	r5,zero
    40f4:	10c00117 	ldw	r3,4(r2)
    40f8:	00bfff04 	movi	r2,-4
    40fc:	18a0703a 	and	r16,r3,r2
    4100:	8463c83a 	sub	r17,r16,r17
    4104:	8c43fbc4 	addi	r17,r17,4079
    4108:	8822d33a 	srli	r17,r17,12
    410c:	0083ffc4 	movi	r2,4095
    4110:	8c7fffc4 	addi	r17,r17,-1
    4114:	8822933a 	slli	r17,r17,12
    4118:	1440060e 	bge	r2,r17,4134 <_malloc_trim_r+0x78>
    411c:	0004fe80 	call	4fe8 <_sbrk_r>
    4120:	98c00217 	ldw	r3,8(r19)
    4124:	9009883a 	mov	r4,r18
    4128:	044bc83a 	sub	r5,zero,r17
    412c:	80c7883a 	add	r3,r16,r3
    4130:	10c00926 	beq	r2,r3,4158 <_malloc_trim_r+0x9c>
    4134:	00057380 	call	5738 <__malloc_unlock>
    4138:	0005883a 	mov	r2,zero
    413c:	dfc00417 	ldw	ra,16(sp)
    4140:	dcc00317 	ldw	r19,12(sp)
    4144:	dc800217 	ldw	r18,8(sp)
    4148:	dc400117 	ldw	r17,4(sp)
    414c:	dc000017 	ldw	r16,0(sp)
    4150:	dec00504 	addi	sp,sp,20
    4154:	f800283a 	ret
    4158:	9009883a 	mov	r4,r18
    415c:	0004fe80 	call	4fe8 <_sbrk_r>
    4160:	844dc83a 	sub	r6,r16,r17
    4164:	00ffffc4 	movi	r3,-1
    4168:	9009883a 	mov	r4,r18
    416c:	000b883a 	mov	r5,zero
    4170:	01c00074 	movhi	r7,1
    4174:	39e68e04 	addi	r7,r7,-26056
    4178:	31800054 	ori	r6,r6,1
    417c:	10c00926 	beq	r2,r3,41a4 <_malloc_trim_r+0xe8>
    4180:	38800017 	ldw	r2,0(r7)
    4184:	98c00217 	ldw	r3,8(r19)
    4188:	9009883a 	mov	r4,r18
    418c:	1445c83a 	sub	r2,r2,r17
    4190:	38800015 	stw	r2,0(r7)
    4194:	19800115 	stw	r6,4(r3)
    4198:	00057380 	call	5738 <__malloc_unlock>
    419c:	00800044 	movi	r2,1
    41a0:	003fe606 	br	413c <_malloc_trim_r+0x80>
    41a4:	0004fe80 	call	4fe8 <_sbrk_r>
    41a8:	99800217 	ldw	r6,8(r19)
    41ac:	100f883a 	mov	r7,r2
    41b0:	9009883a 	mov	r4,r18
    41b4:	1187c83a 	sub	r3,r2,r6
    41b8:	008003c4 	movi	r2,15
    41bc:	19400054 	ori	r5,r3,1
    41c0:	10ffdc0e 	bge	r2,r3,4134 <_malloc_trim_r+0x78>
    41c4:	00800034 	movhi	r2,0
    41c8:	109ec304 	addi	r2,r2,31500
    41cc:	10c00017 	ldw	r3,0(r2)
    41d0:	00800074 	movhi	r2,1
    41d4:	10a68e04 	addi	r2,r2,-26056
    41d8:	31400115 	stw	r5,4(r6)
    41dc:	38c7c83a 	sub	r3,r7,r3
    41e0:	10c00015 	stw	r3,0(r2)
    41e4:	003fd306 	br	4134 <_malloc_trim_r+0x78>

000041e8 <_free_r>:
    41e8:	defffd04 	addi	sp,sp,-12
    41ec:	dc400115 	stw	r17,4(sp)
    41f0:	dc000015 	stw	r16,0(sp)
    41f4:	dfc00215 	stw	ra,8(sp)
    41f8:	2821883a 	mov	r16,r5
    41fc:	2023883a 	mov	r17,r4
    4200:	28005a26 	beq	r5,zero,436c <_free_r+0x184>
    4204:	00057340 	call	5734 <__malloc_lock>
    4208:	823ffe04 	addi	r8,r16,-8
    420c:	41400117 	ldw	r5,4(r8)
    4210:	00bfff84 	movi	r2,-2
    4214:	02800034 	movhi	r10,0
    4218:	529d9c04 	addi	r10,r10,30320
    421c:	288e703a 	and	r7,r5,r2
    4220:	41cd883a 	add	r6,r8,r7
    4224:	30c00117 	ldw	r3,4(r6)
    4228:	51000217 	ldw	r4,8(r10)
    422c:	00bfff04 	movi	r2,-4
    4230:	1892703a 	and	r9,r3,r2
    4234:	5017883a 	mov	r11,r10
    4238:	31006726 	beq	r6,r4,43d8 <_free_r+0x1f0>
    423c:	2880004c 	andi	r2,r5,1
    4240:	1005003a 	cmpeq	r2,r2,zero
    4244:	32400115 	stw	r9,4(r6)
    4248:	10001a1e 	bne	r2,zero,42b4 <_free_r+0xcc>
    424c:	000b883a 	mov	r5,zero
    4250:	3247883a 	add	r3,r6,r9
    4254:	18800117 	ldw	r2,4(r3)
    4258:	1080004c 	andi	r2,r2,1
    425c:	1000231e 	bne	r2,zero,42ec <_free_r+0x104>
    4260:	280ac03a 	cmpne	r5,r5,zero
    4264:	3a4f883a 	add	r7,r7,r9
    4268:	2800451e 	bne	r5,zero,4380 <_free_r+0x198>
    426c:	31000217 	ldw	r4,8(r6)
    4270:	00800034 	movhi	r2,0
    4274:	109d9e04 	addi	r2,r2,30328
    4278:	20807b26 	beq	r4,r2,4468 <_free_r+0x280>
    427c:	30800317 	ldw	r2,12(r6)
    4280:	3a07883a 	add	r3,r7,r8
    4284:	19c00015 	stw	r7,0(r3)
    4288:	11000215 	stw	r4,8(r2)
    428c:	20800315 	stw	r2,12(r4)
    4290:	38800054 	ori	r2,r7,1
    4294:	40800115 	stw	r2,4(r8)
    4298:	28001a26 	beq	r5,zero,4304 <_free_r+0x11c>
    429c:	8809883a 	mov	r4,r17
    42a0:	dfc00217 	ldw	ra,8(sp)
    42a4:	dc400117 	ldw	r17,4(sp)
    42a8:	dc000017 	ldw	r16,0(sp)
    42ac:	dec00304 	addi	sp,sp,12
    42b0:	00057381 	jmpi	5738 <__malloc_unlock>
    42b4:	80bffe17 	ldw	r2,-8(r16)
    42b8:	50c00204 	addi	r3,r10,8
    42bc:	4091c83a 	sub	r8,r8,r2
    42c0:	41000217 	ldw	r4,8(r8)
    42c4:	388f883a 	add	r7,r7,r2
    42c8:	20c06126 	beq	r4,r3,4450 <_free_r+0x268>
    42cc:	40800317 	ldw	r2,12(r8)
    42d0:	3247883a 	add	r3,r6,r9
    42d4:	000b883a 	mov	r5,zero
    42d8:	11000215 	stw	r4,8(r2)
    42dc:	20800315 	stw	r2,12(r4)
    42e0:	18800117 	ldw	r2,4(r3)
    42e4:	1080004c 	andi	r2,r2,1
    42e8:	103fdd26 	beq	r2,zero,4260 <_free_r+0x78>
    42ec:	38800054 	ori	r2,r7,1
    42f0:	3a07883a 	add	r3,r7,r8
    42f4:	280ac03a 	cmpne	r5,r5,zero
    42f8:	40800115 	stw	r2,4(r8)
    42fc:	19c00015 	stw	r7,0(r3)
    4300:	283fe61e 	bne	r5,zero,429c <_free_r+0xb4>
    4304:	00807fc4 	movi	r2,511
    4308:	11c01f2e 	bgeu	r2,r7,4388 <_free_r+0x1a0>
    430c:	3806d27a 	srli	r3,r7,9
    4310:	1800481e 	bne	r3,zero,4434 <_free_r+0x24c>
    4314:	3804d0fa 	srli	r2,r7,3
    4318:	100690fa 	slli	r3,r2,3
    431c:	1acd883a 	add	r6,r3,r11
    4320:	31400217 	ldw	r5,8(r6)
    4324:	31405926 	beq	r6,r5,448c <_free_r+0x2a4>
    4328:	28800117 	ldw	r2,4(r5)
    432c:	00ffff04 	movi	r3,-4
    4330:	10c4703a 	and	r2,r2,r3
    4334:	3880022e 	bgeu	r7,r2,4340 <_free_r+0x158>
    4338:	29400217 	ldw	r5,8(r5)
    433c:	317ffa1e 	bne	r6,r5,4328 <_free_r+0x140>
    4340:	29800317 	ldw	r6,12(r5)
    4344:	41800315 	stw	r6,12(r8)
    4348:	41400215 	stw	r5,8(r8)
    434c:	8809883a 	mov	r4,r17
    4350:	2a000315 	stw	r8,12(r5)
    4354:	32000215 	stw	r8,8(r6)
    4358:	dfc00217 	ldw	ra,8(sp)
    435c:	dc400117 	ldw	r17,4(sp)
    4360:	dc000017 	ldw	r16,0(sp)
    4364:	dec00304 	addi	sp,sp,12
    4368:	00057381 	jmpi	5738 <__malloc_unlock>
    436c:	dfc00217 	ldw	ra,8(sp)
    4370:	dc400117 	ldw	r17,4(sp)
    4374:	dc000017 	ldw	r16,0(sp)
    4378:	dec00304 	addi	sp,sp,12
    437c:	f800283a 	ret
    4380:	31000217 	ldw	r4,8(r6)
    4384:	003fbd06 	br	427c <_free_r+0x94>
    4388:	3806d0fa 	srli	r3,r7,3
    438c:	00800044 	movi	r2,1
    4390:	51400117 	ldw	r5,4(r10)
    4394:	180890fa 	slli	r4,r3,3
    4398:	1807d0ba 	srai	r3,r3,2
    439c:	22c9883a 	add	r4,r4,r11
    43a0:	21800217 	ldw	r6,8(r4)
    43a4:	10c4983a 	sll	r2,r2,r3
    43a8:	41000315 	stw	r4,12(r8)
    43ac:	41800215 	stw	r6,8(r8)
    43b0:	288ab03a 	or	r5,r5,r2
    43b4:	22000215 	stw	r8,8(r4)
    43b8:	8809883a 	mov	r4,r17
    43bc:	51400115 	stw	r5,4(r10)
    43c0:	32000315 	stw	r8,12(r6)
    43c4:	dfc00217 	ldw	ra,8(sp)
    43c8:	dc400117 	ldw	r17,4(sp)
    43cc:	dc000017 	ldw	r16,0(sp)
    43d0:	dec00304 	addi	sp,sp,12
    43d4:	00057381 	jmpi	5738 <__malloc_unlock>
    43d8:	2880004c 	andi	r2,r5,1
    43dc:	3a4d883a 	add	r6,r7,r9
    43e0:	1000071e 	bne	r2,zero,4400 <_free_r+0x218>
    43e4:	80bffe17 	ldw	r2,-8(r16)
    43e8:	4091c83a 	sub	r8,r8,r2
    43ec:	41000317 	ldw	r4,12(r8)
    43f0:	40c00217 	ldw	r3,8(r8)
    43f4:	308d883a 	add	r6,r6,r2
    43f8:	20c00215 	stw	r3,8(r4)
    43fc:	19000315 	stw	r4,12(r3)
    4400:	00800034 	movhi	r2,0
    4404:	109ec204 	addi	r2,r2,31496
    4408:	11000017 	ldw	r4,0(r2)
    440c:	30c00054 	ori	r3,r6,1
    4410:	52000215 	stw	r8,8(r10)
    4414:	40c00115 	stw	r3,4(r8)
    4418:	313fa036 	bltu	r6,r4,429c <_free_r+0xb4>
    441c:	00800074 	movhi	r2,1
    4420:	10a68b04 	addi	r2,r2,-26068
    4424:	11400017 	ldw	r5,0(r2)
    4428:	8809883a 	mov	r4,r17
    442c:	00040bc0 	call	40bc <_malloc_trim_r>
    4430:	003f9a06 	br	429c <_free_r+0xb4>
    4434:	00800104 	movi	r2,4
    4438:	10c0072e 	bgeu	r2,r3,4458 <_free_r+0x270>
    443c:	00800504 	movi	r2,20
    4440:	10c01936 	bltu	r2,r3,44a8 <_free_r+0x2c0>
    4444:	188016c4 	addi	r2,r3,91
    4448:	100690fa 	slli	r3,r2,3
    444c:	003fb306 	br	431c <_free_r+0x134>
    4450:	01400044 	movi	r5,1
    4454:	003f7e06 	br	4250 <_free_r+0x68>
    4458:	3804d1ba 	srli	r2,r7,6
    445c:	10800e04 	addi	r2,r2,56
    4460:	100690fa 	slli	r3,r2,3
    4464:	003fad06 	br	431c <_free_r+0x134>
    4468:	22000315 	stw	r8,12(r4)
    446c:	22000215 	stw	r8,8(r4)
    4470:	3a05883a 	add	r2,r7,r8
    4474:	38c00054 	ori	r3,r7,1
    4478:	11c00015 	stw	r7,0(r2)
    447c:	41000215 	stw	r4,8(r8)
    4480:	40c00115 	stw	r3,4(r8)
    4484:	41000315 	stw	r4,12(r8)
    4488:	003f8406 	br	429c <_free_r+0xb4>
    448c:	1005d0ba 	srai	r2,r2,2
    4490:	00c00044 	movi	r3,1
    4494:	51000117 	ldw	r4,4(r10)
    4498:	1886983a 	sll	r3,r3,r2
    449c:	20c8b03a 	or	r4,r4,r3
    44a0:	51000115 	stw	r4,4(r10)
    44a4:	003fa706 	br	4344 <_free_r+0x15c>
    44a8:	00801504 	movi	r2,84
    44ac:	10c00436 	bltu	r2,r3,44c0 <_free_r+0x2d8>
    44b0:	3804d33a 	srli	r2,r7,12
    44b4:	10801b84 	addi	r2,r2,110
    44b8:	100690fa 	slli	r3,r2,3
    44bc:	003f9706 	br	431c <_free_r+0x134>
    44c0:	00805504 	movi	r2,340
    44c4:	10c00436 	bltu	r2,r3,44d8 <_free_r+0x2f0>
    44c8:	3804d3fa 	srli	r2,r7,15
    44cc:	10801dc4 	addi	r2,r2,119
    44d0:	100690fa 	slli	r3,r2,3
    44d4:	003f9106 	br	431c <_free_r+0x134>
    44d8:	00815504 	movi	r2,1364
    44dc:	10c0032e 	bgeu	r2,r3,44ec <_free_r+0x304>
    44e0:	00801f84 	movi	r2,126
    44e4:	00c0fc04 	movi	r3,1008
    44e8:	003f8c06 	br	431c <_free_r+0x134>
    44ec:	3804d4ba 	srli	r2,r7,18
    44f0:	10801f04 	addi	r2,r2,124
    44f4:	100690fa 	slli	r3,r2,3
    44f8:	003f8806 	br	431c <_free_r+0x134>

000044fc <_fwalk_reent>:
    44fc:	defff704 	addi	sp,sp,-36
    4500:	dcc00315 	stw	r19,12(sp)
    4504:	24c0b804 	addi	r19,r4,736
    4508:	dd800615 	stw	r22,24(sp)
    450c:	dd400515 	stw	r21,20(sp)
    4510:	dfc00815 	stw	ra,32(sp)
    4514:	ddc00715 	stw	r23,28(sp)
    4518:	dd000415 	stw	r20,16(sp)
    451c:	dc800215 	stw	r18,8(sp)
    4520:	dc400115 	stw	r17,4(sp)
    4524:	dc000015 	stw	r16,0(sp)
    4528:	202b883a 	mov	r21,r4
    452c:	282d883a 	mov	r22,r5
    4530:	0003e540 	call	3e54 <__sfp_lock_acquire>
    4534:	98002126 	beq	r19,zero,45bc <_fwalk_reent+0xc0>
    4538:	002f883a 	mov	r23,zero
    453c:	9c800117 	ldw	r18,4(r19)
    4540:	9c000217 	ldw	r16,8(r19)
    4544:	90bfffc4 	addi	r2,r18,-1
    4548:	10000d16 	blt	r2,zero,4580 <_fwalk_reent+0x84>
    454c:	0023883a 	mov	r17,zero
    4550:	053fffc4 	movi	r20,-1
    4554:	8080030f 	ldh	r2,12(r16)
    4558:	8c400044 	addi	r17,r17,1
    455c:	10000626 	beq	r2,zero,4578 <_fwalk_reent+0x7c>
    4560:	8080038f 	ldh	r2,14(r16)
    4564:	800b883a 	mov	r5,r16
    4568:	a809883a 	mov	r4,r21
    456c:	15000226 	beq	r2,r20,4578 <_fwalk_reent+0x7c>
    4570:	b03ee83a 	callr	r22
    4574:	b8aeb03a 	or	r23,r23,r2
    4578:	84001704 	addi	r16,r16,92
    457c:	947ff51e 	bne	r18,r17,4554 <_fwalk_reent+0x58>
    4580:	9cc00017 	ldw	r19,0(r19)
    4584:	983fed1e 	bne	r19,zero,453c <_fwalk_reent+0x40>
    4588:	0003e580 	call	3e58 <__sfp_lock_release>
    458c:	b805883a 	mov	r2,r23
    4590:	dfc00817 	ldw	ra,32(sp)
    4594:	ddc00717 	ldw	r23,28(sp)
    4598:	dd800617 	ldw	r22,24(sp)
    459c:	dd400517 	ldw	r21,20(sp)
    45a0:	dd000417 	ldw	r20,16(sp)
    45a4:	dcc00317 	ldw	r19,12(sp)
    45a8:	dc800217 	ldw	r18,8(sp)
    45ac:	dc400117 	ldw	r17,4(sp)
    45b0:	dc000017 	ldw	r16,0(sp)
    45b4:	dec00904 	addi	sp,sp,36
    45b8:	f800283a 	ret
    45bc:	002f883a 	mov	r23,zero
    45c0:	003ff106 	br	4588 <_fwalk_reent+0x8c>

000045c4 <_fwalk>:
    45c4:	defff804 	addi	sp,sp,-32
    45c8:	dcc00315 	stw	r19,12(sp)
    45cc:	24c0b804 	addi	r19,r4,736
    45d0:	dd400515 	stw	r21,20(sp)
    45d4:	dfc00715 	stw	ra,28(sp)
    45d8:	dd800615 	stw	r22,24(sp)
    45dc:	dd000415 	stw	r20,16(sp)
    45e0:	dc800215 	stw	r18,8(sp)
    45e4:	dc400115 	stw	r17,4(sp)
    45e8:	dc000015 	stw	r16,0(sp)
    45ec:	282b883a 	mov	r21,r5
    45f0:	0003e540 	call	3e54 <__sfp_lock_acquire>
    45f4:	98001f26 	beq	r19,zero,4674 <_fwalk+0xb0>
    45f8:	002d883a 	mov	r22,zero
    45fc:	9c800117 	ldw	r18,4(r19)
    4600:	9c000217 	ldw	r16,8(r19)
    4604:	90bfffc4 	addi	r2,r18,-1
    4608:	10000c16 	blt	r2,zero,463c <_fwalk+0x78>
    460c:	0023883a 	mov	r17,zero
    4610:	053fffc4 	movi	r20,-1
    4614:	8080030f 	ldh	r2,12(r16)
    4618:	8c400044 	addi	r17,r17,1
    461c:	10000526 	beq	r2,zero,4634 <_fwalk+0x70>
    4620:	8080038f 	ldh	r2,14(r16)
    4624:	8009883a 	mov	r4,r16
    4628:	15000226 	beq	r2,r20,4634 <_fwalk+0x70>
    462c:	a83ee83a 	callr	r21
    4630:	b0acb03a 	or	r22,r22,r2
    4634:	84001704 	addi	r16,r16,92
    4638:	947ff61e 	bne	r18,r17,4614 <_fwalk+0x50>
    463c:	9cc00017 	ldw	r19,0(r19)
    4640:	983fee1e 	bne	r19,zero,45fc <_fwalk+0x38>
    4644:	0003e580 	call	3e58 <__sfp_lock_release>
    4648:	b005883a 	mov	r2,r22
    464c:	dfc00717 	ldw	ra,28(sp)
    4650:	dd800617 	ldw	r22,24(sp)
    4654:	dd400517 	ldw	r21,20(sp)
    4658:	dd000417 	ldw	r20,16(sp)
    465c:	dcc00317 	ldw	r19,12(sp)
    4660:	dc800217 	ldw	r18,8(sp)
    4664:	dc400117 	ldw	r17,4(sp)
    4668:	dc000017 	ldw	r16,0(sp)
    466c:	dec00804 	addi	sp,sp,32
    4670:	f800283a 	ret
    4674:	002d883a 	mov	r22,zero
    4678:	003ff206 	br	4644 <_fwalk+0x80>

0000467c <__smakebuf_r>:
    467c:	2880030b 	ldhu	r2,12(r5)
    4680:	deffed04 	addi	sp,sp,-76
    4684:	dc401015 	stw	r17,64(sp)
    4688:	1080008c 	andi	r2,r2,2
    468c:	dc000f15 	stw	r16,60(sp)
    4690:	dfc01215 	stw	ra,72(sp)
    4694:	dc801115 	stw	r18,68(sp)
    4698:	2821883a 	mov	r16,r5
    469c:	2023883a 	mov	r17,r4
    46a0:	10000b26 	beq	r2,zero,46d0 <__smakebuf_r+0x54>
    46a4:	28c010c4 	addi	r3,r5,67
    46a8:	00800044 	movi	r2,1
    46ac:	28800515 	stw	r2,20(r5)
    46b0:	28c00415 	stw	r3,16(r5)
    46b4:	28c00015 	stw	r3,0(r5)
    46b8:	dfc01217 	ldw	ra,72(sp)
    46bc:	dc801117 	ldw	r18,68(sp)
    46c0:	dc401017 	ldw	r17,64(sp)
    46c4:	dc000f17 	ldw	r16,60(sp)
    46c8:	dec01304 	addi	sp,sp,76
    46cc:	f800283a 	ret
    46d0:	2940038f 	ldh	r5,14(r5)
    46d4:	28002116 	blt	r5,zero,475c <__smakebuf_r+0xe0>
    46d8:	d80d883a 	mov	r6,sp
    46dc:	00053b00 	call	53b0 <_fstat_r>
    46e0:	10001e16 	blt	r2,zero,475c <__smakebuf_r+0xe0>
    46e4:	d8800117 	ldw	r2,4(sp)
    46e8:	00e00014 	movui	r3,32768
    46ec:	113c000c 	andi	r4,r2,61440
    46f0:	20c03126 	beq	r4,r3,47b8 <__smakebuf_r+0x13c>
    46f4:	8080030b 	ldhu	r2,12(r16)
    46f8:	00c80004 	movi	r3,8192
    46fc:	10820014 	ori	r2,r2,2048
    4700:	8080030d 	sth	r2,12(r16)
    4704:	20c01e26 	beq	r4,r3,4780 <__smakebuf_r+0x104>
    4708:	04810004 	movi	r18,1024
    470c:	8809883a 	mov	r4,r17
    4710:	900b883a 	mov	r5,r18
    4714:	00048100 	call	4810 <_malloc_r>
    4718:	1009883a 	mov	r4,r2
    471c:	10003126 	beq	r2,zero,47e4 <__smakebuf_r+0x168>
    4720:	80c0030b 	ldhu	r3,12(r16)
    4724:	00800034 	movhi	r2,0
    4728:	108fd204 	addi	r2,r2,16200
    472c:	88800f15 	stw	r2,60(r17)
    4730:	18c02014 	ori	r3,r3,128
    4734:	84800515 	stw	r18,20(r16)
    4738:	80c0030d 	sth	r3,12(r16)
    473c:	81000415 	stw	r4,16(r16)
    4740:	81000015 	stw	r4,0(r16)
    4744:	dfc01217 	ldw	ra,72(sp)
    4748:	dc801117 	ldw	r18,68(sp)
    474c:	dc401017 	ldw	r17,64(sp)
    4750:	dc000f17 	ldw	r16,60(sp)
    4754:	dec01304 	addi	sp,sp,76
    4758:	f800283a 	ret
    475c:	80c0030b 	ldhu	r3,12(r16)
    4760:	1880200c 	andi	r2,r3,128
    4764:	10000426 	beq	r2,zero,4778 <__smakebuf_r+0xfc>
    4768:	04801004 	movi	r18,64
    476c:	18820014 	ori	r2,r3,2048
    4770:	8080030d 	sth	r2,12(r16)
    4774:	003fe506 	br	470c <__smakebuf_r+0x90>
    4778:	04810004 	movi	r18,1024
    477c:	003ffb06 	br	476c <__smakebuf_r+0xf0>
    4780:	8140038f 	ldh	r5,14(r16)
    4784:	8809883a 	mov	r4,r17
    4788:	00054240 	call	5424 <_isatty_r>
    478c:	103fde26 	beq	r2,zero,4708 <__smakebuf_r+0x8c>
    4790:	8080030b 	ldhu	r2,12(r16)
    4794:	80c010c4 	addi	r3,r16,67
    4798:	04810004 	movi	r18,1024
    479c:	10800054 	ori	r2,r2,1
    47a0:	8080030d 	sth	r2,12(r16)
    47a4:	00800044 	movi	r2,1
    47a8:	80c00415 	stw	r3,16(r16)
    47ac:	80800515 	stw	r2,20(r16)
    47b0:	80c00015 	stw	r3,0(r16)
    47b4:	003fd506 	br	470c <__smakebuf_r+0x90>
    47b8:	80c00a17 	ldw	r3,40(r16)
    47bc:	00800034 	movhi	r2,0
    47c0:	10941804 	addi	r2,r2,20576
    47c4:	18bfcb1e 	bne	r3,r2,46f4 <__smakebuf_r+0x78>
    47c8:	8080030b 	ldhu	r2,12(r16)
    47cc:	00c10004 	movi	r3,1024
    47d0:	1825883a 	mov	r18,r3
    47d4:	10c4b03a 	or	r2,r2,r3
    47d8:	8080030d 	sth	r2,12(r16)
    47dc:	80c01315 	stw	r3,76(r16)
    47e0:	003fca06 	br	470c <__smakebuf_r+0x90>
    47e4:	8100030b 	ldhu	r4,12(r16)
    47e8:	2080800c 	andi	r2,r4,512
    47ec:	103fb21e 	bne	r2,zero,46b8 <__smakebuf_r+0x3c>
    47f0:	80c010c4 	addi	r3,r16,67
    47f4:	21000094 	ori	r4,r4,2
    47f8:	00800044 	movi	r2,1
    47fc:	80800515 	stw	r2,20(r16)
    4800:	8100030d 	sth	r4,12(r16)
    4804:	80c00415 	stw	r3,16(r16)
    4808:	80c00015 	stw	r3,0(r16)
    480c:	003faa06 	br	46b8 <__smakebuf_r+0x3c>

00004810 <_malloc_r>:
    4810:	defff604 	addi	sp,sp,-40
    4814:	28c002c4 	addi	r3,r5,11
    4818:	00800584 	movi	r2,22
    481c:	dc800215 	stw	r18,8(sp)
    4820:	dfc00915 	stw	ra,36(sp)
    4824:	df000815 	stw	fp,32(sp)
    4828:	ddc00715 	stw	r23,28(sp)
    482c:	dd800615 	stw	r22,24(sp)
    4830:	dd400515 	stw	r21,20(sp)
    4834:	dd000415 	stw	r20,16(sp)
    4838:	dcc00315 	stw	r19,12(sp)
    483c:	dc400115 	stw	r17,4(sp)
    4840:	dc000015 	stw	r16,0(sp)
    4844:	2025883a 	mov	r18,r4
    4848:	10c01236 	bltu	r2,r3,4894 <_malloc_r+0x84>
    484c:	04400404 	movi	r17,16
    4850:	8940142e 	bgeu	r17,r5,48a4 <_malloc_r+0x94>
    4854:	00800304 	movi	r2,12
    4858:	0007883a 	mov	r3,zero
    485c:	90800015 	stw	r2,0(r18)
    4860:	1805883a 	mov	r2,r3
    4864:	dfc00917 	ldw	ra,36(sp)
    4868:	df000817 	ldw	fp,32(sp)
    486c:	ddc00717 	ldw	r23,28(sp)
    4870:	dd800617 	ldw	r22,24(sp)
    4874:	dd400517 	ldw	r21,20(sp)
    4878:	dd000417 	ldw	r20,16(sp)
    487c:	dcc00317 	ldw	r19,12(sp)
    4880:	dc800217 	ldw	r18,8(sp)
    4884:	dc400117 	ldw	r17,4(sp)
    4888:	dc000017 	ldw	r16,0(sp)
    488c:	dec00a04 	addi	sp,sp,40
    4890:	f800283a 	ret
    4894:	00bffe04 	movi	r2,-8
    4898:	18a2703a 	and	r17,r3,r2
    489c:	883fed16 	blt	r17,zero,4854 <_malloc_r+0x44>
    48a0:	897fec36 	bltu	r17,r5,4854 <_malloc_r+0x44>
    48a4:	9009883a 	mov	r4,r18
    48a8:	00057340 	call	5734 <__malloc_lock>
    48ac:	00807dc4 	movi	r2,503
    48b0:	14402b2e 	bgeu	r2,r17,4960 <_malloc_r+0x150>
    48b4:	8806d27a 	srli	r3,r17,9
    48b8:	18003f1e 	bne	r3,zero,49b8 <_malloc_r+0x1a8>
    48bc:	880cd0fa 	srli	r6,r17,3
    48c0:	300490fa 	slli	r2,r6,3
    48c4:	02c00034 	movhi	r11,0
    48c8:	5add9c04 	addi	r11,r11,30320
    48cc:	12cb883a 	add	r5,r2,r11
    48d0:	2c000317 	ldw	r16,12(r5)
    48d4:	580f883a 	mov	r7,r11
    48d8:	2c00041e 	bne	r5,r16,48ec <_malloc_r+0xdc>
    48dc:	00000a06 	br	4908 <_malloc_r+0xf8>
    48e0:	1800860e 	bge	r3,zero,4afc <_malloc_r+0x2ec>
    48e4:	84000317 	ldw	r16,12(r16)
    48e8:	2c000726 	beq	r5,r16,4908 <_malloc_r+0xf8>
    48ec:	80800117 	ldw	r2,4(r16)
    48f0:	00ffff04 	movi	r3,-4
    48f4:	10c8703a 	and	r4,r2,r3
    48f8:	2447c83a 	sub	r3,r4,r17
    48fc:	008003c4 	movi	r2,15
    4900:	10fff70e 	bge	r2,r3,48e0 <_malloc_r+0xd0>
    4904:	31bfffc4 	addi	r6,r6,-1
    4908:	32400044 	addi	r9,r6,1
    490c:	02800034 	movhi	r10,0
    4910:	529d9e04 	addi	r10,r10,30328
    4914:	54000217 	ldw	r16,8(r10)
    4918:	8280a026 	beq	r16,r10,4b9c <_malloc_r+0x38c>
    491c:	80800117 	ldw	r2,4(r16)
    4920:	00ffff04 	movi	r3,-4
    4924:	10ca703a 	and	r5,r2,r3
    4928:	2c4dc83a 	sub	r6,r5,r17
    492c:	008003c4 	movi	r2,15
    4930:	11808316 	blt	r2,r6,4b40 <_malloc_r+0x330>
    4934:	52800315 	stw	r10,12(r10)
    4938:	52800215 	stw	r10,8(r10)
    493c:	30002916 	blt	r6,zero,49e4 <_malloc_r+0x1d4>
    4940:	8147883a 	add	r3,r16,r5
    4944:	18800117 	ldw	r2,4(r3)
    4948:	9009883a 	mov	r4,r18
    494c:	10800054 	ori	r2,r2,1
    4950:	18800115 	stw	r2,4(r3)
    4954:	00057380 	call	5738 <__malloc_unlock>
    4958:	80c00204 	addi	r3,r16,8
    495c:	003fc006 	br	4860 <_malloc_r+0x50>
    4960:	02c00034 	movhi	r11,0
    4964:	5add9c04 	addi	r11,r11,30320
    4968:	8ac5883a 	add	r2,r17,r11
    496c:	14000317 	ldw	r16,12(r2)
    4970:	580f883a 	mov	r7,r11
    4974:	8806d0fa 	srli	r3,r17,3
    4978:	14006c26 	beq	r2,r16,4b2c <_malloc_r+0x31c>
    497c:	80c00117 	ldw	r3,4(r16)
    4980:	00bfff04 	movi	r2,-4
    4984:	81800317 	ldw	r6,12(r16)
    4988:	1886703a 	and	r3,r3,r2
    498c:	80c7883a 	add	r3,r16,r3
    4990:	18800117 	ldw	r2,4(r3)
    4994:	81400217 	ldw	r5,8(r16)
    4998:	9009883a 	mov	r4,r18
    499c:	10800054 	ori	r2,r2,1
    49a0:	18800115 	stw	r2,4(r3)
    49a4:	31400215 	stw	r5,8(r6)
    49a8:	29800315 	stw	r6,12(r5)
    49ac:	00057380 	call	5738 <__malloc_unlock>
    49b0:	80c00204 	addi	r3,r16,8
    49b4:	003faa06 	br	4860 <_malloc_r+0x50>
    49b8:	00800104 	movi	r2,4
    49bc:	10c0052e 	bgeu	r2,r3,49d4 <_malloc_r+0x1c4>
    49c0:	00800504 	movi	r2,20
    49c4:	10c07836 	bltu	r2,r3,4ba8 <_malloc_r+0x398>
    49c8:	198016c4 	addi	r6,r3,91
    49cc:	300490fa 	slli	r2,r6,3
    49d0:	003fbc06 	br	48c4 <_malloc_r+0xb4>
    49d4:	8804d1ba 	srli	r2,r17,6
    49d8:	11800e04 	addi	r6,r2,56
    49dc:	300490fa 	slli	r2,r6,3
    49e0:	003fb806 	br	48c4 <_malloc_r+0xb4>
    49e4:	00807fc4 	movi	r2,511
    49e8:	1140bb36 	bltu	r2,r5,4cd8 <_malloc_r+0x4c8>
    49ec:	2806d0fa 	srli	r3,r5,3
    49f0:	573ffe04 	addi	fp,r10,-8
    49f4:	00800044 	movi	r2,1
    49f8:	180890fa 	slli	r4,r3,3
    49fc:	1807d0ba 	srai	r3,r3,2
    4a00:	e1c00117 	ldw	r7,4(fp)
    4a04:	5909883a 	add	r4,r11,r4
    4a08:	21400217 	ldw	r5,8(r4)
    4a0c:	10c4983a 	sll	r2,r2,r3
    4a10:	81000315 	stw	r4,12(r16)
    4a14:	81400215 	stw	r5,8(r16)
    4a18:	388eb03a 	or	r7,r7,r2
    4a1c:	2c000315 	stw	r16,12(r5)
    4a20:	24000215 	stw	r16,8(r4)
    4a24:	e1c00115 	stw	r7,4(fp)
    4a28:	4807883a 	mov	r3,r9
    4a2c:	4800cd16 	blt	r9,zero,4d64 <_malloc_r+0x554>
    4a30:	1807d0ba 	srai	r3,r3,2
    4a34:	00800044 	movi	r2,1
    4a38:	10c8983a 	sll	r4,r2,r3
    4a3c:	39004436 	bltu	r7,r4,4b50 <_malloc_r+0x340>
    4a40:	21c4703a 	and	r2,r4,r7
    4a44:	10000a1e 	bne	r2,zero,4a70 <_malloc_r+0x260>
    4a48:	2109883a 	add	r4,r4,r4
    4a4c:	00bfff04 	movi	r2,-4
    4a50:	4884703a 	and	r2,r9,r2
    4a54:	3906703a 	and	r3,r7,r4
    4a58:	12400104 	addi	r9,r2,4
    4a5c:	1800041e 	bne	r3,zero,4a70 <_malloc_r+0x260>
    4a60:	2109883a 	add	r4,r4,r4
    4a64:	3904703a 	and	r2,r7,r4
    4a68:	4a400104 	addi	r9,r9,4
    4a6c:	103ffc26 	beq	r2,zero,4a60 <_malloc_r+0x250>
    4a70:	480490fa 	slli	r2,r9,3
    4a74:	4819883a 	mov	r12,r9
    4a78:	023fff04 	movi	r8,-4
    4a7c:	589b883a 	add	r13,r11,r2
    4a80:	6807883a 	mov	r3,r13
    4a84:	014003c4 	movi	r5,15
    4a88:	1c000317 	ldw	r16,12(r3)
    4a8c:	1c00041e 	bne	r3,r16,4aa0 <_malloc_r+0x290>
    4a90:	0000a706 	br	4d30 <_malloc_r+0x520>
    4a94:	3000ab0e 	bge	r6,zero,4d44 <_malloc_r+0x534>
    4a98:	84000317 	ldw	r16,12(r16)
    4a9c:	1c00a426 	beq	r3,r16,4d30 <_malloc_r+0x520>
    4aa0:	80800117 	ldw	r2,4(r16)
    4aa4:	1204703a 	and	r2,r2,r8
    4aa8:	144dc83a 	sub	r6,r2,r17
    4aac:	29bff90e 	bge	r5,r6,4a94 <_malloc_r+0x284>
    4ab0:	81000317 	ldw	r4,12(r16)
    4ab4:	80c00217 	ldw	r3,8(r16)
    4ab8:	89400054 	ori	r5,r17,1
    4abc:	8445883a 	add	r2,r16,r17
    4ac0:	20c00215 	stw	r3,8(r4)
    4ac4:	19000315 	stw	r4,12(r3)
    4ac8:	81400115 	stw	r5,4(r16)
    4acc:	1187883a 	add	r3,r2,r6
    4ad0:	31000054 	ori	r4,r6,1
    4ad4:	50800315 	stw	r2,12(r10)
    4ad8:	50800215 	stw	r2,8(r10)
    4adc:	19800015 	stw	r6,0(r3)
    4ae0:	11000115 	stw	r4,4(r2)
    4ae4:	12800215 	stw	r10,8(r2)
    4ae8:	12800315 	stw	r10,12(r2)
    4aec:	9009883a 	mov	r4,r18
    4af0:	00057380 	call	5738 <__malloc_unlock>
    4af4:	80c00204 	addi	r3,r16,8
    4af8:	003f5906 	br	4860 <_malloc_r+0x50>
    4afc:	8109883a 	add	r4,r16,r4
    4b00:	20800117 	ldw	r2,4(r4)
    4b04:	80c00217 	ldw	r3,8(r16)
    4b08:	81400317 	ldw	r5,12(r16)
    4b0c:	10800054 	ori	r2,r2,1
    4b10:	20800115 	stw	r2,4(r4)
    4b14:	28c00215 	stw	r3,8(r5)
    4b18:	19400315 	stw	r5,12(r3)
    4b1c:	9009883a 	mov	r4,r18
    4b20:	00057380 	call	5738 <__malloc_unlock>
    4b24:	80c00204 	addi	r3,r16,8
    4b28:	003f4d06 	br	4860 <_malloc_r+0x50>
    4b2c:	80800204 	addi	r2,r16,8
    4b30:	14000317 	ldw	r16,12(r2)
    4b34:	143f911e 	bne	r2,r16,497c <_malloc_r+0x16c>
    4b38:	1a400084 	addi	r9,r3,2
    4b3c:	003f7306 	br	490c <_malloc_r+0xfc>
    4b40:	88c00054 	ori	r3,r17,1
    4b44:	8445883a 	add	r2,r16,r17
    4b48:	80c00115 	stw	r3,4(r16)
    4b4c:	003fdf06 	br	4acc <_malloc_r+0x2bc>
    4b50:	e4000217 	ldw	r16,8(fp)
    4b54:	00bfff04 	movi	r2,-4
    4b58:	80c00117 	ldw	r3,4(r16)
    4b5c:	802d883a 	mov	r22,r16
    4b60:	18aa703a 	and	r21,r3,r2
    4b64:	ac401636 	bltu	r21,r17,4bc0 <_malloc_r+0x3b0>
    4b68:	ac49c83a 	sub	r4,r21,r17
    4b6c:	008003c4 	movi	r2,15
    4b70:	1100130e 	bge	r2,r4,4bc0 <_malloc_r+0x3b0>
    4b74:	88800054 	ori	r2,r17,1
    4b78:	8447883a 	add	r3,r16,r17
    4b7c:	80800115 	stw	r2,4(r16)
    4b80:	20800054 	ori	r2,r4,1
    4b84:	18800115 	stw	r2,4(r3)
    4b88:	e0c00215 	stw	r3,8(fp)
    4b8c:	9009883a 	mov	r4,r18
    4b90:	00057380 	call	5738 <__malloc_unlock>
    4b94:	80c00204 	addi	r3,r16,8
    4b98:	003f3106 	br	4860 <_malloc_r+0x50>
    4b9c:	39c00117 	ldw	r7,4(r7)
    4ba0:	573ffe04 	addi	fp,r10,-8
    4ba4:	003fa006 	br	4a28 <_malloc_r+0x218>
    4ba8:	00801504 	movi	r2,84
    4bac:	10c06736 	bltu	r2,r3,4d4c <_malloc_r+0x53c>
    4bb0:	8804d33a 	srli	r2,r17,12
    4bb4:	11801b84 	addi	r6,r2,110
    4bb8:	300490fa 	slli	r2,r6,3
    4bbc:	003f4106 	br	48c4 <_malloc_r+0xb4>
    4bc0:	d0a7ed17 	ldw	r2,-24652(gp)
    4bc4:	d0e02517 	ldw	r3,-32620(gp)
    4bc8:	053fffc4 	movi	r20,-1
    4bcc:	10800404 	addi	r2,r2,16
    4bd0:	88a7883a 	add	r19,r17,r2
    4bd4:	1d000326 	beq	r3,r20,4be4 <_malloc_r+0x3d4>
    4bd8:	98c3ffc4 	addi	r3,r19,4095
    4bdc:	00bc0004 	movi	r2,-4096
    4be0:	18a6703a 	and	r19,r3,r2
    4be4:	9009883a 	mov	r4,r18
    4be8:	980b883a 	mov	r5,r19
    4bec:	0004fe80 	call	4fe8 <_sbrk_r>
    4bf0:	1009883a 	mov	r4,r2
    4bf4:	15000426 	beq	r2,r20,4c08 <_malloc_r+0x3f8>
    4bf8:	854b883a 	add	r5,r16,r21
    4bfc:	1029883a 	mov	r20,r2
    4c00:	11405a2e 	bgeu	r2,r5,4d6c <_malloc_r+0x55c>
    4c04:	87000c26 	beq	r16,fp,4c38 <_malloc_r+0x428>
    4c08:	e4000217 	ldw	r16,8(fp)
    4c0c:	80c00117 	ldw	r3,4(r16)
    4c10:	00bfff04 	movi	r2,-4
    4c14:	1884703a 	and	r2,r3,r2
    4c18:	14400336 	bltu	r2,r17,4c28 <_malloc_r+0x418>
    4c1c:	1449c83a 	sub	r4,r2,r17
    4c20:	008003c4 	movi	r2,15
    4c24:	113fd316 	blt	r2,r4,4b74 <_malloc_r+0x364>
    4c28:	9009883a 	mov	r4,r18
    4c2c:	00057380 	call	5738 <__malloc_unlock>
    4c30:	0007883a 	mov	r3,zero
    4c34:	003f0a06 	br	4860 <_malloc_r+0x50>
    4c38:	05c00074 	movhi	r23,1
    4c3c:	bde68e04 	addi	r23,r23,-26056
    4c40:	b8800017 	ldw	r2,0(r23)
    4c44:	988d883a 	add	r6,r19,r2
    4c48:	b9800015 	stw	r6,0(r23)
    4c4c:	d0e02517 	ldw	r3,-32620(gp)
    4c50:	00bfffc4 	movi	r2,-1
    4c54:	18808e26 	beq	r3,r2,4e90 <_malloc_r+0x680>
    4c58:	2145c83a 	sub	r2,r4,r5
    4c5c:	3085883a 	add	r2,r6,r2
    4c60:	b8800015 	stw	r2,0(r23)
    4c64:	20c001cc 	andi	r3,r4,7
    4c68:	18005f1e 	bne	r3,zero,4de8 <_malloc_r+0x5d8>
    4c6c:	000b883a 	mov	r5,zero
    4c70:	a4c5883a 	add	r2,r20,r19
    4c74:	1083ffcc 	andi	r2,r2,4095
    4c78:	00c40004 	movi	r3,4096
    4c7c:	1887c83a 	sub	r3,r3,r2
    4c80:	28e7883a 	add	r19,r5,r3
    4c84:	9009883a 	mov	r4,r18
    4c88:	980b883a 	mov	r5,r19
    4c8c:	0004fe80 	call	4fe8 <_sbrk_r>
    4c90:	1007883a 	mov	r3,r2
    4c94:	00bfffc4 	movi	r2,-1
    4c98:	18807a26 	beq	r3,r2,4e84 <_malloc_r+0x674>
    4c9c:	1d05c83a 	sub	r2,r3,r20
    4ca0:	9885883a 	add	r2,r19,r2
    4ca4:	10c00054 	ori	r3,r2,1
    4ca8:	b8800017 	ldw	r2,0(r23)
    4cac:	a021883a 	mov	r16,r20
    4cb0:	a0c00115 	stw	r3,4(r20)
    4cb4:	9885883a 	add	r2,r19,r2
    4cb8:	b8800015 	stw	r2,0(r23)
    4cbc:	e5000215 	stw	r20,8(fp)
    4cc0:	b7003626 	beq	r22,fp,4d9c <_malloc_r+0x58c>
    4cc4:	018003c4 	movi	r6,15
    4cc8:	35404b36 	bltu	r6,r21,4df8 <_malloc_r+0x5e8>
    4ccc:	00800044 	movi	r2,1
    4cd0:	a0800115 	stw	r2,4(r20)
    4cd4:	003fcd06 	br	4c0c <_malloc_r+0x3fc>
    4cd8:	2808d27a 	srli	r4,r5,9
    4cdc:	2000371e 	bne	r4,zero,4dbc <_malloc_r+0x5ac>
    4ce0:	2808d0fa 	srli	r4,r5,3
    4ce4:	200690fa 	slli	r3,r4,3
    4ce8:	1ad1883a 	add	r8,r3,r11
    4cec:	41800217 	ldw	r6,8(r8)
    4cf0:	41805b26 	beq	r8,r6,4e60 <_malloc_r+0x650>
    4cf4:	30800117 	ldw	r2,4(r6)
    4cf8:	00ffff04 	movi	r3,-4
    4cfc:	10c4703a 	and	r2,r2,r3
    4d00:	2880022e 	bgeu	r5,r2,4d0c <_malloc_r+0x4fc>
    4d04:	31800217 	ldw	r6,8(r6)
    4d08:	41bffa1e 	bne	r8,r6,4cf4 <_malloc_r+0x4e4>
    4d0c:	32000317 	ldw	r8,12(r6)
    4d10:	39c00117 	ldw	r7,4(r7)
    4d14:	82000315 	stw	r8,12(r16)
    4d18:	81800215 	stw	r6,8(r16)
    4d1c:	07000034 	movhi	fp,0
    4d20:	e71d9c04 	addi	fp,fp,30320
    4d24:	34000315 	stw	r16,12(r6)
    4d28:	44000215 	stw	r16,8(r8)
    4d2c:	003f3e06 	br	4a28 <_malloc_r+0x218>
    4d30:	63000044 	addi	r12,r12,1
    4d34:	608000cc 	andi	r2,r12,3
    4d38:	10005d26 	beq	r2,zero,4eb0 <_malloc_r+0x6a0>
    4d3c:	18c00204 	addi	r3,r3,8
    4d40:	003f5106 	br	4a88 <_malloc_r+0x278>
    4d44:	8089883a 	add	r4,r16,r2
    4d48:	003f6d06 	br	4b00 <_malloc_r+0x2f0>
    4d4c:	00805504 	movi	r2,340
    4d50:	10c02036 	bltu	r2,r3,4dd4 <_malloc_r+0x5c4>
    4d54:	8804d3fa 	srli	r2,r17,15
    4d58:	11801dc4 	addi	r6,r2,119
    4d5c:	300490fa 	slli	r2,r6,3
    4d60:	003ed806 	br	48c4 <_malloc_r+0xb4>
    4d64:	48c000c4 	addi	r3,r9,3
    4d68:	003f3106 	br	4a30 <_malloc_r+0x220>
    4d6c:	05c00074 	movhi	r23,1
    4d70:	bde68e04 	addi	r23,r23,-26056
    4d74:	b8800017 	ldw	r2,0(r23)
    4d78:	988d883a 	add	r6,r19,r2
    4d7c:	b9800015 	stw	r6,0(r23)
    4d80:	293fb21e 	bne	r5,r4,4c4c <_malloc_r+0x43c>
    4d84:	2083ffcc 	andi	r2,r4,4095
    4d88:	103fb01e 	bne	r2,zero,4c4c <_malloc_r+0x43c>
    4d8c:	e4000217 	ldw	r16,8(fp)
    4d90:	9d45883a 	add	r2,r19,r21
    4d94:	10800054 	ori	r2,r2,1
    4d98:	80800115 	stw	r2,4(r16)
    4d9c:	b8c00017 	ldw	r3,0(r23)
    4da0:	d0a7ee17 	ldw	r2,-24648(gp)
    4da4:	10c0012e 	bgeu	r2,r3,4dac <_malloc_r+0x59c>
    4da8:	d0e7ee15 	stw	r3,-24648(gp)
    4dac:	d0a7ef17 	ldw	r2,-24644(gp)
    4db0:	10ff962e 	bgeu	r2,r3,4c0c <_malloc_r+0x3fc>
    4db4:	d0e7ef15 	stw	r3,-24644(gp)
    4db8:	003f9406 	br	4c0c <_malloc_r+0x3fc>
    4dbc:	00800104 	movi	r2,4
    4dc0:	11001e36 	bltu	r2,r4,4e3c <_malloc_r+0x62c>
    4dc4:	2804d1ba 	srli	r2,r5,6
    4dc8:	11000e04 	addi	r4,r2,56
    4dcc:	200690fa 	slli	r3,r4,3
    4dd0:	003fc506 	br	4ce8 <_malloc_r+0x4d8>
    4dd4:	00815504 	movi	r2,1364
    4dd8:	10c01d2e 	bgeu	r2,r3,4e50 <_malloc_r+0x640>
    4ddc:	01801f84 	movi	r6,126
    4de0:	0080fc04 	movi	r2,1008
    4de4:	003eb706 	br	48c4 <_malloc_r+0xb4>
    4de8:	00800204 	movi	r2,8
    4dec:	10cbc83a 	sub	r5,r2,r3
    4df0:	2169883a 	add	r20,r4,r5
    4df4:	003f9e06 	br	4c70 <_malloc_r+0x460>
    4df8:	00bffe04 	movi	r2,-8
    4dfc:	a93ffd04 	addi	r4,r21,-12
    4e00:	2088703a 	and	r4,r4,r2
    4e04:	b10b883a 	add	r5,r22,r4
    4e08:	00c00144 	movi	r3,5
    4e0c:	28c00215 	stw	r3,8(r5)
    4e10:	28c00115 	stw	r3,4(r5)
    4e14:	b0800117 	ldw	r2,4(r22)
    4e18:	1080004c 	andi	r2,r2,1
    4e1c:	2084b03a 	or	r2,r4,r2
    4e20:	b0800115 	stw	r2,4(r22)
    4e24:	313fdd2e 	bgeu	r6,r4,4d9c <_malloc_r+0x58c>
    4e28:	b1400204 	addi	r5,r22,8
    4e2c:	9009883a 	mov	r4,r18
    4e30:	00041e80 	call	41e8 <_free_r>
    4e34:	e4000217 	ldw	r16,8(fp)
    4e38:	003fd806 	br	4d9c <_malloc_r+0x58c>
    4e3c:	00800504 	movi	r2,20
    4e40:	11001536 	bltu	r2,r4,4e98 <_malloc_r+0x688>
    4e44:	210016c4 	addi	r4,r4,91
    4e48:	200690fa 	slli	r3,r4,3
    4e4c:	003fa606 	br	4ce8 <_malloc_r+0x4d8>
    4e50:	8804d4ba 	srli	r2,r17,18
    4e54:	11801f04 	addi	r6,r2,124
    4e58:	300490fa 	slli	r2,r6,3
    4e5c:	003e9906 	br	48c4 <_malloc_r+0xb4>
    4e60:	2009d0ba 	srai	r4,r4,2
    4e64:	01400034 	movhi	r5,0
    4e68:	295d9c04 	addi	r5,r5,30320
    4e6c:	00c00044 	movi	r3,1
    4e70:	28800117 	ldw	r2,4(r5)
    4e74:	1906983a 	sll	r3,r3,r4
    4e78:	10c4b03a 	or	r2,r2,r3
    4e7c:	28800115 	stw	r2,4(r5)
    4e80:	003fa306 	br	4d10 <_malloc_r+0x500>
    4e84:	0027883a 	mov	r19,zero
    4e88:	00c00044 	movi	r3,1
    4e8c:	003f8606 	br	4ca8 <_malloc_r+0x498>
    4e90:	d1202515 	stw	r4,-32620(gp)
    4e94:	003f7306 	br	4c64 <_malloc_r+0x454>
    4e98:	00801504 	movi	r2,84
    4e9c:	11001936 	bltu	r2,r4,4f04 <_malloc_r+0x6f4>
    4ea0:	2804d33a 	srli	r2,r5,12
    4ea4:	11001b84 	addi	r4,r2,110
    4ea8:	200690fa 	slli	r3,r4,3
    4eac:	003f8e06 	br	4ce8 <_malloc_r+0x4d8>
    4eb0:	480b883a 	mov	r5,r9
    4eb4:	6807883a 	mov	r3,r13
    4eb8:	288000cc 	andi	r2,r5,3
    4ebc:	18fffe04 	addi	r3,r3,-8
    4ec0:	297fffc4 	addi	r5,r5,-1
    4ec4:	10001526 	beq	r2,zero,4f1c <_malloc_r+0x70c>
    4ec8:	18800217 	ldw	r2,8(r3)
    4ecc:	10fffa26 	beq	r2,r3,4eb8 <_malloc_r+0x6a8>
    4ed0:	2109883a 	add	r4,r4,r4
    4ed4:	393f1e36 	bltu	r7,r4,4b50 <_malloc_r+0x340>
    4ed8:	203f1d26 	beq	r4,zero,4b50 <_malloc_r+0x340>
    4edc:	21c4703a 	and	r2,r4,r7
    4ee0:	10000226 	beq	r2,zero,4eec <_malloc_r+0x6dc>
    4ee4:	6013883a 	mov	r9,r12
    4ee8:	003ee106 	br	4a70 <_malloc_r+0x260>
    4eec:	2109883a 	add	r4,r4,r4
    4ef0:	3904703a 	and	r2,r7,r4
    4ef4:	63000104 	addi	r12,r12,4
    4ef8:	103ffc26 	beq	r2,zero,4eec <_malloc_r+0x6dc>
    4efc:	6013883a 	mov	r9,r12
    4f00:	003edb06 	br	4a70 <_malloc_r+0x260>
    4f04:	00805504 	movi	r2,340
    4f08:	11000836 	bltu	r2,r4,4f2c <_malloc_r+0x71c>
    4f0c:	2804d3fa 	srli	r2,r5,15
    4f10:	11001dc4 	addi	r4,r2,119
    4f14:	200690fa 	slli	r3,r4,3
    4f18:	003f7306 	br	4ce8 <_malloc_r+0x4d8>
    4f1c:	0104303a 	nor	r2,zero,r4
    4f20:	388e703a 	and	r7,r7,r2
    4f24:	e1c00115 	stw	r7,4(fp)
    4f28:	003fe906 	br	4ed0 <_malloc_r+0x6c0>
    4f2c:	00815504 	movi	r2,1364
    4f30:	1100032e 	bgeu	r2,r4,4f40 <_malloc_r+0x730>
    4f34:	01001f84 	movi	r4,126
    4f38:	00c0fc04 	movi	r3,1008
    4f3c:	003f6a06 	br	4ce8 <_malloc_r+0x4d8>
    4f40:	2804d4ba 	srli	r2,r5,18
    4f44:	11001f04 	addi	r4,r2,124
    4f48:	200690fa 	slli	r3,r4,3
    4f4c:	003f6606 	br	4ce8 <_malloc_r+0x4d8>

00004f50 <memset>:
    4f50:	008000c4 	movi	r2,3
    4f54:	29403fcc 	andi	r5,r5,255
    4f58:	2007883a 	mov	r3,r4
    4f5c:	1180022e 	bgeu	r2,r6,4f68 <memset+0x18>
    4f60:	2084703a 	and	r2,r4,r2
    4f64:	10000826 	beq	r2,zero,4f88 <memset+0x38>
    4f68:	30000526 	beq	r6,zero,4f80 <memset+0x30>
    4f6c:	2805883a 	mov	r2,r5
    4f70:	30cd883a 	add	r6,r6,r3
    4f74:	18800005 	stb	r2,0(r3)
    4f78:	18c00044 	addi	r3,r3,1
    4f7c:	19bffd1e 	bne	r3,r6,4f74 <memset+0x24>
    4f80:	2005883a 	mov	r2,r4
    4f84:	f800283a 	ret
    4f88:	2804923a 	slli	r2,r5,8
    4f8c:	020003c4 	movi	r8,15
    4f90:	200f883a 	mov	r7,r4
    4f94:	2884b03a 	or	r2,r5,r2
    4f98:	1006943a 	slli	r3,r2,16
    4f9c:	10c6b03a 	or	r3,r2,r3
    4fa0:	41800a2e 	bgeu	r8,r6,4fcc <memset+0x7c>
    4fa4:	4005883a 	mov	r2,r8
    4fa8:	31bffc04 	addi	r6,r6,-16
    4fac:	38c00015 	stw	r3,0(r7)
    4fb0:	38c00115 	stw	r3,4(r7)
    4fb4:	38c00215 	stw	r3,8(r7)
    4fb8:	38c00315 	stw	r3,12(r7)
    4fbc:	39c00404 	addi	r7,r7,16
    4fc0:	11bff936 	bltu	r2,r6,4fa8 <memset+0x58>
    4fc4:	008000c4 	movi	r2,3
    4fc8:	1180052e 	bgeu	r2,r6,4fe0 <memset+0x90>
    4fcc:	31bfff04 	addi	r6,r6,-4
    4fd0:	008000c4 	movi	r2,3
    4fd4:	38c00015 	stw	r3,0(r7)
    4fd8:	39c00104 	addi	r7,r7,4
    4fdc:	11bffb36 	bltu	r2,r6,4fcc <memset+0x7c>
    4fe0:	3807883a 	mov	r3,r7
    4fe4:	003fe006 	br	4f68 <memset+0x18>

00004fe8 <_sbrk_r>:
    4fe8:	defffd04 	addi	sp,sp,-12
    4fec:	dc000015 	stw	r16,0(sp)
    4ff0:	04000074 	movhi	r16,1
    4ff4:	84268a04 	addi	r16,r16,-26072
    4ff8:	dc400115 	stw	r17,4(sp)
    4ffc:	80000015 	stw	zero,0(r16)
    5000:	2023883a 	mov	r17,r4
    5004:	2809883a 	mov	r4,r5
    5008:	dfc00215 	stw	ra,8(sp)
    500c:	00058340 	call	5834 <sbrk>
    5010:	1007883a 	mov	r3,r2
    5014:	00bfffc4 	movi	r2,-1
    5018:	18800626 	beq	r3,r2,5034 <_sbrk_r+0x4c>
    501c:	1805883a 	mov	r2,r3
    5020:	dfc00217 	ldw	ra,8(sp)
    5024:	dc400117 	ldw	r17,4(sp)
    5028:	dc000017 	ldw	r16,0(sp)
    502c:	dec00304 	addi	sp,sp,12
    5030:	f800283a 	ret
    5034:	80800017 	ldw	r2,0(r16)
    5038:	103ff826 	beq	r2,zero,501c <_sbrk_r+0x34>
    503c:	88800015 	stw	r2,0(r17)
    5040:	1805883a 	mov	r2,r3
    5044:	dfc00217 	ldw	ra,8(sp)
    5048:	dc400117 	ldw	r17,4(sp)
    504c:	dc000017 	ldw	r16,0(sp)
    5050:	dec00304 	addi	sp,sp,12
    5054:	f800283a 	ret

00005058 <__sclose>:
    5058:	2940038f 	ldh	r5,14(r5)
    505c:	000521c1 	jmpi	521c <_close_r>

00005060 <__sseek>:
    5060:	defffe04 	addi	sp,sp,-8
    5064:	dc000015 	stw	r16,0(sp)
    5068:	2821883a 	mov	r16,r5
    506c:	2940038f 	ldh	r5,14(r5)
    5070:	dfc00115 	stw	ra,4(sp)
    5074:	00054940 	call	5494 <_lseek_r>
    5078:	1007883a 	mov	r3,r2
    507c:	00bfffc4 	movi	r2,-1
    5080:	18800926 	beq	r3,r2,50a8 <__sseek+0x48>
    5084:	8080030b 	ldhu	r2,12(r16)
    5088:	80c01415 	stw	r3,80(r16)
    508c:	10840014 	ori	r2,r2,4096
    5090:	8080030d 	sth	r2,12(r16)
    5094:	1805883a 	mov	r2,r3
    5098:	dfc00117 	ldw	ra,4(sp)
    509c:	dc000017 	ldw	r16,0(sp)
    50a0:	dec00204 	addi	sp,sp,8
    50a4:	f800283a 	ret
    50a8:	8080030b 	ldhu	r2,12(r16)
    50ac:	10bbffcc 	andi	r2,r2,61439
    50b0:	8080030d 	sth	r2,12(r16)
    50b4:	1805883a 	mov	r2,r3
    50b8:	dfc00117 	ldw	ra,4(sp)
    50bc:	dc000017 	ldw	r16,0(sp)
    50c0:	dec00204 	addi	sp,sp,8
    50c4:	f800283a 	ret

000050c8 <__swrite>:
    50c8:	2880030b 	ldhu	r2,12(r5)
    50cc:	defffb04 	addi	sp,sp,-20
    50d0:	dcc00315 	stw	r19,12(sp)
    50d4:	1080400c 	andi	r2,r2,256
    50d8:	dc800215 	stw	r18,8(sp)
    50dc:	dc400115 	stw	r17,4(sp)
    50e0:	dc000015 	stw	r16,0(sp)
    50e4:	3027883a 	mov	r19,r6
    50e8:	3825883a 	mov	r18,r7
    50ec:	dfc00415 	stw	ra,16(sp)
    50f0:	2821883a 	mov	r16,r5
    50f4:	000d883a 	mov	r6,zero
    50f8:	01c00084 	movi	r7,2
    50fc:	2023883a 	mov	r17,r4
    5100:	10000226 	beq	r2,zero,510c <__swrite+0x44>
    5104:	2940038f 	ldh	r5,14(r5)
    5108:	00054940 	call	5494 <_lseek_r>
    510c:	8080030b 	ldhu	r2,12(r16)
    5110:	8140038f 	ldh	r5,14(r16)
    5114:	8809883a 	mov	r4,r17
    5118:	10bbffcc 	andi	r2,r2,61439
    511c:	980d883a 	mov	r6,r19
    5120:	900f883a 	mov	r7,r18
    5124:	8080030d 	sth	r2,12(r16)
    5128:	dfc00417 	ldw	ra,16(sp)
    512c:	dcc00317 	ldw	r19,12(sp)
    5130:	dc800217 	ldw	r18,8(sp)
    5134:	dc400117 	ldw	r17,4(sp)
    5138:	dc000017 	ldw	r16,0(sp)
    513c:	dec00504 	addi	sp,sp,20
    5140:	00051a41 	jmpi	51a4 <_write_r>

00005144 <__sread>:
    5144:	defffe04 	addi	sp,sp,-8
    5148:	dc000015 	stw	r16,0(sp)
    514c:	2821883a 	mov	r16,r5
    5150:	2940038f 	ldh	r5,14(r5)
    5154:	dfc00115 	stw	ra,4(sp)
    5158:	000550c0 	call	550c <_read_r>
    515c:	1007883a 	mov	r3,r2
    5160:	10000816 	blt	r2,zero,5184 <__sread+0x40>
    5164:	80801417 	ldw	r2,80(r16)
    5168:	10c5883a 	add	r2,r2,r3
    516c:	80801415 	stw	r2,80(r16)
    5170:	1805883a 	mov	r2,r3
    5174:	dfc00117 	ldw	ra,4(sp)
    5178:	dc000017 	ldw	r16,0(sp)
    517c:	dec00204 	addi	sp,sp,8
    5180:	f800283a 	ret
    5184:	8080030b 	ldhu	r2,12(r16)
    5188:	10bbffcc 	andi	r2,r2,61439
    518c:	8080030d 	sth	r2,12(r16)
    5190:	1805883a 	mov	r2,r3
    5194:	dfc00117 	ldw	ra,4(sp)
    5198:	dc000017 	ldw	r16,0(sp)
    519c:	dec00204 	addi	sp,sp,8
    51a0:	f800283a 	ret

000051a4 <_write_r>:
    51a4:	defffd04 	addi	sp,sp,-12
    51a8:	dc000015 	stw	r16,0(sp)
    51ac:	04000074 	movhi	r16,1
    51b0:	84268a04 	addi	r16,r16,-26072
    51b4:	dc400115 	stw	r17,4(sp)
    51b8:	80000015 	stw	zero,0(r16)
    51bc:	2023883a 	mov	r17,r4
    51c0:	2809883a 	mov	r4,r5
    51c4:	300b883a 	mov	r5,r6
    51c8:	380d883a 	mov	r6,r7
    51cc:	dfc00215 	stw	ra,8(sp)
    51d0:	00058840 	call	5884 <write>
    51d4:	1007883a 	mov	r3,r2
    51d8:	00bfffc4 	movi	r2,-1
    51dc:	18800626 	beq	r3,r2,51f8 <_write_r+0x54>
    51e0:	1805883a 	mov	r2,r3
    51e4:	dfc00217 	ldw	ra,8(sp)
    51e8:	dc400117 	ldw	r17,4(sp)
    51ec:	dc000017 	ldw	r16,0(sp)
    51f0:	dec00304 	addi	sp,sp,12
    51f4:	f800283a 	ret
    51f8:	80800017 	ldw	r2,0(r16)
    51fc:	103ff826 	beq	r2,zero,51e0 <_write_r+0x3c>
    5200:	88800015 	stw	r2,0(r17)
    5204:	1805883a 	mov	r2,r3
    5208:	dfc00217 	ldw	ra,8(sp)
    520c:	dc400117 	ldw	r17,4(sp)
    5210:	dc000017 	ldw	r16,0(sp)
    5214:	dec00304 	addi	sp,sp,12
    5218:	f800283a 	ret

0000521c <_close_r>:
    521c:	defffd04 	addi	sp,sp,-12
    5220:	dc000015 	stw	r16,0(sp)
    5224:	04000074 	movhi	r16,1
    5228:	84268a04 	addi	r16,r16,-26072
    522c:	dc400115 	stw	r17,4(sp)
    5230:	80000015 	stw	zero,0(r16)
    5234:	2023883a 	mov	r17,r4
    5238:	2809883a 	mov	r4,r5
    523c:	dfc00215 	stw	ra,8(sp)
    5240:	0002c2c0 	call	2c2c <close>
    5244:	1007883a 	mov	r3,r2
    5248:	00bfffc4 	movi	r2,-1
    524c:	18800626 	beq	r3,r2,5268 <_close_r+0x4c>
    5250:	1805883a 	mov	r2,r3
    5254:	dfc00217 	ldw	ra,8(sp)
    5258:	dc400117 	ldw	r17,4(sp)
    525c:	dc000017 	ldw	r16,0(sp)
    5260:	dec00304 	addi	sp,sp,12
    5264:	f800283a 	ret
    5268:	80800017 	ldw	r2,0(r16)
    526c:	103ff826 	beq	r2,zero,5250 <_close_r+0x34>
    5270:	88800015 	stw	r2,0(r17)
    5274:	1805883a 	mov	r2,r3
    5278:	dfc00217 	ldw	ra,8(sp)
    527c:	dc400117 	ldw	r17,4(sp)
    5280:	dc000017 	ldw	r16,0(sp)
    5284:	dec00304 	addi	sp,sp,12
    5288:	f800283a 	ret

0000528c <_fclose_r>:
    528c:	defffc04 	addi	sp,sp,-16
    5290:	dc400115 	stw	r17,4(sp)
    5294:	dc000015 	stw	r16,0(sp)
    5298:	dfc00315 	stw	ra,12(sp)
    529c:	dc800215 	stw	r18,8(sp)
    52a0:	2821883a 	mov	r16,r5
    52a4:	2023883a 	mov	r17,r4
    52a8:	28002926 	beq	r5,zero,5350 <_fclose_r+0xc4>
    52ac:	0003e540 	call	3e54 <__sfp_lock_acquire>
    52b0:	88000226 	beq	r17,zero,52bc <_fclose_r+0x30>
    52b4:	88800e17 	ldw	r2,56(r17)
    52b8:	10002d26 	beq	r2,zero,5370 <_fclose_r+0xe4>
    52bc:	8080030f 	ldh	r2,12(r16)
    52c0:	10002226 	beq	r2,zero,534c <_fclose_r+0xc0>
    52c4:	8809883a 	mov	r4,r17
    52c8:	800b883a 	mov	r5,r16
    52cc:	0003bcc0 	call	3bcc <_fflush_r>
    52d0:	1025883a 	mov	r18,r2
    52d4:	80800b17 	ldw	r2,44(r16)
    52d8:	10000426 	beq	r2,zero,52ec <_fclose_r+0x60>
    52dc:	81400717 	ldw	r5,28(r16)
    52e0:	8809883a 	mov	r4,r17
    52e4:	103ee83a 	callr	r2
    52e8:	10002a16 	blt	r2,zero,5394 <_fclose_r+0x108>
    52ec:	8080030b 	ldhu	r2,12(r16)
    52f0:	1080200c 	andi	r2,r2,128
    52f4:	1000231e 	bne	r2,zero,5384 <_fclose_r+0xf8>
    52f8:	81400c17 	ldw	r5,48(r16)
    52fc:	28000526 	beq	r5,zero,5314 <_fclose_r+0x88>
    5300:	80801004 	addi	r2,r16,64
    5304:	28800226 	beq	r5,r2,5310 <_fclose_r+0x84>
    5308:	8809883a 	mov	r4,r17
    530c:	00041e80 	call	41e8 <_free_r>
    5310:	80000c15 	stw	zero,48(r16)
    5314:	81401117 	ldw	r5,68(r16)
    5318:	28000326 	beq	r5,zero,5328 <_fclose_r+0x9c>
    531c:	8809883a 	mov	r4,r17
    5320:	00041e80 	call	41e8 <_free_r>
    5324:	80001115 	stw	zero,68(r16)
    5328:	8000030d 	sth	zero,12(r16)
    532c:	0003e580 	call	3e58 <__sfp_lock_release>
    5330:	9005883a 	mov	r2,r18
    5334:	dfc00317 	ldw	ra,12(sp)
    5338:	dc800217 	ldw	r18,8(sp)
    533c:	dc400117 	ldw	r17,4(sp)
    5340:	dc000017 	ldw	r16,0(sp)
    5344:	dec00404 	addi	sp,sp,16
    5348:	f800283a 	ret
    534c:	0003e580 	call	3e58 <__sfp_lock_release>
    5350:	0025883a 	mov	r18,zero
    5354:	9005883a 	mov	r2,r18
    5358:	dfc00317 	ldw	ra,12(sp)
    535c:	dc800217 	ldw	r18,8(sp)
    5360:	dc400117 	ldw	r17,4(sp)
    5364:	dc000017 	ldw	r16,0(sp)
    5368:	dec00404 	addi	sp,sp,16
    536c:	f800283a 	ret
    5370:	8809883a 	mov	r4,r17
    5374:	0003e640 	call	3e64 <__sinit>
    5378:	8080030f 	ldh	r2,12(r16)
    537c:	103fd11e 	bne	r2,zero,52c4 <_fclose_r+0x38>
    5380:	003ff206 	br	534c <_fclose_r+0xc0>
    5384:	81400417 	ldw	r5,16(r16)
    5388:	8809883a 	mov	r4,r17
    538c:	00041e80 	call	41e8 <_free_r>
    5390:	003fd906 	br	52f8 <_fclose_r+0x6c>
    5394:	04bfffc4 	movi	r18,-1
    5398:	003fd406 	br	52ec <_fclose_r+0x60>

0000539c <fclose>:
    539c:	00800034 	movhi	r2,0
    53a0:	109ec004 	addi	r2,r2,31488
    53a4:	200b883a 	mov	r5,r4
    53a8:	11000017 	ldw	r4,0(r2)
    53ac:	000528c1 	jmpi	528c <_fclose_r>

000053b0 <_fstat_r>:
    53b0:	defffd04 	addi	sp,sp,-12
    53b4:	dc000015 	stw	r16,0(sp)
    53b8:	04000074 	movhi	r16,1
    53bc:	84268a04 	addi	r16,r16,-26072
    53c0:	dc400115 	stw	r17,4(sp)
    53c4:	80000015 	stw	zero,0(r16)
    53c8:	2023883a 	mov	r17,r4
    53cc:	2809883a 	mov	r4,r5
    53d0:	300b883a 	mov	r5,r6
    53d4:	dfc00215 	stw	ra,8(sp)
    53d8:	00055980 	call	5598 <fstat>
    53dc:	1007883a 	mov	r3,r2
    53e0:	00bfffc4 	movi	r2,-1
    53e4:	18800626 	beq	r3,r2,5400 <_fstat_r+0x50>
    53e8:	1805883a 	mov	r2,r3
    53ec:	dfc00217 	ldw	ra,8(sp)
    53f0:	dc400117 	ldw	r17,4(sp)
    53f4:	dc000017 	ldw	r16,0(sp)
    53f8:	dec00304 	addi	sp,sp,12
    53fc:	f800283a 	ret
    5400:	80800017 	ldw	r2,0(r16)
    5404:	103ff826 	beq	r2,zero,53e8 <_fstat_r+0x38>
    5408:	88800015 	stw	r2,0(r17)
    540c:	1805883a 	mov	r2,r3
    5410:	dfc00217 	ldw	ra,8(sp)
    5414:	dc400117 	ldw	r17,4(sp)
    5418:	dc000017 	ldw	r16,0(sp)
    541c:	dec00304 	addi	sp,sp,12
    5420:	f800283a 	ret

00005424 <_isatty_r>:
    5424:	defffd04 	addi	sp,sp,-12
    5428:	dc000015 	stw	r16,0(sp)
    542c:	04000074 	movhi	r16,1
    5430:	84268a04 	addi	r16,r16,-26072
    5434:	dc400115 	stw	r17,4(sp)
    5438:	80000015 	stw	zero,0(r16)
    543c:	2023883a 	mov	r17,r4
    5440:	2809883a 	mov	r4,r5
    5444:	dfc00215 	stw	ra,8(sp)
    5448:	00056180 	call	5618 <isatty>
    544c:	1007883a 	mov	r3,r2
    5450:	00bfffc4 	movi	r2,-1
    5454:	18800626 	beq	r3,r2,5470 <_isatty_r+0x4c>
    5458:	1805883a 	mov	r2,r3
    545c:	dfc00217 	ldw	ra,8(sp)
    5460:	dc400117 	ldw	r17,4(sp)
    5464:	dc000017 	ldw	r16,0(sp)
    5468:	dec00304 	addi	sp,sp,12
    546c:	f800283a 	ret
    5470:	80800017 	ldw	r2,0(r16)
    5474:	103ff826 	beq	r2,zero,5458 <_isatty_r+0x34>
    5478:	88800015 	stw	r2,0(r17)
    547c:	1805883a 	mov	r2,r3
    5480:	dfc00217 	ldw	ra,8(sp)
    5484:	dc400117 	ldw	r17,4(sp)
    5488:	dc000017 	ldw	r16,0(sp)
    548c:	dec00304 	addi	sp,sp,12
    5490:	f800283a 	ret

00005494 <_lseek_r>:
    5494:	defffd04 	addi	sp,sp,-12
    5498:	dc000015 	stw	r16,0(sp)
    549c:	04000074 	movhi	r16,1
    54a0:	84268a04 	addi	r16,r16,-26072
    54a4:	dc400115 	stw	r17,4(sp)
    54a8:	80000015 	stw	zero,0(r16)
    54ac:	2023883a 	mov	r17,r4
    54b0:	2809883a 	mov	r4,r5
    54b4:	300b883a 	mov	r5,r6
    54b8:	380d883a 	mov	r6,r7
    54bc:	dfc00215 	stw	ra,8(sp)
    54c0:	000569c0 	call	569c <lseek>
    54c4:	1007883a 	mov	r3,r2
    54c8:	00bfffc4 	movi	r2,-1
    54cc:	18800626 	beq	r3,r2,54e8 <_lseek_r+0x54>
    54d0:	1805883a 	mov	r2,r3
    54d4:	dfc00217 	ldw	ra,8(sp)
    54d8:	dc400117 	ldw	r17,4(sp)
    54dc:	dc000017 	ldw	r16,0(sp)
    54e0:	dec00304 	addi	sp,sp,12
    54e4:	f800283a 	ret
    54e8:	80800017 	ldw	r2,0(r16)
    54ec:	103ff826 	beq	r2,zero,54d0 <_lseek_r+0x3c>
    54f0:	88800015 	stw	r2,0(r17)
    54f4:	1805883a 	mov	r2,r3
    54f8:	dfc00217 	ldw	ra,8(sp)
    54fc:	dc400117 	ldw	r17,4(sp)
    5500:	dc000017 	ldw	r16,0(sp)
    5504:	dec00304 	addi	sp,sp,12
    5508:	f800283a 	ret

0000550c <_read_r>:
    550c:	defffd04 	addi	sp,sp,-12
    5510:	dc000015 	stw	r16,0(sp)
    5514:	04000074 	movhi	r16,1
    5518:	84268a04 	addi	r16,r16,-26072
    551c:	dc400115 	stw	r17,4(sp)
    5520:	80000015 	stw	zero,0(r16)
    5524:	2023883a 	mov	r17,r4
    5528:	2809883a 	mov	r4,r5
    552c:	300b883a 	mov	r5,r6
    5530:	380d883a 	mov	r6,r7
    5534:	dfc00215 	stw	ra,8(sp)
    5538:	000573c0 	call	573c <read>
    553c:	1007883a 	mov	r3,r2
    5540:	00bfffc4 	movi	r2,-1
    5544:	18800626 	beq	r3,r2,5560 <_read_r+0x54>
    5548:	1805883a 	mov	r2,r3
    554c:	dfc00217 	ldw	ra,8(sp)
    5550:	dc400117 	ldw	r17,4(sp)
    5554:	dc000017 	ldw	r16,0(sp)
    5558:	dec00304 	addi	sp,sp,12
    555c:	f800283a 	ret
    5560:	80800017 	ldw	r2,0(r16)
    5564:	103ff826 	beq	r2,zero,5548 <_read_r+0x3c>
    5568:	88800015 	stw	r2,0(r17)
    556c:	1805883a 	mov	r2,r3
    5570:	dfc00217 	ldw	ra,8(sp)
    5574:	dc400117 	ldw	r17,4(sp)
    5578:	dc000017 	ldw	r16,0(sp)
    557c:	dec00304 	addi	sp,sp,12
    5580:	f800283a 	ret

00005584 <_exit>:
    5584:	20000226 	beq	r4,zero,5590 <_exit+0xc>
    5588:	002af070 	cmpltui	zero,zero,43969
    558c:	00000106 	br	5594 <_exit+0x10>
    5590:	002af0b0 	cmpltui	zero,zero,43970
    5594:	003fff06 	br	5594 <_exit+0x10>

00005598 <fstat>:
    5598:	deffff04 	addi	sp,sp,-4
    559c:	dfc00015 	stw	ra,0(sp)
    55a0:	20000e16 	blt	r4,zero,55dc <fstat+0x44>
    55a4:	20c00324 	muli	r3,r4,12
    55a8:	00800034 	movhi	r2,0
    55ac:	109c3c04 	addi	r2,r2,28912
    55b0:	1889883a 	add	r4,r3,r2
    55b4:	20000926 	beq	r4,zero,55dc <fstat+0x44>
    55b8:	20800017 	ldw	r2,0(r4)
    55bc:	10800817 	ldw	r2,32(r2)
    55c0:	10000226 	beq	r2,zero,55cc <fstat+0x34>
    55c4:	103ee83a 	callr	r2
    55c8:	00001006 	br	560c <fstat+0x74>
    55cc:	00880004 	movi	r2,8192
    55d0:	28800115 	stw	r2,4(r5)
    55d4:	0005883a 	mov	r2,zero
    55d8:	00000c06 	br	560c <fstat+0x74>
    55dc:	00800034 	movhi	r2,0
    55e0:	109ebd04 	addi	r2,r2,31476
    55e4:	10800017 	ldw	r2,0(r2)
    55e8:	1000031e 	bne	r2,zero,55f8 <fstat+0x60>
    55ec:	00c00074 	movhi	r3,1
    55f0:	18e68a04 	addi	r3,r3,-26072
    55f4:	00000206 	br	5600 <fstat+0x68>
    55f8:	103ee83a 	callr	r2
    55fc:	1007883a 	mov	r3,r2
    5600:	00801444 	movi	r2,81
    5604:	18800015 	stw	r2,0(r3)
    5608:	00bfffc4 	movi	r2,-1
    560c:	dfc00017 	ldw	ra,0(sp)
    5610:	dec00104 	addi	sp,sp,4
    5614:	f800283a 	ret

00005618 <isatty>:
    5618:	defff004 	addi	sp,sp,-64
    561c:	dfc00f15 	stw	ra,60(sp)
    5620:	20000f16 	blt	r4,zero,5660 <isatty+0x48>
    5624:	20c00324 	muli	r3,r4,12
    5628:	00800034 	movhi	r2,0
    562c:	109c3c04 	addi	r2,r2,28912
    5630:	1885883a 	add	r2,r3,r2
    5634:	10000a26 	beq	r2,zero,5660 <isatty+0x48>
    5638:	10800017 	ldw	r2,0(r2)
    563c:	10800817 	ldw	r2,32(r2)
    5640:	1000021e 	bne	r2,zero,564c <isatty+0x34>
    5644:	00800044 	movi	r2,1
    5648:	00001106 	br	5690 <isatty+0x78>
    564c:	d80b883a 	mov	r5,sp
    5650:	00055980 	call	5598 <fstat>
    5654:	d8800117 	ldw	r2,4(sp)
    5658:	10880020 	cmpeqi	r2,r2,8192
    565c:	00000c06 	br	5690 <isatty+0x78>
    5660:	00800034 	movhi	r2,0
    5664:	109ebd04 	addi	r2,r2,31476
    5668:	10800017 	ldw	r2,0(r2)
    566c:	1000031e 	bne	r2,zero,567c <isatty+0x64>
    5670:	00c00074 	movhi	r3,1
    5674:	18e68a04 	addi	r3,r3,-26072
    5678:	00000206 	br	5684 <isatty+0x6c>
    567c:	103ee83a 	callr	r2
    5680:	1007883a 	mov	r3,r2
    5684:	00801444 	movi	r2,81
    5688:	18800015 	stw	r2,0(r3)
    568c:	0005883a 	mov	r2,zero
    5690:	dfc00f17 	ldw	ra,60(sp)
    5694:	dec01004 	addi	sp,sp,64
    5698:	f800283a 	ret

0000569c <lseek>:
    569c:	defffe04 	addi	sp,sp,-8
    56a0:	dfc00115 	stw	ra,4(sp)
    56a4:	dc000015 	stw	r16,0(sp)
    56a8:	2000020e 	bge	r4,zero,56b4 <lseek+0x18>
    56ac:	043febc4 	movi	r16,-81
    56b0:	00000d06 	br	56e8 <lseek+0x4c>
    56b4:	20c00324 	muli	r3,r4,12
    56b8:	00800034 	movhi	r2,0
    56bc:	109c3c04 	addi	r2,r2,28912
    56c0:	1889883a 	add	r4,r3,r2
    56c4:	20001526 	beq	r4,zero,571c <lseek+0x80>
    56c8:	20800017 	ldw	r2,0(r4)
    56cc:	10800717 	ldw	r2,28(r2)
    56d0:	1000021e 	bne	r2,zero,56dc <lseek+0x40>
    56d4:	043fde84 	movi	r16,-134
    56d8:	00000306 	br	56e8 <lseek+0x4c>
    56dc:	103ee83a 	callr	r2
    56e0:	1000100e 	bge	r2,zero,5724 <lseek+0x88>
    56e4:	1021883a 	mov	r16,r2
    56e8:	00800034 	movhi	r2,0
    56ec:	109ebd04 	addi	r2,r2,31476
    56f0:	10800017 	ldw	r2,0(r2)
    56f4:	1000031e 	bne	r2,zero,5704 <lseek+0x68>
    56f8:	00c00074 	movhi	r3,1
    56fc:	18e68a04 	addi	r3,r3,-26072
    5700:	00000206 	br	570c <lseek+0x70>
    5704:	103ee83a 	callr	r2
    5708:	1007883a 	mov	r3,r2
    570c:	0405c83a 	sub	r2,zero,r16
    5710:	18800015 	stw	r2,0(r3)
    5714:	00bfffc4 	movi	r2,-1
    5718:	00000206 	br	5724 <lseek+0x88>
    571c:	043febc4 	movi	r16,-81
    5720:	003ff106 	br	56e8 <lseek+0x4c>
    5724:	dfc00117 	ldw	ra,4(sp)
    5728:	dc000017 	ldw	r16,0(sp)
    572c:	dec00204 	addi	sp,sp,8
    5730:	f800283a 	ret

00005734 <__malloc_lock>:
    5734:	f800283a 	ret

00005738 <__malloc_unlock>:
    5738:	f800283a 	ret

0000573c <read>:
    573c:	defffe04 	addi	sp,sp,-8
    5740:	dfc00115 	stw	ra,4(sp)
    5744:	dc000015 	stw	r16,0(sp)
    5748:	20002916 	blt	r4,zero,57f0 <read+0xb4>
    574c:	20c00324 	muli	r3,r4,12
    5750:	00800034 	movhi	r2,0
    5754:	109c3c04 	addi	r2,r2,28912
    5758:	1889883a 	add	r4,r3,r2
    575c:	20002426 	beq	r4,zero,57f0 <read+0xb4>
    5760:	20800217 	ldw	r2,8(r4)
    5764:	108000cc 	andi	r2,r2,3
    5768:	00c00044 	movi	r3,1
    576c:	10c01326 	beq	r2,r3,57bc <read+0x80>
    5770:	20800017 	ldw	r2,0(r4)
    5774:	10800517 	ldw	r2,20(r2)
    5778:	10001026 	beq	r2,zero,57bc <read+0x80>
    577c:	103ee83a 	callr	r2
    5780:	1021883a 	mov	r16,r2
    5784:	1000260e 	bge	r2,zero,5820 <read+0xe4>
    5788:	00800034 	movhi	r2,0
    578c:	109ebd04 	addi	r2,r2,31476
    5790:	10800017 	ldw	r2,0(r2)
    5794:	1000031e 	bne	r2,zero,57a4 <read+0x68>
    5798:	00c00074 	movhi	r3,1
    579c:	18e68a04 	addi	r3,r3,-26072
    57a0:	00000206 	br	57ac <read+0x70>
    57a4:	103ee83a 	callr	r2
    57a8:	1007883a 	mov	r3,r2
    57ac:	0405c83a 	sub	r2,zero,r16
    57b0:	18800015 	stw	r2,0(r3)
    57b4:	043fffc4 	movi	r16,-1
    57b8:	00001906 	br	5820 <read+0xe4>
    57bc:	00800034 	movhi	r2,0
    57c0:	109ebd04 	addi	r2,r2,31476
    57c4:	10800017 	ldw	r2,0(r2)
    57c8:	1000031e 	bne	r2,zero,57d8 <read+0x9c>
    57cc:	00c00074 	movhi	r3,1
    57d0:	18e68a04 	addi	r3,r3,-26072
    57d4:	00000206 	br	57e0 <read+0xa4>
    57d8:	103ee83a 	callr	r2
    57dc:	1007883a 	mov	r3,r2
    57e0:	00800344 	movi	r2,13
    57e4:	18800015 	stw	r2,0(r3)
    57e8:	043fffc4 	movi	r16,-1
    57ec:	00000c06 	br	5820 <read+0xe4>
    57f0:	00800034 	movhi	r2,0
    57f4:	109ebd04 	addi	r2,r2,31476
    57f8:	10800017 	ldw	r2,0(r2)
    57fc:	1000031e 	bne	r2,zero,580c <read+0xd0>
    5800:	00c00074 	movhi	r3,1
    5804:	18e68a04 	addi	r3,r3,-26072
    5808:	00000206 	br	5814 <read+0xd8>
    580c:	103ee83a 	callr	r2
    5810:	1007883a 	mov	r3,r2
    5814:	00801444 	movi	r2,81
    5818:	18800015 	stw	r2,0(r3)
    581c:	043fffc4 	movi	r16,-1
    5820:	8005883a 	mov	r2,r16
    5824:	dfc00117 	ldw	ra,4(sp)
    5828:	dc000017 	ldw	r16,0(sp)
    582c:	dec00204 	addi	sp,sp,8
    5830:	f800283a 	ret

00005834 <sbrk>:
    5834:	000b303a 	rdctl	r5,status
    5838:	00bfff84 	movi	r2,-2
    583c:	2884703a 	and	r2,r5,r2
    5840:	1001703a 	wrctl	status,r2
    5844:	d0a02617 	ldw	r2,-32616(gp)
    5848:	108000c4 	addi	r2,r2,3
    584c:	00ffff04 	movi	r3,-4
    5850:	10c6703a 	and	r3,r2,r3
    5854:	d0e02615 	stw	r3,-32616(gp)
    5858:	1909883a 	add	r4,r3,r4
    585c:	00820034 	movhi	r2,2048
    5860:	10800004 	addi	r2,r2,0
    5864:	1100032e 	bgeu	r2,r4,5874 <sbrk+0x40>
    5868:	2801703a 	wrctl	status,r5
    586c:	00ffffc4 	movi	r3,-1
    5870:	00000206 	br	587c <sbrk+0x48>
    5874:	d1202615 	stw	r4,-32616(gp)
    5878:	2801703a 	wrctl	status,r5
    587c:	1805883a 	mov	r2,r3
    5880:	f800283a 	ret

00005884 <write>:
    5884:	defffe04 	addi	sp,sp,-8
    5888:	dfc00115 	stw	ra,4(sp)
    588c:	dc000015 	stw	r16,0(sp)
    5890:	20002816 	blt	r4,zero,5934 <write+0xb0>
    5894:	20c00324 	muli	r3,r4,12
    5898:	00800034 	movhi	r2,0
    589c:	109c3c04 	addi	r2,r2,28912
    58a0:	1889883a 	add	r4,r3,r2
    58a4:	20002326 	beq	r4,zero,5934 <write+0xb0>
    58a8:	20800217 	ldw	r2,8(r4)
    58ac:	108000cc 	andi	r2,r2,3
    58b0:	10001326 	beq	r2,zero,5900 <write+0x7c>
    58b4:	20800017 	ldw	r2,0(r4)
    58b8:	10800617 	ldw	r2,24(r2)
    58bc:	10001026 	beq	r2,zero,5900 <write+0x7c>
    58c0:	103ee83a 	callr	r2
    58c4:	1021883a 	mov	r16,r2
    58c8:	1000260e 	bge	r2,zero,5964 <write+0xe0>
    58cc:	00800034 	movhi	r2,0
    58d0:	109ebd04 	addi	r2,r2,31476
    58d4:	10800017 	ldw	r2,0(r2)
    58d8:	1000031e 	bne	r2,zero,58e8 <write+0x64>
    58dc:	00c00074 	movhi	r3,1
    58e0:	18e68a04 	addi	r3,r3,-26072
    58e4:	00000206 	br	58f0 <write+0x6c>
    58e8:	103ee83a 	callr	r2
    58ec:	1007883a 	mov	r3,r2
    58f0:	0405c83a 	sub	r2,zero,r16
    58f4:	18800015 	stw	r2,0(r3)
    58f8:	043fffc4 	movi	r16,-1
    58fc:	00001906 	br	5964 <write+0xe0>
    5900:	00800034 	movhi	r2,0
    5904:	109ebd04 	addi	r2,r2,31476
    5908:	10800017 	ldw	r2,0(r2)
    590c:	1000031e 	bne	r2,zero,591c <write+0x98>
    5910:	00c00074 	movhi	r3,1
    5914:	18e68a04 	addi	r3,r3,-26072
    5918:	00000206 	br	5924 <write+0xa0>
    591c:	103ee83a 	callr	r2
    5920:	1007883a 	mov	r3,r2
    5924:	00800344 	movi	r2,13
    5928:	18800015 	stw	r2,0(r3)
    592c:	043fffc4 	movi	r16,-1
    5930:	00000c06 	br	5964 <write+0xe0>
    5934:	00800034 	movhi	r2,0
    5938:	109ebd04 	addi	r2,r2,31476
    593c:	10800017 	ldw	r2,0(r2)
    5940:	1000031e 	bne	r2,zero,5950 <write+0xcc>
    5944:	00c00074 	movhi	r3,1
    5948:	18e68a04 	addi	r3,r3,-26072
    594c:	00000206 	br	5958 <write+0xd4>
    5950:	103ee83a 	callr	r2
    5954:	1007883a 	mov	r3,r2
    5958:	00801444 	movi	r2,81
    595c:	18800015 	stw	r2,0(r3)
    5960:	043fffc4 	movi	r16,-1
    5964:	8005883a 	mov	r2,r16
    5968:	dfc00117 	ldw	ra,4(sp)
    596c:	dc000017 	ldw	r16,0(sp)
    5970:	dec00204 	addi	sp,sp,8
    5974:	f800283a 	ret
    5978:	00003a18 	cmpnei	zero,zero,232
